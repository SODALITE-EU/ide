data_types:
	tosca.datatypes.Root:
		derived_from: tosca.datatypes.Root
		description: 'The TOSCA root Data Type all other TOSCA base Data Types derive from'
	
	tosca.datatypes.json:
		derived_from: string
	
	tosca.datatypes.xml:
		derived_from: string 
	
	tosca.datatypes.Credential:
		derived_from:tosca.datatypes.Root
		properties:
			protocol:
				type: string
				required: false
			
			token_type:
				type: string
				default: 'password'
			
			token:
				type: string
			
			keys:
				type: map
				required: false
				entry_schema: string
			
			user:
				type: string
				required: false
			
		
	
	tosca.datatypes.TimeInterval:
		derived_from: tosca.datatypes.Root
		properties:
			start_time:
				type: timestamp
			
			end_time:
				type: timestamp
			
		
	
	tosca.datatypes.network.NetworkInfo:
		derived_from: tosca.datatypes.Root
		properties:
			network_name:
				type: string
			
			network_id:
				type: string
			
			addresses:
				type: list
				entry_schema: string
			
		
	
	tosca.datatypes.network.PortInfo:
		derived_from: tosca.datatypes.Root
		properties:
			port_name:
				type: string
			
			port_id:
				type: string
			
			network_id:
				type: string
			
			mac_address:
				type: string
			
			addresses:
				type: list
				entry_schema: string
			
		
	
	tosca.datatypes.network.PortDef:
		derived_from: integer
		constraints:
			in_range:[ 1, 65535 ]
		
	
	tosca.datatypes.network.PortSpec:
		derived_from: tosca.datatypes.Root
		properties:
			protocol:
				type: string
				required: false
				default: 'tcp'
				constraints:
					valid_values: ["udp", "tcp", "igmp"] 
				
					
			
			target:
				type: tosca.datatypes.network.PortDef
				required: false
			
			target_range:
				type: range
				required: false
				constraints:
					in_range:[ 1, 65535]
				
			
			source:
				type: tosca.datatypes.network.PortDef
				required: false
			
		
	
	
	//Primitive datatypes
	string:
		description: "string primitive type" 
	integer:
		description: "integer primitive type"
	float:
		description: "float primitive type"
	boolean:
		description: "boolean primitive type"
	map:
		description: "dictionary primitive type"
	timestamp:
		description: "time stamp primitive type"
	list:
		description: "list primitive type"
	range:
		description: "range primitive type"
	scalar-unit.frequency:
		description: "frequency primitive type"
	scalar-unit.size:
		description: "size primitive type"
	version-type:
		description: "version primitive type"
	
	//Optimization taxonomy
	tosca.datatypes.optimization.Root:
		derived_from: tosca.datatypes.Root
	
	tosca.datatypes.optimization.Autotuning:
		derived_from: tosca.datatypes.optimization.Root
	
	tosca.datatypes.optimization.MultiArchitectureSupport:
		derived_from: tosca.datatypes.optimization.Root
	
	tosca.datatypes.optimization.AITrainingOrInference:
		derived_from: tosca.datatypes.optimization.Root
	
	tosca.datatypes.optimization.AITrainingOrInference.AIFramework:
		derived_from: tosca.datatypes.optimization.AITrainingOrInference
	
	tosca.datatypes.optimization.AITrainingOrInference.GraphCompiler:
		derived_from: tosca.datatypes.optimization.AITrainingOrInference
	
	tosca.datatypes.optimization.AITrainingOrInference.ExtractTransformLoad:
		derived_from: tosca.datatypes.optimization.AITrainingOrInference
	
	tosca.datatypes.optimization.BigDataAnalytics:
		derived_from: tosca.datatypes.optimization.Root
	
	tosca.datatypes.optimization.BigDataAnalytics.AnalyticsFramework:
		derived_from: tosca.datatypes.optimization.BigDataAnalytics
	
	tosca.datatypes.optimization.BigDataAnalytics.Storage:
		derived_from: tosca.datatypes.optimization.BigDataAnalytics
	
	tosca.datatypes.optimization.HPCSolver:
		derived_from: tosca.datatypes.optimization.Root
	
	tosca.datatypes.optimization.HPCSolver.Libraries:
		derived_from: tosca.datatypes.optimization.HPCSolver
	
	tosca.datatypes.optimization.HPCSolver.MPI:
		derived_from: tosca.datatypes.optimization.HPCSolver
	
	tosca.datatypes.optimization.HPCSolver.OpenMP:
		derived_from: tosca.datatypes.optimization.HPCSolver
	
	tosca.datatypes.optimization.HPCSolver.OpenACC:
		derived_from: tosca.datatypes.optimization.HPCSolver
	


artifact_types:
	tosca.artifacts.Root:
		derived_from: tosca.artifacts.Root
		description: 'The TOSCA Artifact Type all other TOSCA Artifact Types derive from'
	
	tosca.artifacts.File:
		derived_from: tosca.artifacts.Root
	
	tosca.artifacts.Deployment:
		derived_from: tosca.artifacts.Root
		description: 'TOSCA base type for deployment artifacts'
	
	tosca.artifacts.Deployment.Image:
		derived_from: tosca.artifacts.Deployment
	
	tosca.artifacts.Deployment.Image.VM:
		derived_from: tosca.artifacts.Deployment.Image
		description: 'Virtual Machine (VM) Image'
	
	tosca.artifacts.Implementation:
		derived_from: tosca.artifacts.Root
		description: 'TOSCA base type for implementation artifacts'
	
	tosca.artifacts.Implementation.Bash:
		derived_from: tosca.artifacts.Implementation
		description: 'Script artifact for the Unix Bash shell'
		mime_type: 'application/x-sh'
		file_ext: 'sh'
	
	tosca.artifacts.Implementation.Python:
		derived_from: tosca.artifacts.Implementation
		description: 'Artifact for the interpreted Python language'
		mime_type: 'application/x-python'
		file_ext: 'py'
	
	tosca.artifacts.template:
		derived_from: tosca.artifacts.Root
		description: 'TOSCA base type for template type artifacts'
	


capability_types:
	tosca.capabilities.Root:
		derived_from: tosca.capabilities.Root
		description: 'The TOSCA root Capability Type all other TOSCA Capability Types derive from'
	
	tosca.capabilities.Node:
		derived_from: tosca.capabilities.Root
	
	tosca.capabilities.Container:
		derived_from: tosca.capabilities.Root
	
	tosca.capabilities.Compute:
		derived_from: tosca.capabilities.Container
		properties:
			name:
				type: string
				required: false
			
			num_cpus:
				type: integer
				required: false
				constraints:
					greater_or_equal: 1
				
			
			num_gpus:
				type: integer
				required: false
				constraints:
					greater_or_equal: 1
				
			
			cpu_frequency:
				type: scalar-unit.frequency
				required: false
				constraints:
					greater_or_equal: "0.1 Ghz"
				
			
			disk_size:
				type: scalar-unit.size
				required: false
				constraints:
					greater_or_equal: "0 MB"
				
			
			mem_size:
				type: scalar-unit.size
				required: false
				constraints:
					greater_or_equal: "0 MB"
				
			
		
	
	tosca.capabilities.Network:
		derived_from: tosca.capabilities.Root
		properties:
			name:
				type: string
				required: false
			
		
	
	tosca.capabilities.Storage:
		derived_from: tosca.capabilities.Root
		properties:
			name:
				type: string
				required: false
			
		
	
	tosca.capabilities.Endpoint:
		derived_from: tosca.capabilities.Root
		properties:
			protocol:
				type: string
				required: false
				default: 'tcp'
			
			port:
				type: tosca.datatypes.network.PortDef
				required: false
			
			secure:
				type: boolean
				required: false
				default: 'false'
			
			url_path:
				type: boolean
				required: false
			
			port_name:
				type: string
				required: false
			
			network_name:
				type: string
				required: false
				default: 'PRIVATE'
			
			initiator:
				type: string
				required: false
				default: 'source'
				constraints:
					valid_values: ["source, target, peer"]
				
			
			ports:
				type: map
				required: false
				constraints:
					min_length: 1
				
				entry_schema: tosca.datatypes.network.PortSpec
			
		
		attributes:
			ip_address:
				type: string
			
		
	
	tosca.capabilities.Endpoint.Public:
		derived_from: tosca.capabilities.Endpoint
		properties:
			network_name:
				type: string
				default: 'PUBLIC'
				constraints:
					equal: "PUBLIC"
				
			
			floating:
				type: boolean
				description: "indicates that the public address should be allocated from a pool of floating IPs that are associated with the network."
				default: 'false'
				status: "experimental"
			
			dns_name:
				type: string
				description: "The optional name to register with DNS"
				required: false
				status: "experimental"
			
		
	
	tosca.capabilities.Endpoint.Admin:
		derived_from: tosca.capabilities.Endpoint
		properties:
			secure:
				type: boolean
				default: true
				constraints:
					equal: true
				
			
		
	
	tosca.capabilities.Endpoint.Database:
		derived_from: tosca.capabilities.Endpoint
	
	tosca.capabilities.Attachment:
		derived_from: tosca.capabilities.Root
	
	tosca.capabilities.OperatingSystem:
		derived_from: tosca.capabilities.Root
		properties:
			architecture:
				type: string
				required: false
			type :
				type: string
				required: false
			
			distribution:
				type: string
				required: false
			
			version:
				type: version-type
				required: false
			
		
	
	tosca.capabilities.Scalable:
		derived_from: tosca.capabilities.Root
		properties:
			min_instances:
				type: integer
				default: 1
		
			max_instances:
				type: integer
				default: 1
			
			default_instances:
				type: integer
				required: false
			
		
	
	tosca.capabilities.network.Bindable:
		derived_from: tosca.capabilities.Node
	


interface_types:
	tosca.interfaces.Root:
		derived_from: tosca.interfaces.Root
		description: 'The TOSCA root Interface Type all other TOSCA Interface Types derive from'
	
	tosca.interfaces.node.lifecycle.Standard:
		derived_from: tosca.interfaces.Root
		operations:
			create:
				description: 'Standard lifecycle create operation.'
			
			configure:
				description: 'Standard lifecycle configure operation.'
			
			start:
				description: 'Standard lifecycle start operation.'
			
			stop:
				description: 'Standard lifecycle stop operation.'
			
			delete:
				description: 'Standard lifecycle delete operation.'
			
		
	
	tosca.interfaces.relationship.Configure:
		derived_from: tosca.interfaces.Root
		operations:
			pre_configure_source:
				description: 'Operation to pre-configure the source endpoint.'
			
			pre_configure_target:
				description: 'Operation to pre-configure the target endpoint.'
			
			post_configure_source:
				description: 'Operation to post-configure the source endpoint.'
			
			post_configure_target:
				description: 'Operation to post-configure the target endpoint.'
			
			add_target:
				description: 'Operation to notify the source node of a target node being added via a relationship.'
			
			add_source:
				description: 'Operation to notify the target node of a source node which is now available via a relationship.'
			
			target_changed:
				description: 'Operation to notify source some property or attribute of the target changed.'
			
			remove_target:
				description: 'Operation to remove a target node.'
			
		
	


relationship_types:
	tosca.relationships.Root:
		derived_from: tosca.relationships.Root
		description: 'The TOSCA root Relationship Type all other TOSCA base Relationship Types derive from'
		attributes:
			tosca_id:
				type: string
			
			tosca_name:
				type: string
			
		
		interfaces:
			Configure:
				type: tosca.interfaces.relationship.Configure
	
	tosca.relationships.DependsOn: 
		derived_from: tosca.relationships.Root
		valid_target_types:[tosca.capabilities.Node]
	
	tosca.relationships.HostedOn:
		derived_from: tosca.relationships.Root
		valid_target_types:[tosca.capabilities.Container]
	
	tosca.relationships.ConnectsTo:
		derived_from: tosca.relationships.Root
		properties:
			credential:
				type: tosca.datatypes.Credential
				required: false
			
		
		valid_target_types:[tosca.capabilities.Endpoint]
	
	
	tosca.relationships.AttachesTo:
		derived_from: tosca.relationships.Root
		properties:
			location:
				type: string
				constraints:
					min_length: 1
				
			
			device:
				type: string
				required: false
			
		
		valid_target_types:[tosca.capabilities.Attachment]
	
	tosca.relationships.RoutesTo:
		derived_from: tosca.relationships.ConnectsTo
		valid_target_types:[tosca.capabilities.Endpoint]
	


node_types:
	tosca.nodes.Root:
		derived_from: tosca.nodes.Root
		description: 'The TOSCA Node Type all other TOSCA base Node Types derive from.'
		attributes:
			tosca_id:
				type: string
			
			tosca_name:
				type: string
			
			state:
				type: string
			
		
		interfaces:
			Standard:
				type: tosca.interfaces.node.lifecycle.Standard
			
		
		capabilities:
			feature:
				type: tosca.capabilities.Node
			
		
		requirements:
			dependency:
				capability: tosca.capabilities.Node
				node: tosca.nodes.Root
				relationship: tosca.relationships.DependsOn
				occurrences:["0", "UNBOUNDED"]
			
		
	
	tosca.nodes.Abstract.Compute:
		derived_from: tosca.nodes.Root
		capabilities:
			host:
				type: tosca.capabilities.Compute
				valid_source_types:[]
			
		
	
	tosca.nodes.Compute:
		derived_from: tosca.nodes.Abstract.Compute
		attributes:
			private_address:
				type: string
			
			public_address:
				type: string
			
			networks:
				type: map
			
			entry_schema :
				type: tosca.datatypes.network.NetworkInfo
			
			ports:
				type: map
				entry_schema: tosca.datatypes.network.PortInfo
			
		
		capabilities:
			host:
				type: tosca.capabilities.Compute
				valid_source_types:[tosca.nodes.SoftwareComponent]
			
			endpoint:
				type: tosca.capabilities.Endpoint.Admin
			
			os:
				type: tosca.capabilities.OperatingSystem
			
			scalable:
				type: tosca.capabilities.Scalable
			
			binding:
				type: tosca.capabilities.network.Bindable
			
		
		requirements:
			local_storage:
				capability: tosca.capabilities.Attachment
				node: tosca.nodes.Storage.BlockStorage
				relationship: tosca.relationships.AttachesTo
				occurrences:[0, "UNBOUNDED"]
			
		
		
	
	tosca.nodes.SoftwareComponent:
		derived_from: tosca.nodes.Root
		properties:
			component_version:
				type: version-type
				required: false
			
			admin_credential:
				type: tosca.datatypes.Credential
				required: false
			
		
		requirements:
			host:
				capability: tosca.capabilities.Compute
				node: tosca.nodes.Compute
				relationship: tosca.relationships.HostedOn
			
		
	
	tosca.nodes.WebServer:
		derived_from: tosca.nodes.SoftwareComponent
		capabilities:
			data_endpoint:
				type: tosca.capabilities.Endpoint
			
			admin_endpoint:
				type: tosca.capabilities.Endpoint.Admin
			
			host:
				type: tosca.capabilities.Compute
				valid_source_types:[tosca.nodes.WebApplication] 
			
		
	
	tosca.nodes.WebApplication:
		derived_from: tosca.nodes.Root
		properties:
			context_root:
				type: string
			
		
		capabilities:
			app_endpoint:
				type: tosca.capabilities.Endpoint
			
		
		requirements:
			host:
				capability: tosca.capabilities.Compute
				node: tosca.nodes.WebServer
				relationship: tosca.relationships.HostedOn
			
		
	
	tosca.nodes.DBMS:
		derived_from: tosca.nodes.SoftwareComponent
		properties:
			root_password:
				type: string
				description: 'the optional root password for the DBMS service'
				required: false
			
			port:
				type: integer
				description: 'The port the DBMS service will listen to for data and requests.'
				required: false
			
		
		capabilities:
			host:
				type: tosca.capabilities.Compute
				valid_source_types:[tosca.nodes.Database]
			
		
	
	tosca.nodes.Database:
		derived_from: tosca.nodes.Root
		properties:
			name:
				type: string
				description: 'the logical name of the database'
			
			port:
				type: integer
				description: 'The port the underlying database service will listen to for data.'
			
			user:
				type: string
				description: 'the optional user account name for DB administration'
			
			password:
				type: string
				description: 'the optional password for the DB user account'
			
		
		capabilities:
			database_endpoint:
				type: tosca.capabilities.Endpoint.Database
			
		
		requirements:
			host:
				capability: tosca.capabilities.Compute
				node: tosca.nodes.DBMS
				relationship: tosca.relationships.HostedOn
	
	tosca.nodes.Abstract.Storage:
		derived_from: tosca.nodes.Root
		properties:
			name:
				type: string
			
			size:
				type: scalar-unit.size
				default: '0 MB'
				constraints:
					greater_or_equal: "0 MB"
				
			
		
	
	tosca.nodes.Storage.ObjectStorage:
		derived_from: tosca.nodes.Abstract.Storage
		properties:
			maxsize:
				type: scalar-unit.size
				constraints:
					greater_or_equal: "0 GB"
				
			
		
		capabilities:
			storage_endpoint:
				type: tosca.capabilities.Endpoint
			
		
	
	tosca.nodes.Storage.BlockStorage:
		derived_from: tosca.nodes.Abstract.Storage
		properties:
			volume_id:
				type: string
				required: false
			
			snapshot_id:
				type: string
				required: false
			
		
		capabilities:
			attachment:
				type: tosca.capabilities.Attachment
			
		
	
	tosca.nodes.Container.Runtime:
		derived_from: tosca.nodes.SoftwareComponent
		capabilities:
			host:
				type: tosca.capabilities.Compute
				valid_source_types:[tosca.nodes.Container.Application] 
			
			scalable:
				type: tosca.capabilities.Scalable
			
		
	
	tosca.nodes.Container.Application:
		derived_from: tosca.nodes.Root
		requirements:
			host:
				capability: tosca.capabilities.Compute
				node: tosca.nodes.Container.Runtime
				relationship: tosca.relationships.HostedOn
			
			storage:
				capability: tosca.capabilities.Storage
			
			network:
				capability: tosca.capabilities.Endpoint
			
		
	
	tosca.nodes.LoadBalancer:
		derived_from: tosca.nodes.Root
		properties:
			algorithm:
				type: string
				required: false
				status: "experimental"
			
		
		capabilities:
			client:
				type: tosca.capabilities.Endpoint.Public
				description: 'The Floating (IP) clients on the public network can connect to.'
				occurrences:[0, "UNBOUNDED"]
			
		requirements:
			application:
				capability: tosca.capabilities.Endpoint
				relationship: tosca.relationships.RoutesTo
				occurrences:[0, "UNBOUNDED"]

policy_types:
	tosca.policies.Root:
		derived_from: tosca.policies.Root
		description: 'The TOSCA Policy Type all other TOSCA Policy Types derive from.'
	
	tosca.policies.Placement:
		derived_from: tosca.policies.Root
		description: 'The TOSCA Policy Type definition that is used to govern placement of TOSCA nodes or groups of nodes.'
	
	tosca.policies.Scaling:
		derived_from: tosca.policies.Root
		description: 'The TOSCA Policy Type definition that is used to govern scaling of TOSCA nodes or groups of nodes.'
	
	tosca.policies.Update:
		derived_from: tosca.policies.Root
		description: 'The TOSCA Policy Type definition that is used to govern update of TOSCA nodes or groups of nodes.'
	
	tosca.policies.Performance:
		derived_from: tosca.policies.Root
		description: 'The TOSCA Policy Type definition that is used to declare performance requirements for TOSCA nodes or groups of nodes.'
	
