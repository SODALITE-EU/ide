module: modak

inputs:
	modak-endpoint:
		type: string
		
node_templates:

	//Common target: HLRS testbed
	hlrs-testbed-target:
		type: sodalite.nodes.modak.target
		properties:
			name: "hlrs_testbed"
			queue_type: "torque"

	//MODAK instance
	modak-instance:
		type: sodalite.nodes.modak
		properties:
			endpoint: get_input: modak-endpoint
			
	//SOLVER JOB
	solver-job:
		type: sodalite.nodes.modak.job
		properties:
			job_script: "/tmp/solver-job-timestamp.sh"

			job_options:
				job_name: "solver"
				wall_time_limit: "1:00:00"
				node_count: 2
				core_count: 40
				process_count_per_node: 40
				standard_output_file: "file.out"
				standard_error_file: "file.err"
				combine_stdout_stderr: true
				request_event_notification: "abe"
				email_address: "some@email.com"

			application:
				app_tag: "solver_clinicalUC"
				container_runtime: "ethcscs/mpich:ub1804_cuda101_mpi314_gnugprof"
				app_type: "mpi"
				executable: "${ASTER_ROOT}/14.4/bin/aster "
				arguments: "${ASTER_ROOT}/14.4/lib/aster/Execution/E_SUPERV.py 
					-commandes fort.1 --num_job=1432 --mode=interactif --rep_outils=${ASTER_ROOT}/outils 
					--rep_mat=${ASTER_ROOT}/14.4/share/aster/materiau 
					--rep_dex=${ASTER_ROOT}/14.4/share/aster/datg 
					--numthreads=1 --suivi_batch --memjeveux=8192.0 --tpmax=3600.0"
				mpi_ranks: 40
				threads: 1
				build:
					src: "https://www.code-aster.org/FICHIERS/aster-full-src-14.4.0-1.noarch.tar.gz"
					build_command: "python3 setup.py install\n"

			target:
				name: "hlrs_testbed"
				queue_type: "torque"

			optimisation:
				enable_opt_build: true
				enable_autotuning: true
				app_type: "hpc"
				opt_build: 
					cpu_type: "x86"
					acc_type: ""
				autotuning: 
					tuner: "cresta"
					input: "dsl text"
				app_type-hpc: 
					config:
						parallelisation: "mpi"
					data:
						location: "L1L2_NonLinear_prepared.tar.gz"
					parallelisation-mpi: 
						library: "mpich"
						version: 3.14
					scaling_efficiency: 0.75

		requirements:
			modak_endpoint: 
				node: modak-instance
			target: 
				node: hlrs-testbed-target
		
	//TensorFlow-GPU SNOW JOB
	tf-snow-job:
		type: sodalite.nodes.modak.job
		properties:

			ob_script: "/tmp/tf-snow-job-timestamp.sh"

			job_options:
				job_name: "skyline-extraction-training"
				wall_time_limit: "12:00:00 "
				node_count: 1
				core_count: 40
				request_gpus: 1
				request_specific_nodes: "ssd"
				standard_output_file: "skyline-extraction-training.out"
				standard_error_file: "skyline-extraction-training.err"
				combine_stdout_stderr: true
				copy_environment: true
				request_event_notification: "abe"
				email_address: "some@email.com"

			application:
				app_tag: "skyline-extraction-training"
				container_runtime: "tensorflow/tensorflow:2.1.0-gpu-py3"
				app_type: "python"
				executable: "python3 resnet/resnet_imagenet_main.py"
				arguments: "--data_dir=/mnt/nfs/home/karthee/AI/data/tf_records/train/ -batch_size=96 --train_epochs=3 --train_steps=10 --use_synthetic_data=false"

			target:
				name: "hlrs_testbed"
				queue_type: "torque"

			optimisation:
				enable_opt_build: true
				enable_autotuning: true
				app_type: "ai_training"
				opt_build:
					cpu_type: "x86"
					acc_type: "nvidia"
				autotuning:
					tuner: "cresta"
					input: "dsl text"
				app_type-ai_training:
					config:
						ai_framework: "tensorflow"
					data: "{}"
					ai_framework-tensorflow:
						version: 2.1
						xla: true
              
		requirements:
			modak_endpoint: 
				node: modak-instance
			target: 
				node: hlrs-testbed-target	






			