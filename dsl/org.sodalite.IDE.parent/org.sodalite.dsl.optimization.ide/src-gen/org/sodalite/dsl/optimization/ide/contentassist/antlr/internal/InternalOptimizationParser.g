/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalOptimizationParser;

options {
	tokenVocab=InternalOptimizationLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.sodalite.dsl.optimization.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.sodalite.dsl.optimization.services.OptimizationGrammarAccess;

}
@members {
	private OptimizationGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Amd", "'amd'");
		tokenNameToValue.put("Arm", "'arm'");
		tokenNameToValue.put("Hpc", "'hpc'");
		tokenNameToValue.put("Mpi", "'mpi'");
		tokenNameToValue.put("Pgi", "'pgi'");
		tokenNameToValue.put("X86", "'x86'");
		tokenNameToValue.put("Cntk", "'cntk'");
		tokenNameToValue.put("Cray", "'cray'");
		tokenNameToValue.put("Etl", "'etl:'");
		tokenNameToValue.put("Fpga", "'fpga'");
		tokenNameToValue.put("None", "'none'");
		tokenNameToValue.put("Xla", "'xla:'");
		tokenNameToValue.put("Block", "'block'");
		tokenNameToValue.put("Cifar", "'cifar'");
		tokenNameToValue.put("Data", "'data:'");
		tokenNameToValue.put("Glow", "'glow:'");
		tokenNameToValue.put("Image", "'image'");
		tokenNameToValue.put("Keras", "'keras'");
		tokenNameToValue.put("Large", "'large'");
		tokenNameToValue.put("Mnist", "'mnist'");
		tokenNameToValue.put("Mpich", "'mpich'");
		tokenNameToValue.put("Mxnet", "'mxnet'");
		tokenNameToValue.put("Power", "'power'");
		tokenNameToValue.put("Size", "'size:'");
		tokenNameToValue.put("Small", "'small'");
		tokenNameToValue.put("Type", "'type:'");
		tokenNameToValue.put("Cache", "'cache:'");
		tokenNameToValue.put("Count", "'count:'");
		tokenNameToValue.put("Cresta", "'cresta'");
		tokenNameToValue.put("Input", "'input:'");
		tokenNameToValue.put("Medium", "'medium'");
		tokenNameToValue.put("Mvapch", "'mvapch'");
		tokenNameToValue.put("Nvidia", "'nvidia'");
		tokenNameToValue.put("Opencl", "'opencl'");
		tokenNameToValue.put("Openmp", "'openmp'");
		tokenNameToValue.put("Simple", "'simple'");
		tokenNameToValue.put("Tuner", "'tuner:'");
		tokenNameToValue.put("Config", "'config:'");
		tokenNameToValue.put("Layers", "'layers:'");
		tokenNameToValue.put("Openacc", "'openacc'");
		tokenNameToValue.put("Openmpi", "'openmpi'");
		tokenNameToValue.put("Pytorch", "'pytorch'");
		tokenNameToValue.put("Restart", "'restart'");
		tokenNameToValue.put("Autotune", "'autotune'");
		tokenNameToValue.put("Backend", "'backend:'");
		tokenNameToValue.put("Big_data", "'big_data'");
		tokenNameToValue.put("Imagenet", "'imagenet'");
		tokenNameToValue.put("Library", "'library:'");
		tokenNameToValue.put("Version", "'version:'");
		tokenNameToValue.put("Acc_type", "'acc_type:'");
		tokenNameToValue.put("Affinity", "'affinity:'");
		tokenNameToValue.put("App_type", "'app_type:'");
		tokenNameToValue.put("Basedata", "'basedata:'");
		tokenNameToValue.put("Compiler", "'compiler:'");
		tokenNameToValue.put("Cpu_type", "'cpu_type:'");
		tokenNameToValue.put("Location", "'location:'");
		tokenNameToValue.put("Prefetch", "'prefetch:'");
		tokenNameToValue.put("Opt_build", "'opt_build:'");
		tokenNameToValue.put("Tensorflow", "'tensorflow'");
		tokenNameToValue.put("Ai_training", "'ai_training'");
		tokenNameToValue.put("Autotuning", "'autotuning:'");
		tokenNameToValue.put("Parameters", "'parameters:'");
		tokenNameToValue.put("Translation", "'translation'");
		tokenNameToValue.put("Ai_inference", "'ai_inference'");
		tokenNameToValue.put("Optimization", "'optimization'");
		tokenNameToValue.put("Ai_framework", "'ai_framework:'");
		tokenNameToValue.put("App_typeHpc", "'app_type-hpc:'");
		tokenNameToValue.put("Message_size", "'message_size:'");
		tokenNameToValue.put("Number_of_acc", "'number_of_acc:'");
		tokenNameToValue.put("Recommendation", "'recommendation'");
		tokenNameToValue.put("Object_detection", "'object_detection'");
		tokenNameToValue.put("Parallelisation", "'parallelisation:'");
		tokenNameToValue.put("Enable_opt_build", "'enable_opt_build:'");
		tokenNameToValue.put("Core_subscription", "'core_subscription:'");
		tokenNameToValue.put("Enable_autotuning", "'enable_autotuning:'");
		tokenNameToValue.put("Number_of_threads", "'number_of_threads:'");
		tokenNameToValue.put("Ai_frameworkKeras", "'ai_framework-keras:'");
		tokenNameToValue.put("Scaling_efficiency", "'scaling_efficiency:'");
		tokenNameToValue.put("Image_classification", "'image_classification'");
		tokenNameToValue.put("ParallelisationMpi", "'parallelisation-mpi:'");
		tokenNameToValue.put("Ai_frameworkPytorch", "'ai_framework-pytorch:'");
		tokenNameToValue.put("App_typeAi_training", "'app_type-ai_training:'");
		tokenNameToValue.put("Distributed_training", "'distributed_training:'");
		tokenNameToValue.put("ParallelisationOpencl", "'parallelisation-opencl:'");
		tokenNameToValue.put("ParallelisationOpenmp", "'parallelisation-openmp:'");
		tokenNameToValue.put("Reinforncement_learning", "'reinforncement_learning'");
		tokenNameToValue.put("Ai_frameworkTensorflow", "'ai_framework-tensorflow:'");
		tokenNameToValue.put("ParallelisationOpenacc", "'parallelisation-openacc:'");
	}

	public void setGrammarAccess(OptimizationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleOptimization_Model
entryRuleOptimization_Model
:
{ before(grammarAccess.getOptimization_ModelRule()); }
	 ruleOptimization_Model
{ after(grammarAccess.getOptimization_ModelRule()); } 
	 EOF 
;

// Rule Optimization_Model
ruleOptimization_Model 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptimization_ModelAccess().getGroup()); }
		(rule__Optimization_Model__Group__0)
		{ after(grammarAccess.getOptimization_ModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOptimization
entryRuleEOptimization
:
{ before(grammarAccess.getEOptimizationRule()); }
	 ruleEOptimization
{ after(grammarAccess.getEOptimizationRule()); } 
	 EOF 
;

// Rule EOptimization
ruleEOptimization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOptimizationAccess().getGroup()); }
		(rule__EOptimization__Group__0)
		{ after(grammarAccess.getEOptimizationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOptimizationCases
entryRuleEOptimizationCases
:
{ before(grammarAccess.getEOptimizationCasesRule()); }
	 ruleEOptimizationCases
{ after(grammarAccess.getEOptimizationCasesRule()); } 
	 EOF 
;

// Rule EOptimizationCases
ruleEOptimizationCases 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOptimizationCasesAccess().getAlternatives()); }
		(rule__EOptimizationCases__Alternatives)
		{ after(grammarAccess.getEOptimizationCasesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAITrainingCase
entryRuleEAITrainingCase
:
{ before(grammarAccess.getEAITrainingCaseRule()); }
	 ruleEAITrainingCase
{ after(grammarAccess.getEAITrainingCaseRule()); } 
	 EOF 
;

// Rule EAITrainingCase
ruleEAITrainingCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAITrainingCaseAccess().getGroup()); }
		(rule__EAITrainingCase__Group__0)
		{ after(grammarAccess.getEAITrainingCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEHPCCase
entryRuleEHPCCase
:
{ before(grammarAccess.getEHPCCaseRule()); }
	 ruleEHPCCase
{ after(grammarAccess.getEHPCCaseRule()); } 
	 EOF 
;

// Rule EHPCCase
ruleEHPCCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEHPCCaseAccess().getGroup()); }
		(rule__EHPCCase__Group__0)
		{ after(grammarAccess.getEHPCCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAppType
entryRuleEAppType
:
{ before(grammarAccess.getEAppTypeRule()); }
	 ruleEAppType
{ after(grammarAccess.getEAppTypeRule()); } 
	 EOF 
;

// Rule EAppType
ruleEAppType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAppTypeAccess().getAlternatives()); }
		(rule__EAppType__Alternatives)
		{ after(grammarAccess.getEAppTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOptBuild
entryRuleEOptBuild
:
{ before(grammarAccess.getEOptBuildRule()); }
	 ruleEOptBuild
{ after(grammarAccess.getEOptBuildRule()); } 
	 EOF 
;

// Rule EOptBuild
ruleEOptBuild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOptBuildAccess().getUnorderedGroup()); }
		(rule__EOptBuild__UnorderedGroup)
		{ after(grammarAccess.getEOptBuildAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleECPUType
entryRuleECPUType
:
{ before(grammarAccess.getECPUTypeRule()); }
	 ruleECPUType
{ after(grammarAccess.getECPUTypeRule()); } 
	 EOF 
;

// Rule ECPUType
ruleECPUType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getECPUTypeAccess().getAlternatives()); }
		(rule__ECPUType__Alternatives)
		{ after(grammarAccess.getECPUTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEACCType
entryRuleEACCType
:
{ before(grammarAccess.getEACCTypeRule()); }
	 ruleEACCType
{ after(grammarAccess.getEACCTypeRule()); } 
	 EOF 
;

// Rule EACCType
ruleEACCType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEACCTypeAccess().getAlternatives()); }
		(rule__EACCType__Alternatives)
		{ after(grammarAccess.getEACCTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAutotuning
entryRuleEAutotuning
:
{ before(grammarAccess.getEAutotuningRule()); }
	 ruleEAutotuning
{ after(grammarAccess.getEAutotuningRule()); } 
	 EOF 
;

// Rule EAutotuning
ruleEAutotuning 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAutotuningAccess().getUnorderedGroup()); }
		(rule__EAutotuning__UnorderedGroup)
		{ after(grammarAccess.getEAutotuningAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleETuner
entryRuleETuner
:
{ before(grammarAccess.getETunerRule()); }
	 ruleETuner
{ after(grammarAccess.getETunerRule()); } 
	 EOF 
;

// Rule ETuner
ruleETuner 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getETunerAccess().getAlternatives()); }
		(rule__ETuner__Alternatives)
		{ after(grammarAccess.getETunerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAITraining
entryRuleEAITraining
:
{ before(grammarAccess.getEAITrainingRule()); }
	 ruleEAITraining
{ after(grammarAccess.getEAITrainingRule()); } 
	 EOF 
;

// Rule EAITraining
ruleEAITraining 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAITrainingAccess().getGroup()); }
		(rule__EAITraining__Group__0)
		{ after(grammarAccess.getEAITrainingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAITrainingCases
entryRuleEAITrainingCases
:
{ before(grammarAccess.getEAITrainingCasesRule()); }
	 ruleEAITrainingCases
{ after(grammarAccess.getEAITrainingCasesRule()); } 
	 EOF 
;

// Rule EAITrainingCases
ruleEAITrainingCases 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAITrainingCasesAccess().getAlternatives()); }
		(rule__EAITrainingCases__Alternatives)
		{ after(grammarAccess.getEAITrainingCasesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEPyTorchCase
entryRuleEPyTorchCase
:
{ before(grammarAccess.getEPyTorchCaseRule()); }
	 ruleEPyTorchCase
{ after(grammarAccess.getEPyTorchCaseRule()); } 
	 EOF 
;

// Rule EPyTorchCase
ruleEPyTorchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEPyTorchCaseAccess().getGroup()); }
		(rule__EPyTorchCase__Group__0)
		{ after(grammarAccess.getEPyTorchCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleETensorFlowCase
entryRuleETensorFlowCase
:
{ before(grammarAccess.getETensorFlowCaseRule()); }
	 ruleETensorFlowCase
{ after(grammarAccess.getETensorFlowCaseRule()); } 
	 EOF 
;

// Rule ETensorFlowCase
ruleETensorFlowCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getETensorFlowCaseAccess().getGroup()); }
		(rule__ETensorFlowCase__Group__0)
		{ after(grammarAccess.getETensorFlowCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEKerasCase
entryRuleEKerasCase
:
{ before(grammarAccess.getEKerasCaseRule()); }
	 ruleEKerasCase
{ after(grammarAccess.getEKerasCaseRule()); } 
	 EOF 
;

// Rule EKerasCase
ruleEKerasCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEKerasCaseAccess().getGroup()); }
		(rule__EKerasCase__Group__0)
		{ after(grammarAccess.getEKerasCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAITrainingConfig
entryRuleEAITrainingConfig
:
{ before(grammarAccess.getEAITrainingConfigRule()); }
	 ruleEAITrainingConfig
{ after(grammarAccess.getEAITrainingConfigRule()); } 
	 EOF 
;

// Rule EAITrainingConfig
ruleEAITrainingConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup()); }
		(rule__EAITrainingConfig__UnorderedGroup)
		{ after(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAIFramework
entryRuleEAIFramework
:
{ before(grammarAccess.getEAIFrameworkRule()); }
	 ruleEAIFramework
{ after(grammarAccess.getEAIFrameworkRule()); } 
	 EOF 
;

// Rule EAIFramework
ruleEAIFramework 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAIFrameworkAccess().getAlternatives()); }
		(rule__EAIFramework__Alternatives)
		{ after(grammarAccess.getEAIFrameworkAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAITrainingType
entryRuleEAITrainingType
:
{ before(grammarAccess.getEAITrainingTypeRule()); }
	 ruleEAITrainingType
{ after(grammarAccess.getEAITrainingTypeRule()); } 
	 EOF 
;

// Rule EAITrainingType
ruleEAITrainingType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAITrainingTypeAccess().getAlternatives()); }
		(rule__EAITrainingType__Alternatives)
		{ after(grammarAccess.getEAITrainingTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAITrainingData
entryRuleEAITrainingData
:
{ before(grammarAccess.getEAITrainingDataRule()); }
	 ruleEAITrainingData
{ after(grammarAccess.getEAITrainingDataRule()); } 
	 EOF 
;

// Rule EAITrainingData
ruleEAITrainingData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup()); }
		(rule__EAITrainingData__UnorderedGroup)
		{ after(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBasedata
entryRuleEBasedata
:
{ before(grammarAccess.getEBasedataRule()); }
	 ruleEBasedata
{ after(grammarAccess.getEBasedataRule()); } 
	 EOF 
;

// Rule EBasedata
ruleEBasedata 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBasedataAccess().getAlternatives()); }
		(rule__EBasedata__Alternatives)
		{ after(grammarAccess.getEBasedataAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEAITrainingETL
entryRuleEAITrainingETL
:
{ before(grammarAccess.getEAITrainingETLRule()); }
	 ruleEAITrainingETL
{ after(grammarAccess.getEAITrainingETLRule()); } 
	 EOF 
;

// Rule EAITrainingETL
ruleEAITrainingETL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup()); }
		(rule__EAITrainingETL__UnorderedGroup)
		{ after(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEKeras
entryRuleEKeras
:
{ before(grammarAccess.getEKerasRule()); }
	 ruleEKeras
{ after(grammarAccess.getEKerasRule()); } 
	 EOF 
;

// Rule EKeras
ruleEKeras 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEKerasAccess().getUnorderedGroup()); }
		(rule__EKeras__UnorderedGroup)
		{ after(grammarAccess.getEKerasAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleETensorFlow
entryRuleETensorFlow
:
{ before(grammarAccess.getETensorFlowRule()); }
	 ruleETensorFlow
{ after(grammarAccess.getETensorFlowRule()); } 
	 EOF 
;

// Rule ETensorFlow
ruleETensorFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getETensorFlowAccess().getUnorderedGroup()); }
		(rule__ETensorFlow__UnorderedGroup)
		{ after(grammarAccess.getETensorFlowAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEPyTorch
entryRuleEPyTorch
:
{ before(grammarAccess.getEPyTorchRule()); }
	 ruleEPyTorch
{ after(grammarAccess.getEPyTorchRule()); } 
	 EOF 
;

// Rule EPyTorch
ruleEPyTorch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEPyTorchAccess().getUnorderedGroup()); }
		(rule__EPyTorch__UnorderedGroup)
		{ after(grammarAccess.getEPyTorchAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEHPC
entryRuleEHPC
:
{ before(grammarAccess.getEHPCRule()); }
	 ruleEHPC
{ after(grammarAccess.getEHPCRule()); } 
	 EOF 
;

// Rule EHPC
ruleEHPC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEHPCAccess().getUnorderedGroup()); }
		(rule__EHPC__UnorderedGroup)
		{ after(grammarAccess.getEHPCAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOPENCLCase
entryRuleEOPENCLCase
:
{ before(grammarAccess.getEOPENCLCaseRule()); }
	 ruleEOPENCLCase
{ after(grammarAccess.getEOPENCLCaseRule()); } 
	 EOF 
;

// Rule EOPENCLCase
ruleEOPENCLCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOPENCLCaseAccess().getGroup()); }
		(rule__EOPENCLCase__Group__0)
		{ after(grammarAccess.getEOPENCLCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOPENACCCase
entryRuleEOPENACCCase
:
{ before(grammarAccess.getEOPENACCCaseRule()); }
	 ruleEOPENACCCase
{ after(grammarAccess.getEOPENACCCaseRule()); } 
	 EOF 
;

// Rule EOPENACCCase
ruleEOPENACCCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOPENACCCaseAccess().getGroup()); }
		(rule__EOPENACCCase__Group__0)
		{ after(grammarAccess.getEOPENACCCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOPENMPCase
entryRuleEOPENMPCase
:
{ before(grammarAccess.getEOPENMPCaseRule()); }
	 ruleEOPENMPCase
{ after(grammarAccess.getEOPENMPCaseRule()); } 
	 EOF 
;

// Rule EOPENMPCase
ruleEOPENMPCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOPENMPCaseAccess().getGroup()); }
		(rule__EOPENMPCase__Group__0)
		{ after(grammarAccess.getEOPENMPCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEMPICase
entryRuleEMPICase
:
{ before(grammarAccess.getEMPICaseRule()); }
	 ruleEMPICase
{ after(grammarAccess.getEMPICaseRule()); } 
	 EOF 
;

// Rule EMPICase
ruleEMPICase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEMPICaseAccess().getGroup()); }
		(rule__EMPICase__Group__0)
		{ after(grammarAccess.getEMPICaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEHPCConfig
entryRuleEHPCConfig
:
{ before(grammarAccess.getEHPCConfigRule()); }
	 ruleEHPCConfig
{ after(grammarAccess.getEHPCConfigRule()); } 
	 EOF 
;

// Rule EHPCConfig
ruleEHPCConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEHPCConfigAccess().getGroup()); }
		(rule__EHPCConfig__Group__0)
		{ after(grammarAccess.getEHPCConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEParallelisation
entryRuleEParallelisation
:
{ before(grammarAccess.getEParallelisationRule()); }
	 ruleEParallelisation
{ after(grammarAccess.getEParallelisationRule()); } 
	 EOF 
;

// Rule EParallelisation
ruleEParallelisation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEParallelisationAccess().getAlternatives()); }
		(rule__EParallelisation__Alternatives)
		{ after(grammarAccess.getEParallelisationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEHPCData
entryRuleEHPCData
:
{ before(grammarAccess.getEHPCDataRule()); }
	 ruleEHPCData
{ after(grammarAccess.getEHPCDataRule()); } 
	 EOF 
;

// Rule EHPCData
ruleEHPCData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEHPCDataAccess().getUnorderedGroup()); }
		(rule__EHPCData__UnorderedGroup)
		{ after(grammarAccess.getEHPCDataAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEHPCETL
entryRuleEHPCETL
:
{ before(grammarAccess.getEHPCETLRule()); }
	 ruleEHPCETL
{ after(grammarAccess.getEHPCETLRule()); } 
	 EOF 
;

// Rule EHPCETL
ruleEHPCETL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEHPCETLAccess().getUnorderedGroup()); }
		(rule__EHPCETL__UnorderedGroup)
		{ after(grammarAccess.getEHPCETLAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEHPCBasedata
entryRuleEHPCBasedata
:
{ before(grammarAccess.getEHPCBasedataRule()); }
	 ruleEHPCBasedata
{ after(grammarAccess.getEHPCBasedataRule()); } 
	 EOF 
;

// Rule EHPCBasedata
ruleEHPCBasedata 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEHPCBasedataAccess().getAlternatives()); }
		(rule__EHPCBasedata__Alternatives)
		{ after(grammarAccess.getEHPCBasedataAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEMPI
entryRuleEMPI
:
{ before(grammarAccess.getEMPIRule()); }
	 ruleEMPI
{ after(grammarAccess.getEMPIRule()); } 
	 EOF 
;

// Rule EMPI
ruleEMPI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEMPIAccess().getUnorderedGroup()); }
		(rule__EMPI__UnorderedGroup)
		{ after(grammarAccess.getEMPIAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEMPILibrary
entryRuleEMPILibrary
:
{ before(grammarAccess.getEMPILibraryRule()); }
	 ruleEMPILibrary
{ after(grammarAccess.getEMPILibraryRule()); } 
	 EOF 
;

// Rule EMPILibrary
ruleEMPILibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEMPILibraryAccess().getAlternatives()); }
		(rule__EMPILibrary__Alternatives)
		{ after(grammarAccess.getEMPILibraryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEMPIMessageSize
entryRuleEMPIMessageSize
:
{ before(grammarAccess.getEMPIMessageSizeRule()); }
	 ruleEMPIMessageSize
{ after(grammarAccess.getEMPIMessageSizeRule()); } 
	 EOF 
;

// Rule EMPIMessageSize
ruleEMPIMessageSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEMPIMessageSizeAccess().getAlternatives()); }
		(rule__EMPIMessageSize__Alternatives)
		{ after(grammarAccess.getEMPIMessageSizeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOPENMP
entryRuleEOPENMP
:
{ before(grammarAccess.getEOPENMPRule()); }
	 ruleEOPENMP
{ after(grammarAccess.getEOPENMPRule()); } 
	 EOF 
;

// Rule EOPENMP
ruleEOPENMP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOPENMPAccess().getUnorderedGroup()); }
		(rule__EOPENMP__UnorderedGroup)
		{ after(grammarAccess.getEOPENMPAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOPENAffinity
entryRuleEOPENAffinity
:
{ before(grammarAccess.getEOPENAffinityRule()); }
	 ruleEOPENAffinity
{ after(grammarAccess.getEOPENAffinityRule()); } 
	 EOF 
;

// Rule EOPENAffinity
ruleEOPENAffinity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOPENAffinityAccess().getAlternatives()); }
		(rule__EOPENAffinity__Alternatives)
		{ after(grammarAccess.getEOPENAffinityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOPENACC
entryRuleEOPENACC
:
{ before(grammarAccess.getEOPENACCRule()); }
	 ruleEOPENACC
{ after(grammarAccess.getEOPENACCRule()); } 
	 EOF 
;

// Rule EOPENACC
ruleEOPENACC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOPENACCAccess().getUnorderedGroup()); }
		(rule__EOPENACC__UnorderedGroup)
		{ after(grammarAccess.getEOPENACCAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOPENCL
entryRuleEOPENCL
:
{ before(grammarAccess.getEOPENCLRule()); }
	 ruleEOPENCL
{ after(grammarAccess.getEOPENCLRule()); } 
	 EOF 
;

// Rule EOPENCL
ruleEOPENCL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOPENCLAccess().getUnorderedGroup()); }
		(rule__EOPENCL__UnorderedGroup)
		{ after(grammarAccess.getEOPENCLAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleECompiler
entryRuleECompiler
:
{ before(grammarAccess.getECompilerRule()); }
	 ruleECompiler
{ after(grammarAccess.getECompilerRule()); } 
	 EOF 
;

// Rule ECompiler
ruleECompiler 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getECompilerAccess().getAlternatives()); }
		(rule__ECompiler__Alternatives)
		{ after(grammarAccess.getECompilerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREAL
entryRuleREAL
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getREALRule()); }
	 ruleREAL
{ after(grammarAccess.getREALRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREALAccess().getGroup()); }
		(rule__REAL__Group__0)
		{ after(grammarAccess.getREALAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleRealValue
entryRuleRealValue
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;

// Rule RealValue
ruleRealValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealValueAccess().getREALParserRuleCall()); }
		ruleREAL
		{ after(grammarAccess.getRealValueAccess().getREALParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimizationCases__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptimizationCasesAccess().getEAITrainingCaseParserRuleCall_0()); }
		ruleEAITrainingCase
		{ after(grammarAccess.getEOptimizationCasesAccess().getEAITrainingCaseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEOptimizationCasesAccess().getEHPCCaseParserRuleCall_1()); }
		ruleEHPCCase
		{ after(grammarAccess.getEOptimizationCasesAccess().getEHPCCaseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAppType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAppTypeAccess().getAi_trainingKeyword_0()); }
		Ai_training
		{ after(grammarAccess.getEAppTypeAccess().getAi_trainingKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEAppTypeAccess().getHpcKeyword_1()); }
		Hpc
		{ after(grammarAccess.getEAppTypeAccess().getHpcKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEAppTypeAccess().getBig_dataKeyword_2()); }
		Big_data
		{ after(grammarAccess.getEAppTypeAccess().getBig_dataKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getEAppTypeAccess().getAi_inferenceKeyword_3()); }
		Ai_inference
		{ after(grammarAccess.getEAppTypeAccess().getAi_inferenceKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ECPUType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getECPUTypeAccess().getX86Keyword_0()); }
		X86
		{ after(grammarAccess.getECPUTypeAccess().getX86Keyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getECPUTypeAccess().getArmKeyword_1()); }
		Arm
		{ after(grammarAccess.getECPUTypeAccess().getArmKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getECPUTypeAccess().getAmdKeyword_2()); }
		Amd
		{ after(grammarAccess.getECPUTypeAccess().getAmdKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getECPUTypeAccess().getPowerKeyword_3()); }
		Power
		{ after(grammarAccess.getECPUTypeAccess().getPowerKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EACCType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEACCTypeAccess().getNvidiaKeyword_0()); }
		Nvidia
		{ after(grammarAccess.getEACCTypeAccess().getNvidiaKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEACCTypeAccess().getAmdKeyword_1()); }
		Amd
		{ after(grammarAccess.getEACCTypeAccess().getAmdKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEACCTypeAccess().getFpgaKeyword_2()); }
		Fpga
		{ after(grammarAccess.getEACCTypeAccess().getFpgaKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getEACCTypeAccess().getNoneKeyword_3()); }
		None
		{ after(grammarAccess.getEACCTypeAccess().getNoneKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETuner__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getETunerAccess().getCrestaKeyword_0()); }
		Cresta
		{ after(grammarAccess.getETunerAccess().getCrestaKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getETunerAccess().getAutotuneKeyword_1()); }
		Autotune
		{ after(grammarAccess.getETunerAccess().getAutotuneKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCases__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingCasesAccess().getEKerasCaseParserRuleCall_0()); }
		ruleEKerasCase
		{ after(grammarAccess.getEAITrainingCasesAccess().getEKerasCaseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEAITrainingCasesAccess().getETensorFlowCaseParserRuleCall_1()); }
		ruleETensorFlowCase
		{ after(grammarAccess.getEAITrainingCasesAccess().getETensorFlowCaseParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEAITrainingCasesAccess().getEPyTorchCaseParserRuleCall_2()); }
		ruleEPyTorchCase
		{ after(grammarAccess.getEAITrainingCasesAccess().getEPyTorchCaseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAIFramework__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAIFrameworkAccess().getTensorflowKeyword_0()); }
		Tensorflow
		{ after(grammarAccess.getEAIFrameworkAccess().getTensorflowKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEAIFrameworkAccess().getPytorchKeyword_1()); }
		Pytorch
		{ after(grammarAccess.getEAIFrameworkAccess().getPytorchKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEAIFrameworkAccess().getKerasKeyword_2()); }
		Keras
		{ after(grammarAccess.getEAIFrameworkAccess().getKerasKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getEAIFrameworkAccess().getCntkKeyword_3()); }
		Cntk
		{ after(grammarAccess.getEAIFrameworkAccess().getCntkKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getEAIFrameworkAccess().getMxnetKeyword_4()); }
		Mxnet
		{ after(grammarAccess.getEAIFrameworkAccess().getMxnetKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingTypeAccess().getImage_classificationKeyword_0()); }
		Image_classification
		{ after(grammarAccess.getEAITrainingTypeAccess().getImage_classificationKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEAITrainingTypeAccess().getObject_detectionKeyword_1()); }
		Object_detection
		{ after(grammarAccess.getEAITrainingTypeAccess().getObject_detectionKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEAITrainingTypeAccess().getTranslationKeyword_2()); }
		Translation
		{ after(grammarAccess.getEAITrainingTypeAccess().getTranslationKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getEAITrainingTypeAccess().getRecommendationKeyword_3()); }
		Recommendation
		{ after(grammarAccess.getEAITrainingTypeAccess().getRecommendationKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getEAITrainingTypeAccess().getReinforncement_learningKeyword_4()); }
		Reinforncement_learning
		{ after(grammarAccess.getEAITrainingTypeAccess().getReinforncement_learningKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBasedata__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBasedataAccess().getImagenetKeyword_0()); }
		Imagenet
		{ after(grammarAccess.getEBasedataAccess().getImagenetKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBasedataAccess().getCifarKeyword_1()); }
		Cifar
		{ after(grammarAccess.getEBasedataAccess().getCifarKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEBasedataAccess().getMnistKeyword_2()); }
		Mnist
		{ after(grammarAccess.getEBasedataAccess().getMnistKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EParallelisation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEParallelisationAccess().getMpiKeyword_0()); }
		Mpi
		{ after(grammarAccess.getEParallelisationAccess().getMpiKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEParallelisationAccess().getOpenmpKeyword_1()); }
		Openmp
		{ after(grammarAccess.getEParallelisationAccess().getOpenmpKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEParallelisationAccess().getOpenaccKeyword_2()); }
		Openacc
		{ after(grammarAccess.getEParallelisationAccess().getOpenaccKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getEParallelisationAccess().getOpenclKeyword_3()); }
		Opencl
		{ after(grammarAccess.getEParallelisationAccess().getOpenclKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCBasedata__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCBasedataAccess().getImageKeyword_0()); }
		Image
		{ after(grammarAccess.getEHPCBasedataAccess().getImageKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEHPCBasedataAccess().getRestartKeyword_1()); }
		Restart
		{ after(grammarAccess.getEHPCBasedataAccess().getRestartKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPILibrary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPILibraryAccess().getMvapchKeyword_0()); }
		Mvapch
		{ after(grammarAccess.getEMPILibraryAccess().getMvapchKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEMPILibraryAccess().getOpenmpiKeyword_1()); }
		Openmpi
		{ after(grammarAccess.getEMPILibraryAccess().getOpenmpiKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEMPILibraryAccess().getMpichKeyword_2()); }
		Mpich
		{ after(grammarAccess.getEMPILibraryAccess().getMpichKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPIMessageSize__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPIMessageSizeAccess().getSmallKeyword_0()); }
		Small
		{ after(grammarAccess.getEMPIMessageSizeAccess().getSmallKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEMPIMessageSizeAccess().getMediumKeyword_1()); }
		Medium
		{ after(grammarAccess.getEMPIMessageSizeAccess().getMediumKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEMPIMessageSizeAccess().getLargeKeyword_2()); }
		Large
		{ after(grammarAccess.getEMPIMessageSizeAccess().getLargeKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENAffinity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENAffinityAccess().getBlockKeyword_0()); }
		Block
		{ after(grammarAccess.getEOPENAffinityAccess().getBlockKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEOPENAffinityAccess().getSimpleKeyword_1()); }
		Simple
		{ after(grammarAccess.getEOPENAffinityAccess().getSimpleKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ECompiler__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getECompilerAccess().getPgiKeyword_0()); }
		Pgi
		{ after(grammarAccess.getECompilerAccess().getPgiKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getECompilerAccess().getCrayKeyword_1()); }
		Cray
		{ after(grammarAccess.getECompilerAccess().getCrayKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); }
		RULE_EXT_INT
		{ after(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); }
		RULE_INT
		{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Optimization_Model__Group__0__Impl
	rule__Optimization_Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptimization_ModelAccess().getOptimizationKeyword_0()); }
	Optimization
	{ after(grammarAccess.getOptimization_ModelAccess().getOptimizationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Optimization_Model__Group__1__Impl
	rule__Optimization_Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptimization_ModelAccess().getNameAssignment_1()); }
	(rule__Optimization_Model__NameAssignment_1)
	{ after(grammarAccess.getOptimization_ModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Optimization_Model__Group__2__Impl
	rule__Optimization_Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptimization_ModelAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getOptimization_ModelAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Optimization_Model__Group__3__Impl
	rule__Optimization_Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptimization_ModelAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getOptimization_ModelAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Optimization_Model__Group__4__Impl
	rule__Optimization_Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptimization_ModelAccess().getOptimizationAssignment_4()); }
	(rule__Optimization_Model__OptimizationAssignment_4)
	{ after(grammarAccess.getOptimization_ModelAccess().getOptimizationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Optimization_Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptimization_ModelAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getOptimization_ModelAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptimization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group__0__Impl
	rule__EOptimization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getGroup_0()); }
	(rule__EOptimization__Group_0__0)
	{ after(grammarAccess.getEOptimizationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group__1__Impl
	rule__EOptimization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getGroup_1()); }
	(rule__EOptimization__Group_1__0)
	{ after(grammarAccess.getEOptimizationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group__2__Impl
	rule__EOptimization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getGroup_2()); }
	(rule__EOptimization__Group_2__0)
	{ after(grammarAccess.getEOptimizationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group__3__Impl
	rule__EOptimization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getGroup_3()); }
	(rule__EOptimization__Group_3__0)?
	{ after(grammarAccess.getEOptimizationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group__4__Impl
	rule__EOptimization__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getGroup_4()); }
	(rule__EOptimization__Group_4__0)?
	{ after(grammarAccess.getEOptimizationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getApp_optimizationAssignment_5()); }
	(rule__EOptimization__App_optimizationAssignment_5)
	{ after(grammarAccess.getEOptimizationAccess().getApp_optimizationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptimization__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_0__0__Impl
	rule__EOptimization__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getEnable_opt_buildKeyword_0_0()); }
	Enable_opt_build
	{ after(grammarAccess.getEOptimizationAccess().getEnable_opt_buildKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getEnable_opt_buildAssignment_0_1()); }
	(rule__EOptimization__Enable_opt_buildAssignment_0_1)
	{ after(grammarAccess.getEOptimizationAccess().getEnable_opt_buildAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptimization__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_1__0__Impl
	rule__EOptimization__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getEnable_autotuningKeyword_1_0()); }
	Enable_autotuning
	{ after(grammarAccess.getEOptimizationAccess().getEnable_autotuningKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getEnable_autotuningAssignment_1_1()); }
	(rule__EOptimization__Enable_autotuningAssignment_1_1)
	{ after(grammarAccess.getEOptimizationAccess().getEnable_autotuningAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptimization__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_2__0__Impl
	rule__EOptimization__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getApp_typeKeyword_2_0()); }
	App_type
	{ after(grammarAccess.getEOptimizationAccess().getApp_typeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getApp_typeAssignment_2_1()); }
	(rule__EOptimization__App_typeAssignment_2_1)
	{ after(grammarAccess.getEOptimizationAccess().getApp_typeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptimization__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_3__0__Impl
	rule__EOptimization__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getOpt_buildKeyword_3_0()); }
	Opt_build
	{ after(grammarAccess.getEOptimizationAccess().getOpt_buildKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_3__1__Impl
	rule__EOptimization__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getBEGINTerminalRuleCall_3_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEOptimizationAccess().getBEGINTerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_3__2__Impl
	rule__EOptimization__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getOpt_buildAssignment_3_2()); }
	(rule__EOptimization__Opt_buildAssignment_3_2)
	{ after(grammarAccess.getEOptimizationAccess().getOpt_buildAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getENDTerminalRuleCall_3_3()); }
	RULE_END
	{ after(grammarAccess.getEOptimizationAccess().getENDTerminalRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptimization__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_4__0__Impl
	rule__EOptimization__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getAutotuningKeyword_4_0()); }
	Autotuning
	{ after(grammarAccess.getEOptimizationAccess().getAutotuningKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_4__1__Impl
	rule__EOptimization__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getBEGINTerminalRuleCall_4_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEOptimizationAccess().getBEGINTerminalRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_4__2__Impl
	rule__EOptimization__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getAutotuningAssignment_4_2()); }
	(rule__EOptimization__AutotuningAssignment_4_2)
	{ after(grammarAccess.getEOptimizationAccess().getAutotuningAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptimization__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptimizationAccess().getENDTerminalRuleCall_4_3()); }
	RULE_END
	{ after(grammarAccess.getEOptimizationAccess().getENDTerminalRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingCase__Group__0__Impl
	rule__EAITrainingCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingCaseAccess().getApp_typeAi_trainingKeyword_0()); }
	App_typeAi_training
	{ after(grammarAccess.getEAITrainingCaseAccess().getApp_typeAi_trainingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingCase__Group__1__Impl
	rule__EAITrainingCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEAITrainingCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingCase__Group__2__Impl
	rule__EAITrainingCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingCaseAccess().getAi_trainingAssignment_2()); }
	(rule__EAITrainingCase__Ai_trainingAssignment_2)
	{ after(grammarAccess.getEAITrainingCaseAccess().getAi_trainingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEAITrainingCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCCase__Group__0__Impl
	rule__EHPCCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCCaseAccess().getApp_typeHpcKeyword_0()); }
	App_typeHpc
	{ after(grammarAccess.getEHPCCaseAccess().getApp_typeHpcKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCCase__Group__1__Impl
	rule__EHPCCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEHPCCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCCase__Group__2__Impl
	rule__EHPCCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCCaseAccess().getHpcAssignment_2()); }
	(rule__EHPCCase__HpcAssignment_2)
	{ after(grammarAccess.getEHPCCaseAccess().getHpcAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEHPCCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptBuild__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptBuild__Group_0__0__Impl
	rule__EOptBuild__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptBuildAccess().getCpu_typeKeyword_0_0()); }
	Cpu_type
	{ after(grammarAccess.getEOptBuildAccess().getCpu_typeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptBuild__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptBuildAccess().getCpu_typeAssignment_0_1()); }
	(rule__EOptBuild__Cpu_typeAssignment_0_1)
	{ after(grammarAccess.getEOptBuildAccess().getCpu_typeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptBuild__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptBuild__Group_1__0__Impl
	rule__EOptBuild__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptBuildAccess().getAcc_typeKeyword_1_0()); }
	Acc_type
	{ after(grammarAccess.getEOptBuildAccess().getAcc_typeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptBuild__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOptBuildAccess().getAcc_typeAssignment_1_1()); }
	(rule__EOptBuild__Acc_typeAssignment_1_1)
	{ after(grammarAccess.getEOptBuildAccess().getAcc_typeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAutotuning__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAutotuning__Group_0__0__Impl
	rule__EAutotuning__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAutotuningAccess().getTunerKeyword_0_0()); }
	Tuner
	{ after(grammarAccess.getEAutotuningAccess().getTunerKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAutotuning__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAutotuningAccess().getTunerAssignment_0_1()); }
	(rule__EAutotuning__TunerAssignment_0_1)
	{ after(grammarAccess.getEAutotuningAccess().getTunerAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAutotuning__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAutotuning__Group_1__0__Impl
	rule__EAutotuning__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAutotuningAccess().getInputKeyword_1_0()); }
	Input
	{ after(grammarAccess.getEAutotuningAccess().getInputKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAutotuning__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAutotuningAccess().getInputAssignment_1_1()); }
	(rule__EAutotuning__InputAssignment_1_1)
	{ after(grammarAccess.getEAutotuningAccess().getInputAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITraining__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group__0__Impl
	rule__EAITraining__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getGroup_0()); }
	(rule__EAITraining__Group_0__0)
	{ after(grammarAccess.getEAITrainingAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group__1__Impl
	rule__EAITraining__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getGroup_1()); }
	(rule__EAITraining__Group_1__0)
	{ after(grammarAccess.getEAITrainingAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getAitrainingcaseAssignment_2()); }
	(rule__EAITraining__AitrainingcaseAssignment_2)
	{ after(grammarAccess.getEAITrainingAccess().getAitrainingcaseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITraining__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_0__0__Impl
	rule__EAITraining__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getConfigKeyword_0_0()); }
	Config
	{ after(grammarAccess.getEAITrainingAccess().getConfigKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_0__1__Impl
	rule__EAITraining__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getBEGINTerminalRuleCall_0_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEAITrainingAccess().getBEGINTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_0__2__Impl
	rule__EAITraining__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getConfigAssignment_0_2()); }
	(rule__EAITraining__ConfigAssignment_0_2)
	{ after(grammarAccess.getEAITrainingAccess().getConfigAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getENDTerminalRuleCall_0_3()); }
	RULE_END
	{ after(grammarAccess.getEAITrainingAccess().getENDTerminalRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITraining__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_1__0__Impl
	rule__EAITraining__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getDataKeyword_1_0()); }
	Data
	{ after(grammarAccess.getEAITrainingAccess().getDataKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_1__1__Impl
	rule__EAITraining__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getBEGINTerminalRuleCall_1_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEAITrainingAccess().getBEGINTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_1__2__Impl
	rule__EAITraining__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getDataAssignment_1_2()); }
	(rule__EAITraining__DataAssignment_1_2)
	{ after(grammarAccess.getEAITrainingAccess().getDataAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITraining__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingAccess().getENDTerminalRuleCall_1_3()); }
	RULE_END
	{ after(grammarAccess.getEAITrainingAccess().getENDTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EPyTorchCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorchCase__Group__0__Impl
	rule__EPyTorchCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchCaseAccess().getAi_frameworkPytorchKeyword_0()); }
	Ai_frameworkPytorch
	{ after(grammarAccess.getEPyTorchCaseAccess().getAi_frameworkPytorchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorchCase__Group__1__Impl
	rule__EPyTorchCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEPyTorchCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorchCase__Group__2__Impl
	rule__EPyTorchCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchCaseAccess().getPytorchAssignment_2()); }
	(rule__EPyTorchCase__PytorchAssignment_2)
	{ after(grammarAccess.getEPyTorchCaseAccess().getPytorchAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorchCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEPyTorchCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ETensorFlowCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlowCase__Group__0__Impl
	rule__ETensorFlowCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowCaseAccess().getAi_frameworkTensorflowKeyword_0()); }
	Ai_frameworkTensorflow
	{ after(grammarAccess.getETensorFlowCaseAccess().getAi_frameworkTensorflowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlowCase__Group__1__Impl
	rule__ETensorFlowCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getETensorFlowCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlowCase__Group__2__Impl
	rule__ETensorFlowCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowCaseAccess().getTensorflowAssignment_2()); }
	(rule__ETensorFlowCase__TensorflowAssignment_2)
	{ after(grammarAccess.getETensorFlowCaseAccess().getTensorflowAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlowCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getETensorFlowCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EKerasCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKerasCase__Group__0__Impl
	rule__EKerasCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasCaseAccess().getAi_frameworkKerasKeyword_0()); }
	Ai_frameworkKeras
	{ after(grammarAccess.getEKerasCaseAccess().getAi_frameworkKerasKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKerasCase__Group__1__Impl
	rule__EKerasCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEKerasCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKerasCase__Group__2__Impl
	rule__EKerasCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasCaseAccess().getKerasAssignment_2()); }
	(rule__EKerasCase__KerasAssignment_2)
	{ after(grammarAccess.getEKerasCaseAccess().getKerasAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKerasCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEKerasCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingConfig__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_0__0__Impl
	rule__EAITrainingConfig__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getAi_frameworkKeyword_0_0()); }
	Ai_framework
	{ after(grammarAccess.getEAITrainingConfigAccess().getAi_frameworkKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getAi_frameworkAssignment_0_1()); }
	(rule__EAITrainingConfig__Ai_frameworkAssignment_0_1)
	{ after(grammarAccess.getEAITrainingConfigAccess().getAi_frameworkAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingConfig__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_1__0__Impl
	rule__EAITrainingConfig__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getTypeKeyword_1_0()); }
	Type
	{ after(grammarAccess.getEAITrainingConfigAccess().getTypeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getTypeAssignment_1_1()); }
	(rule__EAITrainingConfig__TypeAssignment_1_1)
	{ after(grammarAccess.getEAITrainingConfigAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingConfig__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_2__0__Impl
	rule__EAITrainingConfig__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getDistributed_trainingKeyword_2_0()); }
	Distributed_training
	{ after(grammarAccess.getEAITrainingConfigAccess().getDistributed_trainingKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getDistributed_trainingAssignment_2_1()); }
	(rule__EAITrainingConfig__Distributed_trainingAssignment_2_1)
	{ after(grammarAccess.getEAITrainingConfigAccess().getDistributed_trainingAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingConfig__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_3__0__Impl
	rule__EAITrainingConfig__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getLayersKeyword_3_0()); }
	Layers
	{ after(grammarAccess.getEAITrainingConfigAccess().getLayersKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getLayersAssignment_3_1()); }
	(rule__EAITrainingConfig__LayersAssignment_3_1)
	{ after(grammarAccess.getEAITrainingConfigAccess().getLayersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingConfig__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_4__0__Impl
	rule__EAITrainingConfig__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getParametersKeyword_4_0()); }
	Parameters
	{ after(grammarAccess.getEAITrainingConfigAccess().getParametersKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingConfigAccess().getParametersAssignment_4_1()); }
	(rule__EAITrainingConfig__ParametersAssignment_4_1)
	{ after(grammarAccess.getEAITrainingConfigAccess().getParametersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingData__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_0__0__Impl
	rule__EAITrainingData__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getLocationKeyword_0_0()); }
	Location
	{ after(grammarAccess.getEAITrainingDataAccess().getLocationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getLocationAssignment_0_1()); }
	(rule__EAITrainingData__LocationAssignment_0_1)
	{ after(grammarAccess.getEAITrainingDataAccess().getLocationAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingData__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_1__0__Impl
	rule__EAITrainingData__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getBasedataKeyword_1_0()); }
	Basedata
	{ after(grammarAccess.getEAITrainingDataAccess().getBasedataKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getBasedataAssignment_1_1()); }
	(rule__EAITrainingData__BasedataAssignment_1_1)
	{ after(grammarAccess.getEAITrainingDataAccess().getBasedataAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingData__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_2__0__Impl
	rule__EAITrainingData__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getSizeKeyword_2_0()); }
	Size
	{ after(grammarAccess.getEAITrainingDataAccess().getSizeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getSizeAssignment_2_1()); }
	(rule__EAITrainingData__SizeAssignment_2_1)
	{ after(grammarAccess.getEAITrainingDataAccess().getSizeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingData__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_3__0__Impl
	rule__EAITrainingData__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getCountKeyword_3_0()); }
	Count
	{ after(grammarAccess.getEAITrainingDataAccess().getCountKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getCountAssignment_3_1()); }
	(rule__EAITrainingData__CountAssignment_3_1)
	{ after(grammarAccess.getEAITrainingDataAccess().getCountAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingData__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_4__0__Impl
	rule__EAITrainingData__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getEtlKeyword_4_0()); }
	Etl
	{ after(grammarAccess.getEAITrainingDataAccess().getEtlKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_4__1__Impl
	rule__EAITrainingData__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getBEGINTerminalRuleCall_4_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEAITrainingDataAccess().getBEGINTerminalRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_4__2__Impl
	rule__EAITrainingData__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getEtlAssignment_4_2()); }
	(rule__EAITrainingData__EtlAssignment_4_2)
	{ after(grammarAccess.getEAITrainingDataAccess().getEtlAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingDataAccess().getENDTerminalRuleCall_4_3()); }
	RULE_END
	{ after(grammarAccess.getEAITrainingDataAccess().getENDTerminalRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingETL__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingETL__Group_0__0__Impl
	rule__EAITrainingETL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingETLAccess().getPrefetchKeyword_0_0()); }
	Prefetch
	{ after(grammarAccess.getEAITrainingETLAccess().getPrefetchKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingETL__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingETLAccess().getPrefetchAssignment_0_1()); }
	(rule__EAITrainingETL__PrefetchAssignment_0_1)
	{ after(grammarAccess.getEAITrainingETLAccess().getPrefetchAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingETL__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingETL__Group_1__0__Impl
	rule__EAITrainingETL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingETLAccess().getCacheKeyword_1_0()); }
	Cache
	{ after(grammarAccess.getEAITrainingETLAccess().getCacheKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingETL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEAITrainingETLAccess().getCacheAssignment_1_1()); }
	(rule__EAITrainingETL__CacheAssignment_1_1)
	{ after(grammarAccess.getEAITrainingETLAccess().getCacheAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EKeras__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKeras__Group_0__0__Impl
	rule__EKeras__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasAccess().getVersionKeyword_0_0()); }
	Version
	{ after(grammarAccess.getEKerasAccess().getVersionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKeras__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasAccess().getVersionAssignment_0_1()); }
	(rule__EKeras__VersionAssignment_0_1)
	{ after(grammarAccess.getEKerasAccess().getVersionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EKeras__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKeras__Group_1__0__Impl
	rule__EKeras__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasAccess().getBackendKeyword_1_0()); }
	Backend
	{ after(grammarAccess.getEKerasAccess().getBackendKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKeras__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEKerasAccess().getBackendAssignment_1_1()); }
	(rule__EKeras__BackendAssignment_1_1)
	{ after(grammarAccess.getEKerasAccess().getBackendAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ETensorFlow__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlow__Group_0__0__Impl
	rule__ETensorFlow__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowAccess().getVersionKeyword_0_0()); }
	Version
	{ after(grammarAccess.getETensorFlowAccess().getVersionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlow__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowAccess().getVersionAssignment_0_1()); }
	(rule__ETensorFlow__VersionAssignment_0_1)
	{ after(grammarAccess.getETensorFlowAccess().getVersionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ETensorFlow__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlow__Group_1__0__Impl
	rule__ETensorFlow__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowAccess().getXlaKeyword_1_0()); }
	Xla
	{ after(grammarAccess.getETensorFlowAccess().getXlaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlow__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETensorFlowAccess().getXlaAssignment_1_1()); }
	(rule__ETensorFlow__XlaAssignment_1_1)
	{ after(grammarAccess.getETensorFlowAccess().getXlaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EPyTorch__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorch__Group_0__0__Impl
	rule__EPyTorch__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchAccess().getVersionKeyword_0_0()); }
	Version
	{ after(grammarAccess.getEPyTorchAccess().getVersionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorch__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchAccess().getVersionAssignment_0_1()); }
	(rule__EPyTorch__VersionAssignment_0_1)
	{ after(grammarAccess.getEPyTorchAccess().getVersionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EPyTorch__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorch__Group_1__0__Impl
	rule__EPyTorch__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchAccess().getGlowKeyword_1_0()); }
	Glow
	{ after(grammarAccess.getEPyTorchAccess().getGlowKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorch__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEPyTorchAccess().getGlowAssignment_1_1()); }
	(rule__EPyTorch__GlowAssignment_1_1)
	{ after(grammarAccess.getEPyTorchAccess().getGlowAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPC__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0__0__Impl
	rule__EHPC__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getGroup_0_0()); }
	(rule__EHPC__Group_0_0__0)
	{ after(grammarAccess.getEHPCAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0__1__Impl
	rule__EHPC__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getGroup_0_1()); }
	(rule__EHPC__Group_0_1__0)
	{ after(grammarAccess.getEHPCAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getMpiAssignment_0_2()); }
	(rule__EHPC__MpiAssignment_0_2)?
	{ after(grammarAccess.getEHPCAccess().getMpiAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPC__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_0__0__Impl
	rule__EHPC__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getConfigKeyword_0_0_0()); }
	Config
	{ after(grammarAccess.getEHPCAccess().getConfigKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_0__1__Impl
	rule__EHPC__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getBEGINTerminalRuleCall_0_0_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEHPCAccess().getBEGINTerminalRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_0__2__Impl
	rule__EHPC__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getConfigAssignment_0_0_2()); }
	(rule__EHPC__ConfigAssignment_0_0_2)
	{ after(grammarAccess.getEHPCAccess().getConfigAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getENDTerminalRuleCall_0_0_3()); }
	RULE_END
	{ after(grammarAccess.getEHPCAccess().getENDTerminalRuleCall_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPC__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_1__0__Impl
	rule__EHPC__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getDataKeyword_0_1_0()); }
	Data
	{ after(grammarAccess.getEHPCAccess().getDataKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_1__1__Impl
	rule__EHPC__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getBEGINTerminalRuleCall_0_1_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEHPCAccess().getBEGINTerminalRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_1__2__Impl
	rule__EHPC__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getDataAssignment_0_1_2()); }
	(rule__EHPC__DataAssignment_0_1_2)
	{ after(grammarAccess.getEHPCAccess().getDataAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCAccess().getENDTerminalRuleCall_0_1_3()); }
	RULE_END
	{ after(grammarAccess.getEHPCAccess().getENDTerminalRuleCall_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENCLCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCLCase__Group__0__Impl
	rule__EOPENCLCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLCaseAccess().getParallelisationOpenclKeyword_0()); }
	ParallelisationOpencl
	{ after(grammarAccess.getEOPENCLCaseAccess().getParallelisationOpenclKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCLCase__Group__1__Impl
	rule__EOPENCLCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEOPENCLCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCLCase__Group__2__Impl
	rule__EOPENCLCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLCaseAccess().getOpenclAssignment_2()); }
	(rule__EOPENCLCase__OpenclAssignment_2)
	{ after(grammarAccess.getEOPENCLCaseAccess().getOpenclAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCLCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEOPENCLCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENACCCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACCCase__Group__0__Impl
	rule__EOPENACCCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCCaseAccess().getParallelisationOpenaccKeyword_0()); }
	ParallelisationOpenacc
	{ after(grammarAccess.getEOPENACCCaseAccess().getParallelisationOpenaccKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACCCase__Group__1__Impl
	rule__EOPENACCCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEOPENACCCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACCCase__Group__2__Impl
	rule__EOPENACCCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCCaseAccess().getOpenaccAssignment_2()); }
	(rule__EOPENACCCase__OpenaccAssignment_2)
	{ after(grammarAccess.getEOPENACCCaseAccess().getOpenaccAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACCCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEOPENACCCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENMPCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMPCase__Group__0__Impl
	rule__EOPENMPCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPCaseAccess().getParallelisationOpenmpKeyword_0()); }
	ParallelisationOpenmp
	{ after(grammarAccess.getEOPENMPCaseAccess().getParallelisationOpenmpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMPCase__Group__1__Impl
	rule__EOPENMPCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPCaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEOPENMPCaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMPCase__Group__2__Impl
	rule__EOPENMPCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPCaseAccess().getOpenmpAssignment_2()); }
	(rule__EOPENMPCase__OpenmpAssignment_2)
	{ after(grammarAccess.getEOPENMPCaseAccess().getOpenmpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMPCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPCaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEOPENMPCaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EMPICase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPICase__Group__0__Impl
	rule__EMPICase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPICaseAccess().getParallelisationMpiKeyword_0()); }
	ParallelisationMpi
	{ after(grammarAccess.getEMPICaseAccess().getParallelisationMpiKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPICase__Group__1__Impl
	rule__EMPICase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPICaseAccess().getBEGINTerminalRuleCall_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEMPICaseAccess().getBEGINTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPICase__Group__2__Impl
	rule__EMPICase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPICaseAccess().getMpiAssignment_2()); }
	(rule__EMPICase__MpiAssignment_2)
	{ after(grammarAccess.getEMPICaseAccess().getMpiAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPICase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPICaseAccess().getENDTerminalRuleCall_3()); }
	RULE_END
	{ after(grammarAccess.getEMPICaseAccess().getENDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCConfig__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCConfig__Group__0__Impl
	rule__EHPCConfig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCConfig__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCConfigAccess().getParallelisationKeyword_0()); }
	Parallelisation
	{ after(grammarAccess.getEHPCConfigAccess().getParallelisationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCConfig__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCConfig__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCConfig__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCConfigAccess().getParallelisationAssignment_1()); }
	(rule__EHPCConfig__ParallelisationAssignment_1)
	{ after(grammarAccess.getEHPCConfigAccess().getParallelisationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCData__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_0__0__Impl
	rule__EHPCData__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getLocationKeyword_0_0()); }
	Location
	{ after(grammarAccess.getEHPCDataAccess().getLocationKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getLocationAssignment_0_1()); }
	(rule__EHPCData__LocationAssignment_0_1)
	{ after(grammarAccess.getEHPCDataAccess().getLocationAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCData__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_1__0__Impl
	rule__EHPCData__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getBasedataKeyword_1_0()); }
	Basedata
	{ after(grammarAccess.getEHPCDataAccess().getBasedataKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getBasedataAssignment_1_1()); }
	(rule__EHPCData__BasedataAssignment_1_1)
	{ after(grammarAccess.getEHPCDataAccess().getBasedataAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCData__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_2__0__Impl
	rule__EHPCData__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getSizeKeyword_2_0()); }
	Size
	{ after(grammarAccess.getEHPCDataAccess().getSizeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getSizeAssignment_2_1()); }
	(rule__EHPCData__SizeAssignment_2_1)
	{ after(grammarAccess.getEHPCDataAccess().getSizeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCData__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_3__0__Impl
	rule__EHPCData__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getCountKeyword_3_0()); }
	Count
	{ after(grammarAccess.getEHPCDataAccess().getCountKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getCountAssignment_3_1()); }
	(rule__EHPCData__CountAssignment_3_1)
	{ after(grammarAccess.getEHPCDataAccess().getCountAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCData__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_4__0__Impl
	rule__EHPCData__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getEtlKeyword_4_0()); }
	Etl
	{ after(grammarAccess.getEHPCDataAccess().getEtlKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_4__1__Impl
	rule__EHPCData__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getBEGINTerminalRuleCall_4_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getEHPCDataAccess().getBEGINTerminalRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_4__2__Impl
	rule__EHPCData__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getEtlAssignment_4_2()); }
	(rule__EHPCData__EtlAssignment_4_2)
	{ after(grammarAccess.getEHPCDataAccess().getEtlAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCDataAccess().getENDTerminalRuleCall_4_3()); }
	RULE_END
	{ after(grammarAccess.getEHPCDataAccess().getENDTerminalRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCETL__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCETL__Group_0__0__Impl
	rule__EHPCETL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCETLAccess().getPrefetchKeyword_0_0()); }
	Prefetch
	{ after(grammarAccess.getEHPCETLAccess().getPrefetchKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCETL__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCETLAccess().getPrefetchAssignment_0_1()); }
	(rule__EHPCETL__PrefetchAssignment_0_1)
	{ after(grammarAccess.getEHPCETLAccess().getPrefetchAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCETL__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCETL__Group_1__0__Impl
	rule__EHPCETL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCETLAccess().getCacheKeyword_1_0()); }
	Cache
	{ after(grammarAccess.getEHPCETLAccess().getCacheKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCETL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEHPCETLAccess().getCacheAssignment_1_1()); }
	(rule__EHPCETL__CacheAssignment_1_1)
	{ after(grammarAccess.getEHPCETLAccess().getCacheAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EMPI__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_0__0__Impl
	rule__EMPI__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getLibraryKeyword_0_0()); }
	Library
	{ after(grammarAccess.getEMPIAccess().getLibraryKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getLibraryAssignment_0_1()); }
	(rule__EMPI__LibraryAssignment_0_1)
	{ after(grammarAccess.getEMPIAccess().getLibraryAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EMPI__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_1__0__Impl
	rule__EMPI__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getVersionKeyword_1_0()); }
	Version
	{ after(grammarAccess.getEMPIAccess().getVersionKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getVersionAssignment_1_1()); }
	(rule__EMPI__VersionAssignment_1_1)
	{ after(grammarAccess.getEMPIAccess().getVersionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EMPI__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_2__0__Impl
	rule__EMPI__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getScaling_efficiencyKeyword_2_0()); }
	Scaling_efficiency
	{ after(grammarAccess.getEMPIAccess().getScaling_efficiencyKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getScaling_efficiencyAssignment_2_1()); }
	(rule__EMPI__Scaling_efficiencyAssignment_2_1)
	{ after(grammarAccess.getEMPIAccess().getScaling_efficiencyAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EMPI__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_3__0__Impl
	rule__EMPI__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getCore_subscriptionKeyword_3_0()); }
	Core_subscription
	{ after(grammarAccess.getEMPIAccess().getCore_subscriptionKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getCore_subscriptionAssignment_3_1()); }
	(rule__EMPI__Core_subscriptionAssignment_3_1)
	{ after(grammarAccess.getEMPIAccess().getCore_subscriptionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EMPI__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_4__0__Impl
	rule__EMPI__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getMessage_sizeKeyword_4_0()); }
	Message_size
	{ after(grammarAccess.getEMPIAccess().getMessage_sizeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEMPIAccess().getMessage_sizeAssignment_4_1()); }
	(rule__EMPI__Message_sizeAssignment_4_1)
	{ after(grammarAccess.getEMPIAccess().getMessage_sizeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENMP__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__Group_0__0__Impl
	rule__EOPENMP__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPAccess().getNumber_of_threadsKeyword_0_0()); }
	Number_of_threads
	{ after(grammarAccess.getEOPENMPAccess().getNumber_of_threadsKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPAccess().getNumber_of_threadsAssignment_0_1()); }
	(rule__EOPENMP__Number_of_threadsAssignment_0_1)
	{ after(grammarAccess.getEOPENMPAccess().getNumber_of_threadsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENMP__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__Group_1__0__Impl
	rule__EOPENMP__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPAccess().getScaling_efficiencyKeyword_1_0()); }
	Scaling_efficiency
	{ after(grammarAccess.getEOPENMPAccess().getScaling_efficiencyKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPAccess().getScaling_efficiencyAssignment_1_1()); }
	(rule__EOPENMP__Scaling_efficiencyAssignment_1_1)
	{ after(grammarAccess.getEOPENMPAccess().getScaling_efficiencyAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENMP__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__Group_2__0__Impl
	rule__EOPENMP__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPAccess().getAffinityKeyword_2_0()); }
	Affinity
	{ after(grammarAccess.getEOPENMPAccess().getAffinityKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENMPAccess().getAffinityAssignment_2_1()); }
	(rule__EOPENMP__AffinityAssignment_2_1)
	{ after(grammarAccess.getEOPENMPAccess().getAffinityAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENACC__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__Group_0__0__Impl
	rule__EOPENACC__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCAccess().getCompilerKeyword_0_0()); }
	Compiler
	{ after(grammarAccess.getEOPENACCAccess().getCompilerKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCAccess().getCompilerAssignment_0_1()); }
	(rule__EOPENACC__CompilerAssignment_0_1)
	{ after(grammarAccess.getEOPENACCAccess().getCompilerAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENACC__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__Group_1__0__Impl
	rule__EOPENACC__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCAccess().getVersionKeyword_1_0()); }
	Version
	{ after(grammarAccess.getEOPENACCAccess().getVersionKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCAccess().getVersionAssignment_1_1()); }
	(rule__EOPENACC__VersionAssignment_1_1)
	{ after(grammarAccess.getEOPENACCAccess().getVersionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENACC__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__Group_2__0__Impl
	rule__EOPENACC__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCAccess().getNumber_of_accKeyword_2_0()); }
	Number_of_acc
	{ after(grammarAccess.getEOPENACCAccess().getNumber_of_accKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENACCAccess().getNumber_of_accAssignment_2_1()); }
	(rule__EOPENACC__Number_of_accAssignment_2_1)
	{ after(grammarAccess.getEOPENACCAccess().getNumber_of_accAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENCL__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__Group_0__0__Impl
	rule__EOPENCL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLAccess().getCompilerKeyword_0_0()); }
	Compiler
	{ after(grammarAccess.getEOPENCLAccess().getCompilerKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLAccess().getCompilerAssignment_0_1()); }
	(rule__EOPENCL__CompilerAssignment_0_1)
	{ after(grammarAccess.getEOPENCLAccess().getCompilerAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENCL__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__Group_1__0__Impl
	rule__EOPENCL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLAccess().getVersionKeyword_1_0()); }
	Version
	{ after(grammarAccess.getEOPENCLAccess().getVersionKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLAccess().getVersionAssignment_1_1()); }
	(rule__EOPENCL__VersionAssignment_1_1)
	{ after(grammarAccess.getEOPENCLAccess().getVersionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENCL__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__Group_2__0__Impl
	rule__EOPENCL__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLAccess().getNumber_of_accKeyword_2_0()); }
	Number_of_acc
	{ after(grammarAccess.getEOPENCLAccess().getNumber_of_accKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOPENCLAccess().getNumber_of_accAssignment_2_1()); }
	(rule__EOPENCL__Number_of_accAssignment_2_1)
	{ after(grammarAccess.getEOPENCLAccess().getNumber_of_accAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__0__Impl
	rule__REAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
	(RULE_INT)?
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__1__Impl
	rule__REAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
	FullStop
	{ after(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getAlternatives_2()); }
	(rule__REAL__Alternatives_2)
	{ after(grammarAccess.getREALAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOptBuild__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEOptBuildAccess().getUnorderedGroup());
	}
:
	rule__EOptBuild__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEOptBuildAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEOptBuildAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOptBuild__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOptBuildAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOptBuildAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOptBuildAccess().getGroup_0()); }
					(rule__EOptBuild__Group_0__0)
					{ after(grammarAccess.getEOptBuildAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOptBuildAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOptBuildAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOptBuildAccess().getGroup_1()); }
					(rule__EOptBuild__Group_1__0)
					{ after(grammarAccess.getEOptBuildAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEOptBuildAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOptBuild__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptBuild__UnorderedGroup__Impl
	rule__EOptBuild__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOptBuild__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EAutotuning__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEAutotuningAccess().getUnorderedGroup());
	}
:
	rule__EAutotuning__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEAutotuningAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEAutotuningAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAutotuning__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAutotuningAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAutotuningAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAutotuningAccess().getGroup_0()); }
					(rule__EAutotuning__Group_0__0)
					{ after(grammarAccess.getEAutotuningAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAutotuningAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAutotuningAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAutotuningAccess().getGroup_1()); }
					(rule__EAutotuning__Group_1__0)
					{ after(grammarAccess.getEAutotuningAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEAutotuningAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAutotuning__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAutotuning__UnorderedGroup__Impl
	rule__EAutotuning__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAutotuning__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingConfig__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup());
	}
:
	rule__EAITrainingConfig__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingConfigAccess().getGroup_0()); }
					(rule__EAITrainingConfig__Group_0__0)
					{ after(grammarAccess.getEAITrainingConfigAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingConfigAccess().getGroup_1()); }
					(rule__EAITrainingConfig__Group_1__0)
					{ after(grammarAccess.getEAITrainingConfigAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingConfigAccess().getGroup_2()); }
					(rule__EAITrainingConfig__Group_2__0)
					{ after(grammarAccess.getEAITrainingConfigAccess().getGroup_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingConfigAccess().getGroup_3()); }
					(rule__EAITrainingConfig__Group_3__0)
					{ after(grammarAccess.getEAITrainingConfigAccess().getGroup_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingConfigAccess().getGroup_4()); }
					(rule__EAITrainingConfig__Group_4__0)
					{ after(grammarAccess.getEAITrainingConfigAccess().getGroup_4()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEAITrainingConfigAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__UnorderedGroup__Impl
	rule__EAITrainingConfig__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__UnorderedGroup__Impl
	rule__EAITrainingConfig__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__UnorderedGroup__Impl
	rule__EAITrainingConfig__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__UnorderedGroup__Impl
	rule__EAITrainingConfig__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingConfig__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingData__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup());
	}
:
	rule__EAITrainingData__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAITrainingData__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingDataAccess().getGroup_0()); }
					(rule__EAITrainingData__Group_0__0)
					{ after(grammarAccess.getEAITrainingDataAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingDataAccess().getGroup_1()); }
					(rule__EAITrainingData__Group_1__0)
					{ after(grammarAccess.getEAITrainingDataAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingDataAccess().getGroup_2()); }
					(rule__EAITrainingData__Group_2__0)
					{ after(grammarAccess.getEAITrainingDataAccess().getGroup_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingDataAccess().getGroup_3()); }
					(rule__EAITrainingData__Group_3__0)
					{ after(grammarAccess.getEAITrainingDataAccess().getGroup_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingDataAccess().getGroup_4()); }
					(rule__EAITrainingData__Group_4__0)
					{ after(grammarAccess.getEAITrainingDataAccess().getGroup_4()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEAITrainingDataAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAITrainingData__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__UnorderedGroup__Impl
	rule__EAITrainingData__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__UnorderedGroup__Impl
	rule__EAITrainingData__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__UnorderedGroup__Impl
	rule__EAITrainingData__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__UnorderedGroup__Impl
	rule__EAITrainingData__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingData__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EAITrainingETL__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup());
	}
:
	rule__EAITrainingETL__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingETLAccess().getGroup_0()); }
					(rule__EAITrainingETL__Group_0__0)
					{ after(grammarAccess.getEAITrainingETLAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEAITrainingETLAccess().getGroup_1()); }
					(rule__EAITrainingETL__Group_1__0)
					{ after(grammarAccess.getEAITrainingETLAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEAITrainingETLAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingETL__UnorderedGroup__Impl
	rule__EAITrainingETL__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EAITrainingETL__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EKeras__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEKerasAccess().getUnorderedGroup());
	}
:
	rule__EKeras__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEKerasAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EKeras__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEKerasAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEKerasAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEKerasAccess().getGroup_0()); }
					(rule__EKeras__Group_0__0)
					{ after(grammarAccess.getEKerasAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEKerasAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEKerasAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEKerasAccess().getGroup_1()); }
					(rule__EKeras__Group_1__0)
					{ after(grammarAccess.getEKerasAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEKerasAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EKeras__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKeras__UnorderedGroup__Impl
	rule__EKeras__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EKeras__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__ETensorFlow__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getETensorFlowAccess().getUnorderedGroup());
	}
:
	rule__ETensorFlow__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getETensorFlowAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__ETensorFlow__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getETensorFlowAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getETensorFlowAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getETensorFlowAccess().getGroup_0()); }
					(rule__ETensorFlow__Group_0__0)
					{ after(grammarAccess.getETensorFlowAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getETensorFlowAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getETensorFlowAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getETensorFlowAccess().getGroup_1()); }
					(rule__ETensorFlow__Group_1__0)
					{ after(grammarAccess.getETensorFlowAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETensorFlowAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__ETensorFlow__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlow__UnorderedGroup__Impl
	rule__ETensorFlow__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ETensorFlow__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EPyTorch__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEPyTorchAccess().getUnorderedGroup());
	}
:
	rule__EPyTorch__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEPyTorchAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EPyTorch__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEPyTorchAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEPyTorchAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEPyTorchAccess().getGroup_0()); }
					(rule__EPyTorch__Group_0__0)
					{ after(grammarAccess.getEPyTorchAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEPyTorchAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEPyTorchAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEPyTorchAccess().getGroup_1()); }
					(rule__EPyTorch__Group_1__0)
					{ after(grammarAccess.getEPyTorchAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPyTorchAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EPyTorch__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorch__UnorderedGroup__Impl
	rule__EPyTorch__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EPyTorch__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPC__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEHPCAccess().getUnorderedGroup());
	}
:
	rule__EHPC__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEHPCAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEHPCAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EHPC__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCAccess().getGroup_0()); }
					(rule__EHPC__Group_0__0)
					{ after(grammarAccess.getEHPCAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCAccess().getOpenmpAssignment_1()); }
					(rule__EHPC__OpenmpAssignment_1)
					{ after(grammarAccess.getEHPCAccess().getOpenmpAssignment_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCAccess().getOpenaccAssignment_2()); }
					(rule__EHPC__OpenaccAssignment_2)
					{ after(grammarAccess.getEHPCAccess().getOpenaccAssignment_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCAccess().getOpenclAssignment_3()); }
					(rule__EHPC__OpenclAssignment_3)
					{ after(grammarAccess.getEHPCAccess().getOpenclAssignment_3()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHPCAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EHPC__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__UnorderedGroup__Impl
	rule__EHPC__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__UnorderedGroup__Impl
	rule__EHPC__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__UnorderedGroup__Impl
	rule__EHPC__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPC__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCData__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEHPCDataAccess().getUnorderedGroup());
	}
:
	rule__EHPCData__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEHPCDataAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EHPCData__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCDataAccess().getGroup_0()); }
					(rule__EHPCData__Group_0__0)
					{ after(grammarAccess.getEHPCDataAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCDataAccess().getGroup_1()); }
					(rule__EHPCData__Group_1__0)
					{ after(grammarAccess.getEHPCDataAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCDataAccess().getGroup_2()); }
					(rule__EHPCData__Group_2__0)
					{ after(grammarAccess.getEHPCDataAccess().getGroup_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCDataAccess().getGroup_3()); }
					(rule__EHPCData__Group_3__0)
					{ after(grammarAccess.getEHPCDataAccess().getGroup_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCDataAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCDataAccess().getGroup_4()); }
					(rule__EHPCData__Group_4__0)
					{ after(grammarAccess.getEHPCDataAccess().getGroup_4()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHPCDataAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EHPCData__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__UnorderedGroup__Impl
	rule__EHPCData__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__UnorderedGroup__Impl
	rule__EHPCData__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__UnorderedGroup__Impl
	rule__EHPCData__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__UnorderedGroup__Impl
	rule__EHPCData__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCData__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EHPCETL__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEHPCETLAccess().getUnorderedGroup());
	}
:
	rule__EHPCETL__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEHPCETLAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EHPCETL__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCETLAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCETLAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCETLAccess().getGroup_0()); }
					(rule__EHPCETL__Group_0__0)
					{ after(grammarAccess.getEHPCETLAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEHPCETLAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEHPCETLAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEHPCETLAccess().getGroup_1()); }
					(rule__EHPCETL__Group_1__0)
					{ after(grammarAccess.getEHPCETLAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHPCETLAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EHPCETL__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCETL__UnorderedGroup__Impl
	rule__EHPCETL__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EHPCETL__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EMPI__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEMPIAccess().getUnorderedGroup());
	}
:
	rule__EMPI__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEMPIAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEMPIAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EMPI__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEMPIAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEMPIAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEMPIAccess().getGroup_0()); }
					(rule__EMPI__Group_0__0)
					{ after(grammarAccess.getEMPIAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEMPIAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEMPIAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEMPIAccess().getGroup_1()); }
					(rule__EMPI__Group_1__0)
					{ after(grammarAccess.getEMPIAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEMPIAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEMPIAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEMPIAccess().getGroup_2()); }
					(rule__EMPI__Group_2__0)
					{ after(grammarAccess.getEMPIAccess().getGroup_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEMPIAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEMPIAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEMPIAccess().getGroup_3()); }
					(rule__EMPI__Group_3__0)
					{ after(grammarAccess.getEMPIAccess().getGroup_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEMPIAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEMPIAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEMPIAccess().getGroup_4()); }
					(rule__EMPI__Group_4__0)
					{ after(grammarAccess.getEMPIAccess().getGroup_4()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEMPIAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EMPI__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__UnorderedGroup__Impl
	rule__EMPI__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__UnorderedGroup__Impl
	rule__EMPI__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__UnorderedGroup__Impl
	rule__EMPI__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__UnorderedGroup__Impl
	rule__EMPI__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EMPI__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENMP__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEOPENMPAccess().getUnorderedGroup());
	}
:
	rule__EOPENMP__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEOPENMPAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEOPENMPAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOPENMP__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENMPAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENMPAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENMPAccess().getGroup_0()); }
					(rule__EOPENMP__Group_0__0)
					{ after(grammarAccess.getEOPENMPAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENMPAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENMPAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENMPAccess().getGroup_1()); }
					(rule__EOPENMP__Group_1__0)
					{ after(grammarAccess.getEOPENMPAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENMPAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENMPAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENMPAccess().getGroup_2()); }
					(rule__EOPENMP__Group_2__0)
					{ after(grammarAccess.getEOPENMPAccess().getGroup_2()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEOPENMPAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOPENMP__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__UnorderedGroup__Impl
	rule__EOPENMP__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__UnorderedGroup__Impl
	rule__EOPENMP__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENMP__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENACC__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEOPENACCAccess().getUnorderedGroup());
	}
:
	rule__EOPENACC__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEOPENACCAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEOPENACCAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOPENACC__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENACCAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENACCAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENACCAccess().getGroup_0()); }
					(rule__EOPENACC__Group_0__0)
					{ after(grammarAccess.getEOPENACCAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENACCAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENACCAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENACCAccess().getGroup_1()); }
					(rule__EOPENACC__Group_1__0)
					{ after(grammarAccess.getEOPENACCAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENACCAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENACCAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENACCAccess().getGroup_2()); }
					(rule__EOPENACC__Group_2__0)
					{ after(grammarAccess.getEOPENACCAccess().getGroup_2()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEOPENACCAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOPENACC__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__UnorderedGroup__Impl
	rule__EOPENACC__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__UnorderedGroup__Impl
	rule__EOPENACC__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENACC__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__EOPENCL__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEOPENCLAccess().getUnorderedGroup());
	}
:
	rule__EOPENCL__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEOPENCLAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEOPENCLAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOPENCL__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENCLAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENCLAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENCLAccess().getGroup_0()); }
					(rule__EOPENCL__Group_0__0)
					{ after(grammarAccess.getEOPENCLAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENCLAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENCLAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENCLAccess().getGroup_1()); }
					(rule__EOPENCL__Group_1__0)
					{ after(grammarAccess.getEOPENCLAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEOPENCLAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEOPENCLAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEOPENCLAccess().getGroup_2()); }
					(rule__EOPENCL__Group_2__0)
					{ after(grammarAccess.getEOPENCLAccess().getGroup_2()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEOPENCLAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__EOPENCL__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__UnorderedGroup__Impl
	rule__EOPENCL__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__UnorderedGroup__Impl
	rule__EOPENCL__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOPENCL__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Optimization_Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptimization_ModelAccess().getNameQUALIFIED_NAMETerminalRuleCall_1_0()); }
		RULE_QUALIFIED_NAME
		{ after(grammarAccess.getOptimization_ModelAccess().getNameQUALIFIED_NAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Optimization_Model__OptimizationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptimization_ModelAccess().getOptimizationEOptimizationParserRuleCall_4_0()); }
		ruleEOptimization
		{ after(grammarAccess.getOptimization_ModelAccess().getOptimizationEOptimizationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Enable_opt_buildAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptimizationAccess().getEnable_opt_buildBOOLEANTerminalRuleCall_0_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getEOptimizationAccess().getEnable_opt_buildBOOLEANTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Enable_autotuningAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptimizationAccess().getEnable_autotuningBOOLEANTerminalRuleCall_1_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getEOptimizationAccess().getEnable_autotuningBOOLEANTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__App_typeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptimizationAccess().getApp_typeEAppTypeParserRuleCall_2_1_0()); }
		ruleEAppType
		{ after(grammarAccess.getEOptimizationAccess().getApp_typeEAppTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__Opt_buildAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptimizationAccess().getOpt_buildEOptBuildParserRuleCall_3_2_0()); }
		ruleEOptBuild
		{ after(grammarAccess.getEOptimizationAccess().getOpt_buildEOptBuildParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__AutotuningAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptimizationAccess().getAutotuningEAutotuningParserRuleCall_4_2_0()); }
		ruleEAutotuning
		{ after(grammarAccess.getEOptimizationAccess().getAutotuningEAutotuningParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptimization__App_optimizationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptimizationAccess().getApp_optimizationEOptimizationCasesParserRuleCall_5_0()); }
		ruleEOptimizationCases
		{ after(grammarAccess.getEOptimizationAccess().getApp_optimizationEOptimizationCasesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingCase__Ai_trainingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingCaseAccess().getAi_trainingEAITrainingParserRuleCall_2_0()); }
		ruleEAITraining
		{ after(grammarAccess.getEAITrainingCaseAccess().getAi_trainingEAITrainingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCCase__HpcAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCCaseAccess().getHpcEHPCParserRuleCall_2_0()); }
		ruleEHPC
		{ after(grammarAccess.getEHPCCaseAccess().getHpcEHPCParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Cpu_typeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptBuildAccess().getCpu_typeECPUTypeParserRuleCall_0_1_0()); }
		ruleECPUType
		{ after(grammarAccess.getEOptBuildAccess().getCpu_typeECPUTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOptBuild__Acc_typeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOptBuildAccess().getAcc_typeEACCTypeParserRuleCall_1_1_0()); }
		ruleEACCType
		{ after(grammarAccess.getEOptBuildAccess().getAcc_typeEACCTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__TunerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAutotuningAccess().getTunerETunerParserRuleCall_0_1_0()); }
		ruleETuner
		{ after(grammarAccess.getEAutotuningAccess().getTunerETunerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAutotuning__InputAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAutotuningAccess().getInputSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEAutotuningAccess().getInputSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__ConfigAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingAccess().getConfigEAITrainingConfigParserRuleCall_0_2_0()); }
		ruleEAITrainingConfig
		{ after(grammarAccess.getEAITrainingAccess().getConfigEAITrainingConfigParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__DataAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingAccess().getDataEAITrainingDataParserRuleCall_1_2_0()); }
		ruleEAITrainingData
		{ after(grammarAccess.getEAITrainingAccess().getDataEAITrainingDataParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITraining__AitrainingcaseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingAccess().getAitrainingcaseEAITrainingCasesParserRuleCall_2_0()); }
		ruleEAITrainingCases
		{ after(grammarAccess.getEAITrainingAccess().getAitrainingcaseEAITrainingCasesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorchCase__PytorchAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEPyTorchCaseAccess().getPytorchEPyTorchParserRuleCall_2_0()); }
		ruleEPyTorch
		{ after(grammarAccess.getEPyTorchCaseAccess().getPytorchEPyTorchParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlowCase__TensorflowAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getETensorFlowCaseAccess().getTensorflowETensorFlowParserRuleCall_2_0()); }
		ruleETensorFlow
		{ after(grammarAccess.getETensorFlowCaseAccess().getTensorflowETensorFlowParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKerasCase__KerasAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEKerasCaseAccess().getKerasEKerasParserRuleCall_2_0()); }
		ruleEKeras
		{ after(grammarAccess.getEKerasCaseAccess().getKerasEKerasParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Ai_frameworkAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingConfigAccess().getAi_frameworkEAIFrameworkParserRuleCall_0_1_0()); }
		ruleEAIFramework
		{ after(grammarAccess.getEAITrainingConfigAccess().getAi_frameworkEAIFrameworkParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingConfigAccess().getTypeEAITrainingTypeParserRuleCall_1_1_0()); }
		ruleEAITrainingType
		{ after(grammarAccess.getEAITrainingConfigAccess().getTypeEAITrainingTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__Distributed_trainingAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingConfigAccess().getDistributed_trainingBOOLEANTerminalRuleCall_2_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getEAITrainingConfigAccess().getDistributed_trainingBOOLEANTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__LayersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingConfigAccess().getLayersINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEAITrainingConfigAccess().getLayersINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingConfig__ParametersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingConfigAccess().getParametersINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEAITrainingConfigAccess().getParametersINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__LocationAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingDataAccess().getLocationSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEAITrainingDataAccess().getLocationSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__BasedataAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingDataAccess().getBasedataEBasedataParserRuleCall_1_1_0()); }
		ruleEBasedata
		{ after(grammarAccess.getEAITrainingDataAccess().getBasedataEBasedataParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__SizeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingDataAccess().getSizeINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEAITrainingDataAccess().getSizeINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__CountAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingDataAccess().getCountINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEAITrainingDataAccess().getCountINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingData__EtlAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingDataAccess().getEtlEAITrainingETLParserRuleCall_4_2_0()); }
		ruleEAITrainingETL
		{ after(grammarAccess.getEAITrainingDataAccess().getEtlEAITrainingETLParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__PrefetchAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingETLAccess().getPrefetchINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEAITrainingETLAccess().getPrefetchINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EAITrainingETL__CacheAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEAITrainingETLAccess().getCacheINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEAITrainingETLAccess().getCacheINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__VersionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEKerasAccess().getVersionSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEKerasAccess().getVersionSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EKeras__BackendAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEKerasAccess().getBackendEAIFrameworkParserRuleCall_1_1_0()); }
		ruleEAIFramework
		{ after(grammarAccess.getEKerasAccess().getBackendEAIFrameworkParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__VersionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getETensorFlowAccess().getVersionSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getETensorFlowAccess().getVersionSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ETensorFlow__XlaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getETensorFlowAccess().getXlaBOOLEANTerminalRuleCall_1_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getETensorFlowAccess().getXlaBOOLEANTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__VersionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEPyTorchAccess().getVersionSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEPyTorchAccess().getVersionSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EPyTorch__GlowAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEPyTorchAccess().getGlowBOOLEANTerminalRuleCall_1_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getEPyTorchAccess().getGlowBOOLEANTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__ConfigAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCAccess().getConfigEHPCConfigParserRuleCall_0_0_2_0()); }
		ruleEHPCConfig
		{ after(grammarAccess.getEHPCAccess().getConfigEHPCConfigParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__DataAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCAccess().getDataEHPCDataParserRuleCall_0_1_2_0()); }
		ruleEHPCData
		{ after(grammarAccess.getEHPCAccess().getDataEHPCDataParserRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__MpiAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCAccess().getMpiEMPICaseParserRuleCall_0_2_0()); }
		ruleEMPICase
		{ after(grammarAccess.getEHPCAccess().getMpiEMPICaseParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__OpenmpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCAccess().getOpenmpEOPENMPCaseParserRuleCall_1_0()); }
		ruleEOPENMPCase
		{ after(grammarAccess.getEHPCAccess().getOpenmpEOPENMPCaseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__OpenaccAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCAccess().getOpenaccEOPENACCCaseParserRuleCall_2_0()); }
		ruleEOPENACCCase
		{ after(grammarAccess.getEHPCAccess().getOpenaccEOPENACCCaseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPC__OpenclAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCAccess().getOpenclEOPENCLCaseParserRuleCall_3_0()); }
		ruleEOPENCLCase
		{ after(grammarAccess.getEHPCAccess().getOpenclEOPENCLCaseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCLCase__OpenclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENCLCaseAccess().getOpenclEOPENCLParserRuleCall_2_0()); }
		ruleEOPENCL
		{ after(grammarAccess.getEOPENCLCaseAccess().getOpenclEOPENCLParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACCCase__OpenaccAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENACCCaseAccess().getOpenaccEOPENACCParserRuleCall_2_0()); }
		ruleEOPENACC
		{ after(grammarAccess.getEOPENACCCaseAccess().getOpenaccEOPENACCParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMPCase__OpenmpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENMPCaseAccess().getOpenmpEOPENMPParserRuleCall_2_0()); }
		ruleEOPENMP
		{ after(grammarAccess.getEOPENMPCaseAccess().getOpenmpEOPENMPParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPICase__MpiAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPICaseAccess().getMpiEMPIParserRuleCall_2_0()); }
		ruleEMPI
		{ after(grammarAccess.getEMPICaseAccess().getMpiEMPIParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCConfig__ParallelisationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCConfigAccess().getParallelisationEParallelisationParserRuleCall_1_0()); }
		ruleEParallelisation
		{ after(grammarAccess.getEHPCConfigAccess().getParallelisationEParallelisationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__LocationAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCDataAccess().getLocationSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEHPCDataAccess().getLocationSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__BasedataAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCDataAccess().getBasedataEHPCBasedataParserRuleCall_1_1_0()); }
		ruleEHPCBasedata
		{ after(grammarAccess.getEHPCDataAccess().getBasedataEHPCBasedataParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__SizeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCDataAccess().getSizeINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEHPCDataAccess().getSizeINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__CountAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCDataAccess().getCountINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEHPCDataAccess().getCountINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCData__EtlAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCDataAccess().getEtlEHPCETLParserRuleCall_4_2_0()); }
		ruleEHPCETL
		{ after(grammarAccess.getEHPCDataAccess().getEtlEHPCETLParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__PrefetchAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCETLAccess().getPrefetchBOOLEANTerminalRuleCall_0_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getEHPCETLAccess().getPrefetchBOOLEANTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EHPCETL__CacheAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEHPCETLAccess().getCacheBOOLEANTerminalRuleCall_1_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getEHPCETLAccess().getCacheBOOLEANTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__LibraryAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPIAccess().getLibraryEMPILibraryParserRuleCall_0_1_0()); }
		ruleEMPILibrary
		{ after(grammarAccess.getEMPIAccess().getLibraryEMPILibraryParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__VersionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPIAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEMPIAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Scaling_efficiencyAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPIAccess().getScaling_efficiencyRealValueParserRuleCall_2_1_0()); }
		ruleRealValue
		{ after(grammarAccess.getEMPIAccess().getScaling_efficiencyRealValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Core_subscriptionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPIAccess().getCore_subscriptionINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEMPIAccess().getCore_subscriptionINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EMPI__Message_sizeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEMPIAccess().getMessage_sizeEMPIMessageSizeParserRuleCall_4_1_0()); }
		ruleEMPIMessageSize
		{ after(grammarAccess.getEMPIAccess().getMessage_sizeEMPIMessageSizeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Number_of_threadsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENMPAccess().getNumber_of_threadsINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEOPENMPAccess().getNumber_of_threadsINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__Scaling_efficiencyAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENMPAccess().getScaling_efficiencyRealValueParserRuleCall_1_1_0()); }
		ruleRealValue
		{ after(grammarAccess.getEOPENMPAccess().getScaling_efficiencyRealValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENMP__AffinityAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENMPAccess().getAffinityEOPENAffinityParserRuleCall_2_1_0()); }
		ruleEOPENAffinity
		{ after(grammarAccess.getEOPENMPAccess().getAffinityEOPENAffinityParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__CompilerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENACCAccess().getCompilerECompilerParserRuleCall_0_1_0()); }
		ruleECompiler
		{ after(grammarAccess.getEOPENACCAccess().getCompilerECompilerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__VersionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENACCAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEOPENACCAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENACC__Number_of_accAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENACCAccess().getNumber_of_accINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEOPENACCAccess().getNumber_of_accINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__CompilerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENCLAccess().getCompilerECompilerParserRuleCall_0_1_0()); }
		ruleECompiler
		{ after(grammarAccess.getEOPENCLAccess().getCompilerECompilerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__VersionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENCLAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEOPENCLAccess().getVersionSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOPENCL__Number_of_accAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOPENCLAccess().getNumber_of_accINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEOPENCLAccess().getNumber_of_accINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
