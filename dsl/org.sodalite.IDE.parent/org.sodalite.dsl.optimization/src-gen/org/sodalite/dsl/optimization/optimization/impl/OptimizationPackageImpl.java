/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.optimization.optimization.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.sodalite.dsl.optimization.optimization.EAITraining;
import org.sodalite.dsl.optimization.optimization.EAITrainingCase;
import org.sodalite.dsl.optimization.optimization.EAITrainingCases;
import org.sodalite.dsl.optimization.optimization.EAITrainingConfig;
import org.sodalite.dsl.optimization.optimization.EAITrainingData;
import org.sodalite.dsl.optimization.optimization.EAITrainingETL;
import org.sodalite.dsl.optimization.optimization.EAutotuning;
import org.sodalite.dsl.optimization.optimization.EHPCCase;
import org.sodalite.dsl.optimization.optimization.EHPCConfig;
import org.sodalite.dsl.optimization.optimization.EHPCData;
import org.sodalite.dsl.optimization.optimization.EKeras;
import org.sodalite.dsl.optimization.optimization.EKerasCase;
import org.sodalite.dsl.optimization.optimization.EMPICase;
import org.sodalite.dsl.optimization.optimization.EOPENACCCase;
import org.sodalite.dsl.optimization.optimization.EOPENCLCase;
import org.sodalite.dsl.optimization.optimization.EOPENMPCase;
import org.sodalite.dsl.optimization.optimization.EOptBuild;
import org.sodalite.dsl.optimization.optimization.EOptimization;
import org.sodalite.dsl.optimization.optimization.EOptimizationCases;
import org.sodalite.dsl.optimization.optimization.EPyTorch;
import org.sodalite.dsl.optimization.optimization.EPyTorchCase;
import org.sodalite.dsl.optimization.optimization.ETensorFlow;
import org.sodalite.dsl.optimization.optimization.ETensorFlowCase;
import org.sodalite.dsl.optimization.optimization.OptimizationFactory;
import org.sodalite.dsl.optimization.optimization.OptimizationPackage;
import org.sodalite.dsl.optimization.optimization.Optimization_Model;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class OptimizationPackageImpl extends EPackageImpl implements OptimizationPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass optimization_ModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eOptimizationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eOptimizationCasesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eaiTrainingCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ehpcCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eOptBuildEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eAutotuningEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eaiTrainingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eaiTrainingCasesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ePyTorchCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eTensorFlowCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eKerasCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eaiTrainingConfigEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eaiTrainingDataEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eaiTrainingETLEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eKerasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eTensorFlowEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ePyTorchEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ehpcEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eopenclCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eopenaccCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eopenmpCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass empiCaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ehpcConfigEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ehpcDataEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ehpcetlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass empiEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eopenmpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eopenaccEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eopenclEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.sodalite.dsl.optimization.optimization.OptimizationPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private OptimizationPackageImpl()
  {
    super(eNS_URI, OptimizationFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link OptimizationPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static OptimizationPackage init()
  {
    if (isInited) return (OptimizationPackage)EPackage.Registry.INSTANCE.getEPackage(OptimizationPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredOptimizationPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    OptimizationPackageImpl theOptimizationPackage = registeredOptimizationPackage instanceof OptimizationPackageImpl ? (OptimizationPackageImpl)registeredOptimizationPackage : new OptimizationPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theOptimizationPackage.createPackageContents();

    // Initialize created meta-data
    theOptimizationPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theOptimizationPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(OptimizationPackage.eNS_URI, theOptimizationPackage);
    return theOptimizationPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOptimization_Model()
  {
    return optimization_ModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOptimization_Model_Name()
  {
    return (EAttribute)optimization_ModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOptimization_Model_Optimization()
  {
    return (EReference)optimization_ModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOptimization()
  {
    return eOptimizationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOptimization_Enable_opt_build()
  {
    return (EAttribute)eOptimizationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOptimization_Enable_autotuning()
  {
    return (EAttribute)eOptimizationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOptimization_App_type()
  {
    return (EAttribute)eOptimizationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEOptimization_Opt_build()
  {
    return (EReference)eOptimizationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEOptimization_Autotuning()
  {
    return (EReference)eOptimizationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEOptimization_App_optimization()
  {
    return (EReference)eOptimizationEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOptimizationCases()
  {
    return eOptimizationCasesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAITrainingCase()
  {
    return eaiTrainingCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEAITrainingCase_Ai_training()
  {
    return (EReference)eaiTrainingCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEHPCCase()
  {
    return ehpcCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPCCase_Hpc()
  {
    return (EReference)ehpcCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOptBuild()
  {
    return eOptBuildEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOptBuild_Cpu_type()
  {
    return (EAttribute)eOptBuildEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOptBuild_Acc_type()
  {
    return (EAttribute)eOptBuildEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAutotuning()
  {
    return eAutotuningEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAutotuning_Tuner()
  {
    return (EAttribute)eAutotuningEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAutotuning_Input()
  {
    return (EAttribute)eAutotuningEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAITraining()
  {
    return eaiTrainingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEAITraining_Config()
  {
    return (EReference)eaiTrainingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEAITraining_Data()
  {
    return (EReference)eaiTrainingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEAITraining_Aitrainingcase()
  {
    return (EReference)eaiTrainingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAITrainingCases()
  {
    return eaiTrainingCasesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEPyTorchCase()
  {
    return ePyTorchCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEPyTorchCase_Pytorch()
  {
    return (EReference)ePyTorchCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getETensorFlowCase()
  {
    return eTensorFlowCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getETensorFlowCase_Tensorflow()
  {
    return (EReference)eTensorFlowCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEKerasCase()
  {
    return eKerasCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEKerasCase_Keras()
  {
    return (EReference)eKerasCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAITrainingConfig()
  {
    return eaiTrainingConfigEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingConfig_Ai_framework()
  {
    return (EAttribute)eaiTrainingConfigEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingConfig_Type()
  {
    return (EAttribute)eaiTrainingConfigEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingConfig_Distributed_training()
  {
    return (EAttribute)eaiTrainingConfigEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingConfig_Layers()
  {
    return (EAttribute)eaiTrainingConfigEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingConfig_Parameters()
  {
    return (EAttribute)eaiTrainingConfigEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAITrainingData()
  {
    return eaiTrainingDataEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingData_Location()
  {
    return (EAttribute)eaiTrainingDataEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingData_Basedata()
  {
    return (EAttribute)eaiTrainingDataEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingData_Size()
  {
    return (EAttribute)eaiTrainingDataEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingData_Count()
  {
    return (EAttribute)eaiTrainingDataEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEAITrainingData_Etl()
  {
    return (EReference)eaiTrainingDataEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAITrainingETL()
  {
    return eaiTrainingETLEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingETL_Prefetch()
  {
    return (EAttribute)eaiTrainingETLEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAITrainingETL_Cache()
  {
    return (EAttribute)eaiTrainingETLEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEKeras()
  {
    return eKerasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEKeras_Version()
  {
    return (EAttribute)eKerasEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEKeras_Backend()
  {
    return (EAttribute)eKerasEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getETensorFlow()
  {
    return eTensorFlowEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getETensorFlow_Version()
  {
    return (EAttribute)eTensorFlowEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getETensorFlow_Xla()
  {
    return (EAttribute)eTensorFlowEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEPyTorch()
  {
    return ePyTorchEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEPyTorch_Version()
  {
    return (EAttribute)ePyTorchEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEPyTorch_Glow()
  {
    return (EAttribute)ePyTorchEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEHPC()
  {
    return ehpcEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPC_Config()
  {
    return (EReference)ehpcEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPC_Data()
  {
    return (EReference)ehpcEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPC_Mpi()
  {
    return (EReference)ehpcEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPC_Openmp()
  {
    return (EReference)ehpcEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPC_Openacc()
  {
    return (EReference)ehpcEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPC_Opencl()
  {
    return (EReference)ehpcEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOPENCLCase()
  {
    return eopenclCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEOPENCLCase_Opencl()
  {
    return (EReference)eopenclCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOPENACCCase()
  {
    return eopenaccCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEOPENACCCase_Openacc()
  {
    return (EReference)eopenaccCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOPENMPCase()
  {
    return eopenmpCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEOPENMPCase_Openmp()
  {
    return (EReference)eopenmpCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEMPICase()
  {
    return empiCaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEMPICase_Mpi()
  {
    return (EReference)empiCaseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEHPCConfig()
  {
    return ehpcConfigEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEHPCConfig_Parallelisation()
  {
    return (EAttribute)ehpcConfigEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEHPCData()
  {
    return ehpcDataEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEHPCData_Location()
  {
    return (EAttribute)ehpcDataEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEHPCData_Basedata()
  {
    return (EAttribute)ehpcDataEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEHPCData_Size()
  {
    return (EAttribute)ehpcDataEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEHPCData_Count()
  {
    return (EAttribute)ehpcDataEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEHPCData_Etl()
  {
    return (EReference)ehpcDataEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEHPCETL()
  {
    return ehpcetlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEHPCETL_Prefetch()
  {
    return (EAttribute)ehpcetlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEHPCETL_Cache()
  {
    return (EAttribute)ehpcetlEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEMPI()
  {
    return empiEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEMPI_Library()
  {
    return (EAttribute)empiEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEMPI_Version()
  {
    return (EAttribute)empiEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEMPI_Scaling_efficiency()
  {
    return (EAttribute)empiEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEMPI_Core_subscription()
  {
    return (EAttribute)empiEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEMPI_Message_size()
  {
    return (EAttribute)empiEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOPENMP()
  {
    return eopenmpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENMP_Number_of_threads()
  {
    return (EAttribute)eopenmpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENMP_Scaling_efficiency()
  {
    return (EAttribute)eopenmpEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENMP_Affinity()
  {
    return (EAttribute)eopenmpEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOPENACC()
  {
    return eopenaccEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENACC_Compiler()
  {
    return (EAttribute)eopenaccEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENACC_Version()
  {
    return (EAttribute)eopenaccEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENACC_Number_of_acc()
  {
    return (EAttribute)eopenaccEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOPENCL()
  {
    return eopenclEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENCL_Compiler()
  {
    return (EAttribute)eopenclEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENCL_Version()
  {
    return (EAttribute)eopenclEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOPENCL_Number_of_acc()
  {
    return (EAttribute)eopenclEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OptimizationFactory getOptimizationFactory()
  {
    return (OptimizationFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    optimization_ModelEClass = createEClass(OPTIMIZATION_MODEL);
    createEAttribute(optimization_ModelEClass, OPTIMIZATION_MODEL__NAME);
    createEReference(optimization_ModelEClass, OPTIMIZATION_MODEL__OPTIMIZATION);

    eOptimizationEClass = createEClass(EOPTIMIZATION);
    createEAttribute(eOptimizationEClass, EOPTIMIZATION__ENABLE_OPT_BUILD);
    createEAttribute(eOptimizationEClass, EOPTIMIZATION__ENABLE_AUTOTUNING);
    createEAttribute(eOptimizationEClass, EOPTIMIZATION__APP_TYPE);
    createEReference(eOptimizationEClass, EOPTIMIZATION__OPT_BUILD);
    createEReference(eOptimizationEClass, EOPTIMIZATION__AUTOTUNING);
    createEReference(eOptimizationEClass, EOPTIMIZATION__APP_OPTIMIZATION);

    eOptimizationCasesEClass = createEClass(EOPTIMIZATION_CASES);

    eaiTrainingCaseEClass = createEClass(EAI_TRAINING_CASE);
    createEReference(eaiTrainingCaseEClass, EAI_TRAINING_CASE__AI_TRAINING);

    ehpcCaseEClass = createEClass(EHPC_CASE);
    createEReference(ehpcCaseEClass, EHPC_CASE__HPC);

    eOptBuildEClass = createEClass(EOPT_BUILD);
    createEAttribute(eOptBuildEClass, EOPT_BUILD__CPU_TYPE);
    createEAttribute(eOptBuildEClass, EOPT_BUILD__ACC_TYPE);

    eAutotuningEClass = createEClass(EAUTOTUNING);
    createEAttribute(eAutotuningEClass, EAUTOTUNING__TUNER);
    createEAttribute(eAutotuningEClass, EAUTOTUNING__INPUT);

    eaiTrainingEClass = createEClass(EAI_TRAINING);
    createEReference(eaiTrainingEClass, EAI_TRAINING__CONFIG);
    createEReference(eaiTrainingEClass, EAI_TRAINING__DATA);
    createEReference(eaiTrainingEClass, EAI_TRAINING__AITRAININGCASE);

    eaiTrainingCasesEClass = createEClass(EAI_TRAINING_CASES);

    ePyTorchCaseEClass = createEClass(EPY_TORCH_CASE);
    createEReference(ePyTorchCaseEClass, EPY_TORCH_CASE__PYTORCH);

    eTensorFlowCaseEClass = createEClass(ETENSOR_FLOW_CASE);
    createEReference(eTensorFlowCaseEClass, ETENSOR_FLOW_CASE__TENSORFLOW);

    eKerasCaseEClass = createEClass(EKERAS_CASE);
    createEReference(eKerasCaseEClass, EKERAS_CASE__KERAS);

    eaiTrainingConfigEClass = createEClass(EAI_TRAINING_CONFIG);
    createEAttribute(eaiTrainingConfigEClass, EAI_TRAINING_CONFIG__AI_FRAMEWORK);
    createEAttribute(eaiTrainingConfigEClass, EAI_TRAINING_CONFIG__TYPE);
    createEAttribute(eaiTrainingConfigEClass, EAI_TRAINING_CONFIG__DISTRIBUTED_TRAINING);
    createEAttribute(eaiTrainingConfigEClass, EAI_TRAINING_CONFIG__LAYERS);
    createEAttribute(eaiTrainingConfigEClass, EAI_TRAINING_CONFIG__PARAMETERS);

    eaiTrainingDataEClass = createEClass(EAI_TRAINING_DATA);
    createEAttribute(eaiTrainingDataEClass, EAI_TRAINING_DATA__LOCATION);
    createEAttribute(eaiTrainingDataEClass, EAI_TRAINING_DATA__BASEDATA);
    createEAttribute(eaiTrainingDataEClass, EAI_TRAINING_DATA__SIZE);
    createEAttribute(eaiTrainingDataEClass, EAI_TRAINING_DATA__COUNT);
    createEReference(eaiTrainingDataEClass, EAI_TRAINING_DATA__ETL);

    eaiTrainingETLEClass = createEClass(EAI_TRAINING_ETL);
    createEAttribute(eaiTrainingETLEClass, EAI_TRAINING_ETL__PREFETCH);
    createEAttribute(eaiTrainingETLEClass, EAI_TRAINING_ETL__CACHE);

    eKerasEClass = createEClass(EKERAS);
    createEAttribute(eKerasEClass, EKERAS__VERSION);
    createEAttribute(eKerasEClass, EKERAS__BACKEND);

    eTensorFlowEClass = createEClass(ETENSOR_FLOW);
    createEAttribute(eTensorFlowEClass, ETENSOR_FLOW__VERSION);
    createEAttribute(eTensorFlowEClass, ETENSOR_FLOW__XLA);

    ePyTorchEClass = createEClass(EPY_TORCH);
    createEAttribute(ePyTorchEClass, EPY_TORCH__VERSION);
    createEAttribute(ePyTorchEClass, EPY_TORCH__GLOW);

    ehpcEClass = createEClass(EHPC);
    createEReference(ehpcEClass, EHPC__CONFIG);
    createEReference(ehpcEClass, EHPC__DATA);
    createEReference(ehpcEClass, EHPC__MPI);
    createEReference(ehpcEClass, EHPC__OPENMP);
    createEReference(ehpcEClass, EHPC__OPENACC);
    createEReference(ehpcEClass, EHPC__OPENCL);

    eopenclCaseEClass = createEClass(EOPENCL_CASE);
    createEReference(eopenclCaseEClass, EOPENCL_CASE__OPENCL);

    eopenaccCaseEClass = createEClass(EOPENACC_CASE);
    createEReference(eopenaccCaseEClass, EOPENACC_CASE__OPENACC);

    eopenmpCaseEClass = createEClass(EOPENMP_CASE);
    createEReference(eopenmpCaseEClass, EOPENMP_CASE__OPENMP);

    empiCaseEClass = createEClass(EMPI_CASE);
    createEReference(empiCaseEClass, EMPI_CASE__MPI);

    ehpcConfigEClass = createEClass(EHPC_CONFIG);
    createEAttribute(ehpcConfigEClass, EHPC_CONFIG__PARALLELISATION);

    ehpcDataEClass = createEClass(EHPC_DATA);
    createEAttribute(ehpcDataEClass, EHPC_DATA__LOCATION);
    createEAttribute(ehpcDataEClass, EHPC_DATA__BASEDATA);
    createEAttribute(ehpcDataEClass, EHPC_DATA__SIZE);
    createEAttribute(ehpcDataEClass, EHPC_DATA__COUNT);
    createEReference(ehpcDataEClass, EHPC_DATA__ETL);

    ehpcetlEClass = createEClass(EHPCETL);
    createEAttribute(ehpcetlEClass, EHPCETL__PREFETCH);
    createEAttribute(ehpcetlEClass, EHPCETL__CACHE);

    empiEClass = createEClass(EMPI);
    createEAttribute(empiEClass, EMPI__LIBRARY);
    createEAttribute(empiEClass, EMPI__VERSION);
    createEAttribute(empiEClass, EMPI__SCALING_EFFICIENCY);
    createEAttribute(empiEClass, EMPI__CORE_SUBSCRIPTION);
    createEAttribute(empiEClass, EMPI__MESSAGE_SIZE);

    eopenmpEClass = createEClass(EOPENMP);
    createEAttribute(eopenmpEClass, EOPENMP__NUMBER_OF_THREADS);
    createEAttribute(eopenmpEClass, EOPENMP__SCALING_EFFICIENCY);
    createEAttribute(eopenmpEClass, EOPENMP__AFFINITY);

    eopenaccEClass = createEClass(EOPENACC);
    createEAttribute(eopenaccEClass, EOPENACC__COMPILER);
    createEAttribute(eopenaccEClass, EOPENACC__VERSION);
    createEAttribute(eopenaccEClass, EOPENACC__NUMBER_OF_ACC);

    eopenclEClass = createEClass(EOPENCL);
    createEAttribute(eopenclEClass, EOPENCL__COMPILER);
    createEAttribute(eopenclEClass, EOPENCL__VERSION);
    createEAttribute(eopenclEClass, EOPENCL__NUMBER_OF_ACC);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    eaiTrainingCaseEClass.getESuperTypes().add(this.getEOptimizationCases());
    ehpcCaseEClass.getESuperTypes().add(this.getEOptimizationCases());
    ePyTorchCaseEClass.getESuperTypes().add(this.getEAITrainingCases());
    eTensorFlowCaseEClass.getESuperTypes().add(this.getEAITrainingCases());
    eKerasCaseEClass.getESuperTypes().add(this.getEAITrainingCases());

    // Initialize classes and features; add operations and parameters
    initEClass(optimization_ModelEClass, Optimization_Model.class, "Optimization_Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOptimization_Model_Name(), ecorePackage.getEString(), "name", null, 0, 1, Optimization_Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOptimization_Model_Optimization(), this.getEOptimization(), null, "optimization", null, 0, 1, Optimization_Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eOptimizationEClass, EOptimization.class, "EOptimization", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEOptimization_Enable_opt_build(), ecorePackage.getEBoolean(), "enable_opt_build", null, 0, 1, EOptimization.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOptimization_Enable_autotuning(), ecorePackage.getEBoolean(), "enable_autotuning", null, 0, 1, EOptimization.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOptimization_App_type(), ecorePackage.getEString(), "app_type", null, 0, 1, EOptimization.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEOptimization_Opt_build(), this.getEOptBuild(), null, "opt_build", null, 0, 1, EOptimization.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEOptimization_Autotuning(), this.getEAutotuning(), null, "autotuning", null, 0, 1, EOptimization.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEOptimization_App_optimization(), this.getEOptimizationCases(), null, "app_optimization", null, 0, 1, EOptimization.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eOptimizationCasesEClass, EOptimizationCases.class, "EOptimizationCases", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(eaiTrainingCaseEClass, EAITrainingCase.class, "EAITrainingCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEAITrainingCase_Ai_training(), this.getEAITraining(), null, "ai_training", null, 0, 1, EAITrainingCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ehpcCaseEClass, EHPCCase.class, "EHPCCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEHPCCase_Hpc(), this.getEHPC(), null, "hpc", null, 0, 1, EHPCCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eOptBuildEClass, EOptBuild.class, "EOptBuild", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEOptBuild_Cpu_type(), ecorePackage.getEString(), "cpu_type", null, 0, 1, EOptBuild.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOptBuild_Acc_type(), ecorePackage.getEString(), "acc_type", null, 0, 1, EOptBuild.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eAutotuningEClass, EAutotuning.class, "EAutotuning", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEAutotuning_Tuner(), ecorePackage.getEString(), "tuner", null, 0, 1, EAutotuning.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAutotuning_Input(), ecorePackage.getEString(), "input", null, 0, 1, EAutotuning.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eaiTrainingEClass, EAITraining.class, "EAITraining", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEAITraining_Config(), this.getEAITrainingConfig(), null, "config", null, 0, 1, EAITraining.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEAITraining_Data(), this.getEAITrainingData(), null, "data", null, 0, 1, EAITraining.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEAITraining_Aitrainingcase(), this.getEAITrainingCases(), null, "aitrainingcase", null, 0, 1, EAITraining.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eaiTrainingCasesEClass, EAITrainingCases.class, "EAITrainingCases", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ePyTorchCaseEClass, EPyTorchCase.class, "EPyTorchCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEPyTorchCase_Pytorch(), this.getEPyTorch(), null, "pytorch", null, 0, 1, EPyTorchCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eTensorFlowCaseEClass, ETensorFlowCase.class, "ETensorFlowCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getETensorFlowCase_Tensorflow(), this.getETensorFlow(), null, "tensorflow", null, 0, 1, ETensorFlowCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eKerasCaseEClass, EKerasCase.class, "EKerasCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEKerasCase_Keras(), this.getEKeras(), null, "keras", null, 0, 1, EKerasCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eaiTrainingConfigEClass, EAITrainingConfig.class, "EAITrainingConfig", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEAITrainingConfig_Ai_framework(), ecorePackage.getEString(), "ai_framework", null, 0, 1, EAITrainingConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingConfig_Type(), ecorePackage.getEString(), "type", null, 0, 1, EAITrainingConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingConfig_Distributed_training(), ecorePackage.getEBoolean(), "distributed_training", null, 0, 1, EAITrainingConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingConfig_Layers(), ecorePackage.getEInt(), "layers", null, 0, 1, EAITrainingConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingConfig_Parameters(), ecorePackage.getEInt(), "parameters", null, 0, 1, EAITrainingConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eaiTrainingDataEClass, EAITrainingData.class, "EAITrainingData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEAITrainingData_Location(), ecorePackage.getEString(), "location", null, 0, 1, EAITrainingData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingData_Basedata(), ecorePackage.getEString(), "basedata", null, 0, 1, EAITrainingData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingData_Size(), ecorePackage.getEInt(), "size", null, 0, 1, EAITrainingData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingData_Count(), ecorePackage.getEInt(), "count", null, 0, 1, EAITrainingData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEAITrainingData_Etl(), this.getEAITrainingETL(), null, "etl", null, 0, 1, EAITrainingData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eaiTrainingETLEClass, EAITrainingETL.class, "EAITrainingETL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEAITrainingETL_Prefetch(), ecorePackage.getEInt(), "prefetch", null, 0, 1, EAITrainingETL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAITrainingETL_Cache(), ecorePackage.getEInt(), "cache", null, 0, 1, EAITrainingETL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eKerasEClass, EKeras.class, "EKeras", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEKeras_Version(), ecorePackage.getEString(), "version", null, 0, 1, EKeras.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEKeras_Backend(), ecorePackage.getEString(), "backend", null, 0, 1, EKeras.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eTensorFlowEClass, ETensorFlow.class, "ETensorFlow", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getETensorFlow_Version(), ecorePackage.getEString(), "version", null, 0, 1, ETensorFlow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getETensorFlow_Xla(), ecorePackage.getEBoolean(), "xla", null, 0, 1, ETensorFlow.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ePyTorchEClass, EPyTorch.class, "EPyTorch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEPyTorch_Version(), ecorePackage.getEString(), "version", null, 0, 1, EPyTorch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEPyTorch_Glow(), ecorePackage.getEBoolean(), "glow", null, 0, 1, EPyTorch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ehpcEClass, org.sodalite.dsl.optimization.optimization.EHPC.class, "EHPC", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEHPC_Config(), this.getEHPCConfig(), null, "config", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEHPC_Data(), this.getEHPCData(), null, "data", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEHPC_Mpi(), this.getEMPICase(), null, "mpi", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEHPC_Openmp(), this.getEOPENMPCase(), null, "openmp", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEHPC_Openacc(), this.getEOPENACCCase(), null, "openacc", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEHPC_Opencl(), this.getEOPENCLCase(), null, "opencl", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eopenclCaseEClass, EOPENCLCase.class, "EOPENCLCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEOPENCLCase_Opencl(), this.getEOPENCL(), null, "opencl", null, 0, 1, EOPENCLCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eopenaccCaseEClass, EOPENACCCase.class, "EOPENACCCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEOPENACCCase_Openacc(), this.getEOPENACC(), null, "openacc", null, 0, 1, EOPENACCCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eopenmpCaseEClass, EOPENMPCase.class, "EOPENMPCase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEOPENMPCase_Openmp(), this.getEOPENMP(), null, "openmp", null, 0, 1, EOPENMPCase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(empiCaseEClass, EMPICase.class, "EMPICase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEMPICase_Mpi(), this.getEMPI(), null, "mpi", null, 0, 1, EMPICase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ehpcConfigEClass, EHPCConfig.class, "EHPCConfig", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEHPCConfig_Parallelisation(), ecorePackage.getEString(), "parallelisation", null, 0, -1, EHPCConfig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ehpcDataEClass, EHPCData.class, "EHPCData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEHPCData_Location(), ecorePackage.getEString(), "location", null, 0, 1, EHPCData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEHPCData_Basedata(), ecorePackage.getEString(), "basedata", null, 0, 1, EHPCData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEHPCData_Size(), ecorePackage.getEInt(), "size", null, 0, 1, EHPCData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEHPCData_Count(), ecorePackage.getEInt(), "count", null, 0, 1, EHPCData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEHPCData_Etl(), this.getEHPCETL(), null, "etl", null, 0, 1, EHPCData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ehpcetlEClass, org.sodalite.dsl.optimization.optimization.EHPCETL.class, "EHPCETL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEHPCETL_Prefetch(), ecorePackage.getEBoolean(), "prefetch", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPCETL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEHPCETL_Cache(), ecorePackage.getEBoolean(), "cache", null, 0, 1, org.sodalite.dsl.optimization.optimization.EHPCETL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(empiEClass, org.sodalite.dsl.optimization.optimization.EMPI.class, "EMPI", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEMPI_Library(), ecorePackage.getEString(), "library", null, 0, 1, org.sodalite.dsl.optimization.optimization.EMPI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEMPI_Version(), ecorePackage.getEString(), "version", null, 0, 1, org.sodalite.dsl.optimization.optimization.EMPI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEMPI_Scaling_efficiency(), ecorePackage.getEDoubleObject(), "scaling_efficiency", null, 0, 1, org.sodalite.dsl.optimization.optimization.EMPI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEMPI_Core_subscription(), ecorePackage.getEInt(), "core_subscription", null, 0, 1, org.sodalite.dsl.optimization.optimization.EMPI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEMPI_Message_size(), ecorePackage.getEString(), "message_size", null, 0, 1, org.sodalite.dsl.optimization.optimization.EMPI.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eopenmpEClass, org.sodalite.dsl.optimization.optimization.EOPENMP.class, "EOPENMP", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEOPENMP_Number_of_threads(), ecorePackage.getEInt(), "number_of_threads", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENMP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOPENMP_Scaling_efficiency(), ecorePackage.getEDoubleObject(), "scaling_efficiency", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENMP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOPENMP_Affinity(), ecorePackage.getEString(), "affinity", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENMP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eopenaccEClass, org.sodalite.dsl.optimization.optimization.EOPENACC.class, "EOPENACC", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEOPENACC_Compiler(), ecorePackage.getEString(), "compiler", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENACC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOPENACC_Version(), ecorePackage.getEString(), "version", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENACC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOPENACC_Number_of_acc(), ecorePackage.getEInt(), "number_of_acc", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENACC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eopenclEClass, org.sodalite.dsl.optimization.optimization.EOPENCL.class, "EOPENCL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEOPENCL_Compiler(), ecorePackage.getEString(), "compiler", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENCL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOPENCL_Version(), ecorePackage.getEString(), "version", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENCL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEOPENCL_Number_of_acc(), ecorePackage.getEInt(), "number_of_acc", null, 0, 1, org.sodalite.dsl.optimization.optimization.EOPENCL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //OptimizationPackageImpl
