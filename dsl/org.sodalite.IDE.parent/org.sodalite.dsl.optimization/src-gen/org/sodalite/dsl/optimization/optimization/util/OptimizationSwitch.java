/**
 * generated by Xtext 2.25.0
 */
package org.sodalite.dsl.optimization.optimization.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.sodalite.dsl.optimization.optimization.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.sodalite.dsl.optimization.optimization.OptimizationPackage
 * @generated
 */
public class OptimizationSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static OptimizationPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OptimizationSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = OptimizationPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case OptimizationPackage.OPTIMIZATION_MODEL:
      {
        Optimization_Model optimization_Model = (Optimization_Model)theEObject;
        T result = caseOptimization_Model(optimization_Model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPTIMIZATION:
      {
        EOptimization eOptimization = (EOptimization)theEObject;
        T result = caseEOptimization(eOptimization);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPTIMIZATION_CASES:
      {
        EOptimizationCases eOptimizationCases = (EOptimizationCases)theEObject;
        T result = caseEOptimizationCases(eOptimizationCases);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EAI_TRAINING_CASE:
      {
        EAITrainingCase eaiTrainingCase = (EAITrainingCase)theEObject;
        T result = caseEAITrainingCase(eaiTrainingCase);
        if (result == null) result = caseEOptimizationCases(eaiTrainingCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EHPC_CASE:
      {
        EHPCCase ehpcCase = (EHPCCase)theEObject;
        T result = caseEHPCCase(ehpcCase);
        if (result == null) result = caseEOptimizationCases(ehpcCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPT_BUILD:
      {
        EOptBuild eOptBuild = (EOptBuild)theEObject;
        T result = caseEOptBuild(eOptBuild);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EAUTOTUNING:
      {
        EAutotuning eAutotuning = (EAutotuning)theEObject;
        T result = caseEAutotuning(eAutotuning);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EAI_TRAINING:
      {
        EAITraining eaiTraining = (EAITraining)theEObject;
        T result = caseEAITraining(eaiTraining);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EAI_TRAINING_CASES:
      {
        EAITrainingCases eaiTrainingCases = (EAITrainingCases)theEObject;
        T result = caseEAITrainingCases(eaiTrainingCases);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EPY_TORCH_CASE:
      {
        EPyTorchCase ePyTorchCase = (EPyTorchCase)theEObject;
        T result = caseEPyTorchCase(ePyTorchCase);
        if (result == null) result = caseEAITrainingCases(ePyTorchCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.ETENSOR_FLOW_CASE:
      {
        ETensorFlowCase eTensorFlowCase = (ETensorFlowCase)theEObject;
        T result = caseETensorFlowCase(eTensorFlowCase);
        if (result == null) result = caseEAITrainingCases(eTensorFlowCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EKERAS_CASE:
      {
        EKerasCase eKerasCase = (EKerasCase)theEObject;
        T result = caseEKerasCase(eKerasCase);
        if (result == null) result = caseEAITrainingCases(eKerasCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EAI_TRAINING_CONFIG:
      {
        EAITrainingConfig eaiTrainingConfig = (EAITrainingConfig)theEObject;
        T result = caseEAITrainingConfig(eaiTrainingConfig);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EAI_TRAINING_DATA:
      {
        EAITrainingData eaiTrainingData = (EAITrainingData)theEObject;
        T result = caseEAITrainingData(eaiTrainingData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EAI_TRAINING_ETL:
      {
        EAITrainingETL eaiTrainingETL = (EAITrainingETL)theEObject;
        T result = caseEAITrainingETL(eaiTrainingETL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EKERAS:
      {
        EKeras eKeras = (EKeras)theEObject;
        T result = caseEKeras(eKeras);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.ETENSOR_FLOW:
      {
        ETensorFlow eTensorFlow = (ETensorFlow)theEObject;
        T result = caseETensorFlow(eTensorFlow);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EPY_TORCH:
      {
        EPyTorch ePyTorch = (EPyTorch)theEObject;
        T result = caseEPyTorch(ePyTorch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EHPC:
      {
        EHPC ehpc = (EHPC)theEObject;
        T result = caseEHPC(ehpc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPENCL_CASE:
      {
        EOPENCLCase eopenclCase = (EOPENCLCase)theEObject;
        T result = caseEOPENCLCase(eopenclCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPENACC_CASE:
      {
        EOPENACCCase eopenaccCase = (EOPENACCCase)theEObject;
        T result = caseEOPENACCCase(eopenaccCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPENMP_CASE:
      {
        EOPENMPCase eopenmpCase = (EOPENMPCase)theEObject;
        T result = caseEOPENMPCase(eopenmpCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EMPI_CASE:
      {
        EMPICase empiCase = (EMPICase)theEObject;
        T result = caseEMPICase(empiCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EHPC_CONFIG:
      {
        EHPCConfig ehpcConfig = (EHPCConfig)theEObject;
        T result = caseEHPCConfig(ehpcConfig);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EHPC_DATA:
      {
        EHPCData ehpcData = (EHPCData)theEObject;
        T result = caseEHPCData(ehpcData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EHPCETL:
      {
        EHPCETL ehpcetl = (EHPCETL)theEObject;
        T result = caseEHPCETL(ehpcetl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EMPI:
      {
        EMPI empi = (EMPI)theEObject;
        T result = caseEMPI(empi);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPENMP:
      {
        EOPENMP eopenmp = (EOPENMP)theEObject;
        T result = caseEOPENMP(eopenmp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPENACC:
      {
        EOPENACC eopenacc = (EOPENACC)theEObject;
        T result = caseEOPENACC(eopenacc);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OptimizationPackage.EOPENCL:
      {
        EOPENCL eopencl = (EOPENCL)theEObject;
        T result = caseEOPENCL(eopencl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Optimization Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Optimization Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOptimization_Model(Optimization_Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOptimization</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOptimization</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOptimization(EOptimization object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOptimization Cases</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOptimization Cases</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOptimizationCases(EOptimizationCases object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAI Training Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAI Training Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAITrainingCase(EAITrainingCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EHPC Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EHPC Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEHPCCase(EHPCCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOpt Build</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOpt Build</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOptBuild(EOptBuild object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAutotuning</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAutotuning</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAutotuning(EAutotuning object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAI Training</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAI Training</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAITraining(EAITraining object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAI Training Cases</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAI Training Cases</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAITrainingCases(EAITrainingCases object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPy Torch Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPy Torch Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPyTorchCase(EPyTorchCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETensor Flow Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETensor Flow Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETensorFlowCase(ETensorFlowCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EKeras Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EKeras Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEKerasCase(EKerasCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAI Training Config</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAI Training Config</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAITrainingConfig(EAITrainingConfig object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAI Training Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAI Training Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAITrainingData(EAITrainingData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAI Training ETL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAI Training ETL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAITrainingETL(EAITrainingETL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EKeras</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EKeras</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEKeras(EKeras object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETensor Flow</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETensor Flow</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETensorFlow(ETensorFlow object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPy Torch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPy Torch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPyTorch(EPyTorch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EHPC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EHPC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEHPC(EHPC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOPENCL Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOPENCL Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOPENCLCase(EOPENCLCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOPENACC Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOPENACC Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOPENACCCase(EOPENACCCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOPENMP Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOPENMP Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOPENMPCase(EOPENMPCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMPI Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMPI Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMPICase(EMPICase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EHPC Config</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EHPC Config</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEHPCConfig(EHPCConfig object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EHPC Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EHPC Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEHPCData(EHPCData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EHPCETL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EHPCETL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEHPCETL(EHPCETL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMPI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMPI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMPI(EMPI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOPENMP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOPENMP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOPENMP(EOPENMP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOPENACC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOPENACC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOPENACC(EOPENACC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOPENCL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOPENCL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOPENCL(EOPENCL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //OptimizationSwitch
