/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.optimization.optimization.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.sodalite.dsl.optimization.optimization.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class OptimizationFactoryImpl extends EFactoryImpl implements OptimizationFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static OptimizationFactory init()
  {
    try
    {
      OptimizationFactory theOptimizationFactory = (OptimizationFactory)EPackage.Registry.INSTANCE.getEFactory(OptimizationPackage.eNS_URI);
      if (theOptimizationFactory != null)
      {
        return theOptimizationFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new OptimizationFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OptimizationFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case OptimizationPackage.OPTIMIZATION_MODEL: return createOptimization_Model();
      case OptimizationPackage.EOPTIMIZATION: return createEOptimization();
      case OptimizationPackage.EOPTIMIZATION_CASES: return createEOptimizationCases();
      case OptimizationPackage.EAI_TRAINING_CASE: return createEAITrainingCase();
      case OptimizationPackage.EHPC_CASE: return createEHPCCase();
      case OptimizationPackage.EOPT_BUILD: return createEOptBuild();
      case OptimizationPackage.EAUTOTUNING: return createEAutotuning();
      case OptimizationPackage.EAI_TRAINING: return createEAITraining();
      case OptimizationPackage.EAI_TRAINING_CASES: return createEAITrainingCases();
      case OptimizationPackage.EPY_TORCH_CASE: return createEPyTorchCase();
      case OptimizationPackage.ETENSOR_FLOW_CASE: return createETensorFlowCase();
      case OptimizationPackage.EKERAS_CASE: return createEKerasCase();
      case OptimizationPackage.EAI_TRAINING_CONFIG: return createEAITrainingConfig();
      case OptimizationPackage.EAI_TRAINING_DATA: return createEAITrainingData();
      case OptimizationPackage.EAI_TRAINING_ETL: return createEAITrainingETL();
      case OptimizationPackage.EKERAS: return createEKeras();
      case OptimizationPackage.ETENSOR_FLOW: return createETensorFlow();
      case OptimizationPackage.EPY_TORCH: return createEPyTorch();
      case OptimizationPackage.EHPC: return createEHPC();
      case OptimizationPackage.EOPENCL_CASE: return createEOPENCLCase();
      case OptimizationPackage.EOPENACC_CASE: return createEOPENACCCase();
      case OptimizationPackage.EOPENMP_CASE: return createEOPENMPCase();
      case OptimizationPackage.EMPI_CASE: return createEMPICase();
      case OptimizationPackage.EHPC_CONFIG: return createEHPCConfig();
      case OptimizationPackage.EHPC_DATA: return createEHPCData();
      case OptimizationPackage.EHPCETL: return createEHPCETL();
      case OptimizationPackage.EMPI: return createEMPI();
      case OptimizationPackage.EOPENMP: return createEOPENMP();
      case OptimizationPackage.EOPENACC: return createEOPENACC();
      case OptimizationPackage.EOPENCL: return createEOPENCL();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Optimization_Model createOptimization_Model()
  {
    Optimization_ModelImpl optimization_Model = new Optimization_ModelImpl();
    return optimization_Model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOptimization createEOptimization()
  {
    EOptimizationImpl eOptimization = new EOptimizationImpl();
    return eOptimization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOptimizationCases createEOptimizationCases()
  {
    EOptimizationCasesImpl eOptimizationCases = new EOptimizationCasesImpl();
    return eOptimizationCases;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAITrainingCase createEAITrainingCase()
  {
    EAITrainingCaseImpl eaiTrainingCase = new EAITrainingCaseImpl();
    return eaiTrainingCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EHPCCase createEHPCCase()
  {
    EHPCCaseImpl ehpcCase = new EHPCCaseImpl();
    return ehpcCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOptBuild createEOptBuild()
  {
    EOptBuildImpl eOptBuild = new EOptBuildImpl();
    return eOptBuild;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAutotuning createEAutotuning()
  {
    EAutotuningImpl eAutotuning = new EAutotuningImpl();
    return eAutotuning;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAITraining createEAITraining()
  {
    EAITrainingImpl eaiTraining = new EAITrainingImpl();
    return eaiTraining;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAITrainingCases createEAITrainingCases()
  {
    EAITrainingCasesImpl eaiTrainingCases = new EAITrainingCasesImpl();
    return eaiTrainingCases;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EPyTorchCase createEPyTorchCase()
  {
    EPyTorchCaseImpl ePyTorchCase = new EPyTorchCaseImpl();
    return ePyTorchCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ETensorFlowCase createETensorFlowCase()
  {
    ETensorFlowCaseImpl eTensorFlowCase = new ETensorFlowCaseImpl();
    return eTensorFlowCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EKerasCase createEKerasCase()
  {
    EKerasCaseImpl eKerasCase = new EKerasCaseImpl();
    return eKerasCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAITrainingConfig createEAITrainingConfig()
  {
    EAITrainingConfigImpl eaiTrainingConfig = new EAITrainingConfigImpl();
    return eaiTrainingConfig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAITrainingData createEAITrainingData()
  {
    EAITrainingDataImpl eaiTrainingData = new EAITrainingDataImpl();
    return eaiTrainingData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAITrainingETL createEAITrainingETL()
  {
    EAITrainingETLImpl eaiTrainingETL = new EAITrainingETLImpl();
    return eaiTrainingETL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EKeras createEKeras()
  {
    EKerasImpl eKeras = new EKerasImpl();
    return eKeras;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ETensorFlow createETensorFlow()
  {
    ETensorFlowImpl eTensorFlow = new ETensorFlowImpl();
    return eTensorFlow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EPyTorch createEPyTorch()
  {
    EPyTorchImpl ePyTorch = new EPyTorchImpl();
    return ePyTorch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EHPC createEHPC()
  {
    EHPCImpl ehpc = new EHPCImpl();
    return ehpc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOPENCLCase createEOPENCLCase()
  {
    EOPENCLCaseImpl eopenclCase = new EOPENCLCaseImpl();
    return eopenclCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOPENACCCase createEOPENACCCase()
  {
    EOPENACCCaseImpl eopenaccCase = new EOPENACCCaseImpl();
    return eopenaccCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOPENMPCase createEOPENMPCase()
  {
    EOPENMPCaseImpl eopenmpCase = new EOPENMPCaseImpl();
    return eopenmpCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EMPICase createEMPICase()
  {
    EMPICaseImpl empiCase = new EMPICaseImpl();
    return empiCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EHPCConfig createEHPCConfig()
  {
    EHPCConfigImpl ehpcConfig = new EHPCConfigImpl();
    return ehpcConfig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EHPCData createEHPCData()
  {
    EHPCDataImpl ehpcData = new EHPCDataImpl();
    return ehpcData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EHPCETL createEHPCETL()
  {
    EHPCETLImpl ehpcetl = new EHPCETLImpl();
    return ehpcetl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EMPI createEMPI()
  {
    EMPIImpl empi = new EMPIImpl();
    return empi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOPENMP createEOPENMP()
  {
    EOPENMPImpl eopenmp = new EOPENMPImpl();
    return eopenmp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOPENACC createEOPENACC()
  {
    EOPENACCImpl eopenacc = new EOPENACCImpl();
    return eopenacc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOPENCL createEOPENCL()
  {
    EOPENCLImpl eopencl = new EOPENCLImpl();
    return eopencl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OptimizationPackage getOptimizationPackage()
  {
    return (OptimizationPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static OptimizationPackage getPackage()
  {
    return OptimizationPackage.eINSTANCE;
  }

} //OptimizationFactoryImpl
