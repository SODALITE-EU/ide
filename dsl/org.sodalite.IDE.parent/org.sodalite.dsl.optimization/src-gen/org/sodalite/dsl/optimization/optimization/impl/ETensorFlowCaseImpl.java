/**
 * generated by Xtext 2.25.0
 */
package org.sodalite.dsl.optimization.optimization.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sodalite.dsl.optimization.optimization.ETensorFlow;
import org.sodalite.dsl.optimization.optimization.ETensorFlowCase;
import org.sodalite.dsl.optimization.optimization.OptimizationPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ETensor Flow Case</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.dsl.optimization.optimization.impl.ETensorFlowCaseImpl#getTensorflow <em>Tensorflow</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ETensorFlowCaseImpl extends EAITrainingCasesImpl implements ETensorFlowCase
{
  /**
   * The cached value of the '{@link #getTensorflow() <em>Tensorflow</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTensorflow()
   * @generated
   * @ordered
   */
  protected ETensorFlow tensorflow;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ETensorFlowCaseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OptimizationPackage.Literals.ETENSOR_FLOW_CASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ETensorFlow getTensorflow()
  {
    return tensorflow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTensorflow(ETensorFlow newTensorflow, NotificationChain msgs)
  {
    ETensorFlow oldTensorflow = tensorflow;
    tensorflow = newTensorflow;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW, oldTensorflow, newTensorflow);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTensorflow(ETensorFlow newTensorflow)
  {
    if (newTensorflow != tensorflow)
    {
      NotificationChain msgs = null;
      if (tensorflow != null)
        msgs = ((InternalEObject)tensorflow).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW, null, msgs);
      if (newTensorflow != null)
        msgs = ((InternalEObject)newTensorflow).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW, null, msgs);
      msgs = basicSetTensorflow(newTensorflow, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW, newTensorflow, newTensorflow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW:
        return basicSetTensorflow(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW:
        return getTensorflow();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW:
        setTensorflow((ETensorFlow)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW:
        setTensorflow((ETensorFlow)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OptimizationPackage.ETENSOR_FLOW_CASE__TENSORFLOW:
        return tensorflow != null;
    }
    return super.eIsSet(featureID);
  }

} //ETensorFlowCaseImpl
