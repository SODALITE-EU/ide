/**
 * generated by Xtext 2.25.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage;
import org.sodalite.sdl.ansible.ansibleDsl.ELoopControl;
import org.sodalite.sdl.ansible.ansibleDsl.ELoopOverList;
import org.sodalite.sdl.ansible.ansibleDsl.EValuePassed;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ELoop Over List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ELoopOverListImpl#getLoop_list <em>Loop list</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ELoopOverListImpl#getLoop_control <em>Loop control</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ELoopOverListImpl extends ELoopImpl implements ELoopOverList
{
  /**
   * The cached value of the '{@link #getLoop_list() <em>Loop list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLoop_list()
   * @generated
   * @ordered
   */
  protected EValuePassed loop_list;

  /**
   * The cached value of the '{@link #getLoop_control() <em>Loop control</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLoop_control()
   * @generated
   * @ordered
   */
  protected ELoopControl loop_control;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ELoopOverListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsibleDslPackage.Literals.ELOOP_OVER_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EValuePassed getLoop_list()
  {
    return loop_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLoop_list(EValuePassed newLoop_list, NotificationChain msgs)
  {
    EValuePassed oldLoop_list = loop_list;
    loop_list = newLoop_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST, oldLoop_list, newLoop_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLoop_list(EValuePassed newLoop_list)
  {
    if (newLoop_list != loop_list)
    {
      NotificationChain msgs = null;
      if (loop_list != null)
        msgs = ((InternalEObject)loop_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST, null, msgs);
      if (newLoop_list != null)
        msgs = ((InternalEObject)newLoop_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST, null, msgs);
      msgs = basicSetLoop_list(newLoop_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST, newLoop_list, newLoop_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ELoopControl getLoop_control()
  {
    return loop_control;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLoop_control(ELoopControl newLoop_control, NotificationChain msgs)
  {
    ELoopControl oldLoop_control = loop_control;
    loop_control = newLoop_control;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL, oldLoop_control, newLoop_control);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLoop_control(ELoopControl newLoop_control)
  {
    if (newLoop_control != loop_control)
    {
      NotificationChain msgs = null;
      if (loop_control != null)
        msgs = ((InternalEObject)loop_control).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL, null, msgs);
      if (newLoop_control != null)
        msgs = ((InternalEObject)newLoop_control).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL, null, msgs);
      msgs = basicSetLoop_control(newLoop_control, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL, newLoop_control, newLoop_control));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST:
        return basicSetLoop_list(null, msgs);
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL:
        return basicSetLoop_control(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST:
        return getLoop_list();
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL:
        return getLoop_control();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST:
        setLoop_list((EValuePassed)newValue);
        return;
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL:
        setLoop_control((ELoopControl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST:
        setLoop_list((EValuePassed)null);
        return;
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL:
        setLoop_control((ELoopControl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_LIST:
        return loop_list != null;
      case AnsibleDslPackage.ELOOP_OVER_LIST__LOOP_CONTROL:
        return loop_control != null;
    }
    return super.eIsSet(featureID);
  }

} //ELoopOverListImpl
