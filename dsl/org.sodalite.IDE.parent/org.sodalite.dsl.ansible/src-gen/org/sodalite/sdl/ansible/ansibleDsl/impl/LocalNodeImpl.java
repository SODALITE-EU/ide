/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sodalite.dsl.rM.EInterfaceDefinition;
import org.sodalite.dsl.rM.ENodeType;
import org.sodalite.dsl.rM.EOperationDefinition;

import org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage;
import org.sodalite.sdl.ansible.ansibleDsl.LocalNode;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Local Node</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.LocalNodeImpl#getNode_type <em>Node type</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.LocalNodeImpl#getInterface <em>Interface</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.LocalNodeImpl#getOperation <em>Operation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LocalNodeImpl extends NodeImpl implements LocalNode
{
  /**
   * The cached value of the '{@link #getNode_type() <em>Node type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNode_type()
   * @generated
   * @ordered
   */
  protected ENodeType node_type;

  /**
   * The cached value of the '{@link #getInterface() <em>Interface</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterface()
   * @generated
   * @ordered
   */
  protected EInterfaceDefinition interface_;

  /**
   * The cached value of the '{@link #getOperation() <em>Operation</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperation()
   * @generated
   * @ordered
   */
  protected EOperationDefinition operation;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LocalNodeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsibleDslPackage.Literals.LOCAL_NODE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ENodeType getNode_type()
  {
    if (node_type != null && node_type.eIsProxy())
    {
      InternalEObject oldNode_type = (InternalEObject)node_type;
      node_type = (ENodeType)eResolveProxy(oldNode_type);
      if (node_type != oldNode_type)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AnsibleDslPackage.LOCAL_NODE__NODE_TYPE, oldNode_type, node_type));
      }
    }
    return node_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ENodeType basicGetNode_type()
  {
    return node_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNode_type(ENodeType newNode_type)
  {
    ENodeType oldNode_type = node_type;
    node_type = newNode_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.LOCAL_NODE__NODE_TYPE, oldNode_type, node_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EInterfaceDefinition getInterface()
  {
    if (interface_ != null && interface_.eIsProxy())
    {
      InternalEObject oldInterface = (InternalEObject)interface_;
      interface_ = (EInterfaceDefinition)eResolveProxy(oldInterface);
      if (interface_ != oldInterface)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AnsibleDslPackage.LOCAL_NODE__INTERFACE, oldInterface, interface_));
      }
    }
    return interface_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EInterfaceDefinition basicGetInterface()
  {
    return interface_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInterface(EInterfaceDefinition newInterface)
  {
    EInterfaceDefinition oldInterface = interface_;
    interface_ = newInterface;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.LOCAL_NODE__INTERFACE, oldInterface, interface_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOperationDefinition getOperation()
  {
    if (operation != null && operation.eIsProxy())
    {
      InternalEObject oldOperation = (InternalEObject)operation;
      operation = (EOperationDefinition)eResolveProxy(oldOperation);
      if (operation != oldOperation)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AnsibleDslPackage.LOCAL_NODE__OPERATION, oldOperation, operation));
      }
    }
    return operation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EOperationDefinition basicGetOperation()
  {
    return operation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOperation(EOperationDefinition newOperation)
  {
    EOperationDefinition oldOperation = operation;
    operation = newOperation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.LOCAL_NODE__OPERATION, oldOperation, operation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.LOCAL_NODE__NODE_TYPE:
        if (resolve) return getNode_type();
        return basicGetNode_type();
      case AnsibleDslPackage.LOCAL_NODE__INTERFACE:
        if (resolve) return getInterface();
        return basicGetInterface();
      case AnsibleDslPackage.LOCAL_NODE__OPERATION:
        if (resolve) return getOperation();
        return basicGetOperation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.LOCAL_NODE__NODE_TYPE:
        setNode_type((ENodeType)newValue);
        return;
      case AnsibleDslPackage.LOCAL_NODE__INTERFACE:
        setInterface((EInterfaceDefinition)newValue);
        return;
      case AnsibleDslPackage.LOCAL_NODE__OPERATION:
        setOperation((EOperationDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.LOCAL_NODE__NODE_TYPE:
        setNode_type((ENodeType)null);
        return;
      case AnsibleDslPackage.LOCAL_NODE__INTERFACE:
        setInterface((EInterfaceDefinition)null);
        return;
      case AnsibleDslPackage.LOCAL_NODE__OPERATION:
        setOperation((EOperationDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.LOCAL_NODE__NODE_TYPE:
        return node_type != null;
      case AnsibleDslPackage.LOCAL_NODE__INTERFACE:
        return interface_ != null;
      case AnsibleDslPackage.LOCAL_NODE__OPERATION:
        return operation != null;
    }
    return super.eIsSet(featureID);
  }

} //LocalNodeImpl
