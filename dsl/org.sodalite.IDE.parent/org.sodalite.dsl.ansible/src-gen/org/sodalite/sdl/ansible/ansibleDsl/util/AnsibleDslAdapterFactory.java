/**
 * generated by Xtext 2.25.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.sodalite.sdl.ansible.ansibleDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage
 * @generated
 */
public class AnsibleDslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static AnsibleDslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnsibleDslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = AnsibleDslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AnsibleDslSwitch<Adapter> modelSwitch =
    new AnsibleDslSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseEPlaybook(EPlaybook object)
      {
        return createEPlaybookAdapter();
      }
      @Override
      public Adapter caseEUsedByBody(EUsedByBody object)
      {
        return createEUsedByBodyAdapter();
      }
      @Override
      public Adapter caseEBase(EBase object)
      {
        return createEBaseAdapter();
      }
      @Override
      public Adapter caseEExecution(EExecution object)
      {
        return createEExecutionAdapter();
      }
      @Override
      public Adapter caseEBlockTask(EBlockTask object)
      {
        return createEBlockTaskAdapter();
      }
      @Override
      public Adapter caseETaskHandler(ETaskHandler object)
      {
        return createETaskHandlerAdapter();
      }
      @Override
      public Adapter caseEPlay(EPlay object)
      {
        return createEPlayAdapter();
      }
      @Override
      public Adapter caseEBlock(EBlock object)
      {
        return createEBlockAdapter();
      }
      @Override
      public Adapter caseETask(ETask object)
      {
        return createETaskAdapter();
      }
      @Override
      public Adapter caseEHandler(EHandler object)
      {
        return createEHandlerAdapter();
      }
      @Override
      public Adapter caseEModuleCall(EModuleCall object)
      {
        return createEModuleCallAdapter();
      }
      @Override
      public Adapter caseEParameter(EParameter object)
      {
        return createEParameterAdapter();
      }
      @Override
      public Adapter caseERoleInclusion(ERoleInclusion object)
      {
        return createERoleInclusionAdapter();
      }
      @Override
      public Adapter caseERoleInclusions(ERoleInclusions object)
      {
        return createERoleInclusionsAdapter();
      }
      @Override
      public Adapter caseEExternalFileInclusion(EExternalFileInclusion object)
      {
        return createEExternalFileInclusionAdapter();
      }
      @Override
      public Adapter caseELoop(ELoop object)
      {
        return createELoopAdapter();
      }
      @Override
      public Adapter caseELoopOverList(ELoopOverList object)
      {
        return createELoopOverListAdapter();
      }
      @Override
      public Adapter caseELoopControl(ELoopControl object)
      {
        return createELoopControlAdapter();
      }
      @Override
      public Adapter caseEWithLookup(EWithLookup object)
      {
        return createEWithLookupAdapter();
      }
      @Override
      public Adapter caseEUntil(EUntil object)
      {
        return createEUntilAdapter();
      }
      @Override
      public Adapter caseEPrivilegeEscalation(EPrivilegeEscalation object)
      {
        return createEPrivilegeEscalationAdapter();
      }
      @Override
      public Adapter caseEValidationMode(EValidationMode object)
      {
        return createEValidationModeAdapter();
      }
      @Override
      public Adapter caseEConnection(EConnection object)
      {
        return createEConnectionAdapter();
      }
      @Override
      public Adapter caseEExeSettings(EExeSettings object)
      {
        return createEExeSettingsAdapter();
      }
      @Override
      public Adapter caseEPlayExeSettings(EPlayExeSettings object)
      {
        return createEPlayExeSettingsAdapter();
      }
      @Override
      public Adapter caseEExecutionExeSettings(EExecutionExeSettings object)
      {
        return createEExecutionExeSettingsAdapter();
      }
      @Override
      public Adapter caseEErrorHandling(EErrorHandling object)
      {
        return createEErrorHandlingAdapter();
      }
      @Override
      public Adapter caseEBlockAndRoleErrorHandling(EBlockAndRoleErrorHandling object)
      {
        return createEBlockAndRoleErrorHandlingAdapter();
      }
      @Override
      public Adapter caseEPlayErrorHandling(EPlayErrorHandling object)
      {
        return createEPlayErrorHandlingAdapter();
      }
      @Override
      public Adapter caseETaskHandlerErrorHandling(ETaskHandlerErrorHandling object)
      {
        return createETaskHandlerErrorHandlingAdapter();
      }
      @Override
      public Adapter caseEFactsSettings(EFactsSettings object)
      {
        return createEFactsSettingsAdapter();
      }
      @Override
      public Adapter caseEDelegation(EDelegation object)
      {
        return createEDelegationAdapter();
      }
      @Override
      public Adapter caseEAsynchronousSettings(EAsynchronousSettings object)
      {
        return createEAsynchronousSettingsAdapter();
      }
      @Override
      public Adapter caseENotifiable(ENotifiable object)
      {
        return createENotifiableAdapter();
      }
      @Override
      public Adapter caseENotifiedHandler(ENotifiedHandler object)
      {
        return createENotifiedHandlerAdapter();
      }
      @Override
      public Adapter caseENotifiedTopic(ENotifiedTopic object)
      {
        return createENotifiedTopicAdapter();
      }
      @Override
      public Adapter caseEJinjaOrString(EJinjaOrString object)
      {
        return createEJinjaOrStringAdapter();
      }
      @Override
      public Adapter caseEJinjaAndString(EJinjaAndString object)
      {
        return createEJinjaAndStringAdapter();
      }
      @Override
      public Adapter caseEMultiLineExpression(EMultiLineExpression object)
      {
        return createEMultiLineExpressionAdapter();
      }
      @Override
      public Adapter caseEStringPassed(EStringPassed object)
      {
        return createEStringPassedAdapter();
      }
      @Override
      public Adapter caseEValuePassed(EValuePassed object)
      {
        return createEValuePassedAdapter();
      }
      @Override
      public Adapter caseEValuePassedToJinjaExpression(EValuePassedToJinjaExpression object)
      {
        return createEValuePassedToJinjaExpressionAdapter();
      }
      @Override
      public Adapter caseEComposedValue(EComposedValue object)
      {
        return createEComposedValueAdapter();
      }
      @Override
      public Adapter caseEComposedValueJinja(EComposedValueJinja object)
      {
        return createEComposedValueJinjaAdapter();
      }
      @Override
      public Adapter caseEValueJinja(EValueJinja object)
      {
        return createEValueJinjaAdapter();
      }
      @Override
      public Adapter caseEValueWithoutString(EValueWithoutString object)
      {
        return createEValueWithoutStringAdapter();
      }
      @Override
      public Adapter caseESimpleValueWithoutString(ESimpleValueWithoutString object)
      {
        return createESimpleValueWithoutStringAdapter();
      }
      @Override
      public Adapter caseESimpleValueJinja(ESimpleValueJinja object)
      {
        return createESimpleValueJinjaAdapter();
      }
      @Override
      public Adapter caseEJinjaExpressionEvaluation(EJinjaExpressionEvaluation object)
      {
        return createEJinjaExpressionEvaluationAdapter();
      }
      @Override
      public Adapter caseEJinjaExpressionEvaluationWithoutBrackets(EJinjaExpressionEvaluationWithoutBrackets object)
      {
        return createEJinjaExpressionEvaluationWithoutBracketsAdapter();
      }
      @Override
      public Adapter caseEFunctionCallOrVariable(EFunctionCallOrVariable object)
      {
        return createEFunctionCallOrVariableAdapter();
      }
      @Override
      public Adapter caseEFunctionInput(EFunctionInput object)
      {
        return createEFunctionInputAdapter();
      }
      @Override
      public Adapter caseEIfBlock(EIfBlock object)
      {
        return createEIfBlockAdapter();
      }
      @Override
      public Adapter caseEFilteredExpression(EFilteredExpression object)
      {
        return createEFilteredExpressionAdapter();
      }
      @Override
      public Adapter caseEOrExpression(EOrExpression object)
      {
        return createEOrExpressionAdapter();
      }
      @Override
      public Adapter caseEAndExpression(EAndExpression object)
      {
        return createEAndExpressionAdapter();
      }
      @Override
      public Adapter caseETruthExpression(ETruthExpression object)
      {
        return createETruthExpressionAdapter();
      }
      @Override
      public Adapter caseEOperation(EOperation object)
      {
        return createEOperationAdapter();
      }
      @Override
      public Adapter caseEIsExpression(EIsExpression object)
      {
        return createEIsExpressionAdapter();
      }
      @Override
      public Adapter caseEParenthesisedExpression(EParenthesisedExpression object)
      {
        return createEParenthesisedExpressionAdapter();
      }
      @Override
      public Adapter caseEJinjaStatement(EJinjaStatement object)
      {
        return createEJinjaStatementAdapter();
      }
      @Override
      public Adapter caseEIfStatement(EIfStatement object)
      {
        return createEIfStatementAdapter();
      }
      @Override
      public Adapter caseEElifBlock(EElifBlock object)
      {
        return createEElifBlockAdapter();
      }
      @Override
      public Adapter caseEForStatement(EForStatement object)
      {
        return createEForStatementAdapter();
      }
      @Override
      public Adapter caseEVariableDeclarationVariableReference(EVariableDeclarationVariableReference object)
      {
        return createEVariableDeclarationVariableReferenceAdapter();
      }
      @Override
      public Adapter caseERegisterVariableReference(ERegisterVariableReference object)
      {
        return createERegisterVariableReferenceAdapter();
      }
      @Override
      public Adapter caseEVariableDeclaration(EVariableDeclaration object)
      {
        return createEVariableDeclarationAdapter();
      }
      @Override
      public Adapter caseEIndexOrLoopVariable(EIndexOrLoopVariable object)
      {
        return createEIndexOrLoopVariableAdapter();
      }
      @Override
      public Adapter caseEIndexOrLoopVariableReference(EIndexOrLoopVariableReference object)
      {
        return createEIndexOrLoopVariableReferenceAdapter();
      }
      @Override
      public Adapter caseERegisterVariable(ERegisterVariable object)
      {
        return createERegisterVariableAdapter();
      }
      @Override
      public Adapter caseEInputOperationVariableReference(EInputOperationVariableReference object)
      {
        return createEInputOperationVariableReferenceAdapter();
      }
      @Override
      public Adapter caseEInputInterfaceVariableReference(EInputInterfaceVariableReference object)
      {
        return createEInputInterfaceVariableReferenceAdapter();
      }
      @Override
      public Adapter caseESetFactVariableReference(ESetFactVariableReference object)
      {
        return createESetFactVariableReferenceAdapter();
      }
      @Override
      public Adapter caseEVariableReference(EVariableReference object)
      {
        return createEVariableReferenceAdapter();
      }
      @Override
      public Adapter caseESpecialVariable(ESpecialVariable object)
      {
        return createESpecialVariableAdapter();
      }
      @Override
      public Adapter caseETailElement(ETailElement object)
      {
        return createETailElementAdapter();
      }
      @Override
      public Adapter caseESquareBracketElement(ESquareBracketElement object)
      {
        return createESquareBracketElementAdapter();
      }
      @Override
      public Adapter caseESliceNotation(ESliceNotation object)
      {
        return createESliceNotationAdapter();
      }
      @Override
      public Adapter caseEDictionary(EDictionary object)
      {
        return createEDictionaryAdapter();
      }
      @Override
      public Adapter caseEDictionaryInLine(EDictionaryInLine object)
      {
        return createEDictionaryInLineAdapter();
      }
      @Override
      public Adapter caseEDictionaryIndented(EDictionaryIndented object)
      {
        return createEDictionaryIndentedAdapter();
      }
      @Override
      public Adapter caseEDictionaryPair(EDictionaryPair object)
      {
        return createEDictionaryPairAdapter();
      }
      @Override
      public Adapter caseEDictionaryJinja(EDictionaryJinja object)
      {
        return createEDictionaryJinjaAdapter();
      }
      @Override
      public Adapter caseEDictionaryPairJinja(EDictionaryPairJinja object)
      {
        return createEDictionaryPairJinjaAdapter();
      }
      @Override
      public Adapter caseEList(EList object)
      {
        return createEListAdapter();
      }
      @Override
      public Adapter caseEListInLine(EListInLine object)
      {
        return createEListInLineAdapter();
      }
      @Override
      public Adapter caseEListIndented(EListIndented object)
      {
        return createEListIndentedAdapter();
      }
      @Override
      public Adapter caseEDictionaryOfListIndented(EDictionaryOfListIndented object)
      {
        return createEDictionaryOfListIndentedAdapter();
      }
      @Override
      public Adapter caseEElementOfListIndented(EElementOfListIndented object)
      {
        return createEElementOfListIndentedAdapter();
      }
      @Override
      public Adapter caseEListJinja(EListJinja object)
      {
        return createEListJinjaAdapter();
      }
      @Override
      public Adapter caseECondition(ECondition object)
      {
        return createEConditionAdapter();
      }
      @Override
      public Adapter caseEListOfConditions(EListOfConditions object)
      {
        return createEListOfConditionsAdapter();
      }
      @Override
      public Adapter caseEDictionaryPassed(EDictionaryPassed object)
      {
        return createEDictionaryPassedAdapter();
      }
      @Override
      public Adapter caseEListPassed(EListPassed object)
      {
        return createEListPassedAdapter();
      }
      @Override
      public Adapter caseENumberPassed(ENumberPassed object)
      {
        return createENumberPassedAdapter();
      }
      @Override
      public Adapter caseEBooleanPassed(EBooleanPassed object)
      {
        return createEBooleanPassedAdapter();
      }
      @Override
      public Adapter caseEBooleanAnsible(EBooleanAnsible object)
      {
        return createEBooleanAnsibleAdapter();
      }
      @Override
      public Adapter caseENumber(ENumber object)
      {
        return createENumberAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EPlaybook <em>EPlaybook</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EPlaybook
   * @generated
   */
  public Adapter createEPlaybookAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EUsedByBody <em>EUsed By Body</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EUsedByBody
   * @generated
   */
  public Adapter createEUsedByBodyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EBase <em>EBase</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EBase
   * @generated
   */
  public Adapter createEBaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EExecution <em>EExecution</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EExecution
   * @generated
   */
  public Adapter createEExecutionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EBlockTask <em>EBlock Task</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EBlockTask
   * @generated
   */
  public Adapter createEBlockTaskAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ETaskHandler <em>ETask Handler</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ETaskHandler
   * @generated
   */
  public Adapter createETaskHandlerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EPlay <em>EPlay</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EPlay
   * @generated
   */
  public Adapter createEPlayAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EBlock <em>EBlock</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EBlock
   * @generated
   */
  public Adapter createEBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ETask <em>ETask</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ETask
   * @generated
   */
  public Adapter createETaskAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EHandler <em>EHandler</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EHandler
   * @generated
   */
  public Adapter createEHandlerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EModuleCall <em>EModule Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EModuleCall
   * @generated
   */
  public Adapter createEModuleCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EParameter <em>EParameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EParameter
   * @generated
   */
  public Adapter createEParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ERoleInclusion <em>ERole Inclusion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ERoleInclusion
   * @generated
   */
  public Adapter createERoleInclusionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ERoleInclusions <em>ERole Inclusions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ERoleInclusions
   * @generated
   */
  public Adapter createERoleInclusionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EExternalFileInclusion <em>EExternal File Inclusion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EExternalFileInclusion
   * @generated
   */
  public Adapter createEExternalFileInclusionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ELoop <em>ELoop</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ELoop
   * @generated
   */
  public Adapter createELoopAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ELoopOverList <em>ELoop Over List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ELoopOverList
   * @generated
   */
  public Adapter createELoopOverListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ELoopControl <em>ELoop Control</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ELoopControl
   * @generated
   */
  public Adapter createELoopControlAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EWithLookup <em>EWith Lookup</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EWithLookup
   * @generated
   */
  public Adapter createEWithLookupAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EUntil <em>EUntil</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EUntil
   * @generated
   */
  public Adapter createEUntilAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EPrivilegeEscalation <em>EPrivilege Escalation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EPrivilegeEscalation
   * @generated
   */
  public Adapter createEPrivilegeEscalationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EValidationMode <em>EValidation Mode</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EValidationMode
   * @generated
   */
  public Adapter createEValidationModeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EConnection <em>EConnection</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EConnection
   * @generated
   */
  public Adapter createEConnectionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EExeSettings <em>EExe Settings</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EExeSettings
   * @generated
   */
  public Adapter createEExeSettingsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EPlayExeSettings <em>EPlay Exe Settings</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EPlayExeSettings
   * @generated
   */
  public Adapter createEPlayExeSettingsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EExecutionExeSettings <em>EExecution Exe Settings</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EExecutionExeSettings
   * @generated
   */
  public Adapter createEExecutionExeSettingsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EErrorHandling <em>EError Handling</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EErrorHandling
   * @generated
   */
  public Adapter createEErrorHandlingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EBlockAndRoleErrorHandling <em>EBlock And Role Error Handling</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EBlockAndRoleErrorHandling
   * @generated
   */
  public Adapter createEBlockAndRoleErrorHandlingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EPlayErrorHandling <em>EPlay Error Handling</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EPlayErrorHandling
   * @generated
   */
  public Adapter createEPlayErrorHandlingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ETaskHandlerErrorHandling <em>ETask Handler Error Handling</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ETaskHandlerErrorHandling
   * @generated
   */
  public Adapter createETaskHandlerErrorHandlingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EFactsSettings <em>EFacts Settings</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EFactsSettings
   * @generated
   */
  public Adapter createEFactsSettingsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDelegation <em>EDelegation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDelegation
   * @generated
   */
  public Adapter createEDelegationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EAsynchronousSettings <em>EAsynchronous Settings</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EAsynchronousSettings
   * @generated
   */
  public Adapter createEAsynchronousSettingsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ENotifiable <em>ENotifiable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ENotifiable
   * @generated
   */
  public Adapter createENotifiableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ENotifiedHandler <em>ENotified Handler</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ENotifiedHandler
   * @generated
   */
  public Adapter createENotifiedHandlerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ENotifiedTopic <em>ENotified Topic</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ENotifiedTopic
   * @generated
   */
  public Adapter createENotifiedTopicAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EJinjaOrString <em>EJinja Or String</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EJinjaOrString
   * @generated
   */
  public Adapter createEJinjaOrStringAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EJinjaAndString <em>EJinja And String</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EJinjaAndString
   * @generated
   */
  public Adapter createEJinjaAndStringAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EMultiLineExpression <em>EMulti Line Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EMultiLineExpression
   * @generated
   */
  public Adapter createEMultiLineExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EStringPassed <em>EString Passed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EStringPassed
   * @generated
   */
  public Adapter createEStringPassedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EValuePassed <em>EValue Passed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EValuePassed
   * @generated
   */
  public Adapter createEValuePassedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EValuePassedToJinjaExpression <em>EValue Passed To Jinja Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EValuePassedToJinjaExpression
   * @generated
   */
  public Adapter createEValuePassedToJinjaExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EComposedValue <em>EComposed Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EComposedValue
   * @generated
   */
  public Adapter createEComposedValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EComposedValueJinja <em>EComposed Value Jinja</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EComposedValueJinja
   * @generated
   */
  public Adapter createEComposedValueJinjaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EValueJinja <em>EValue Jinja</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EValueJinja
   * @generated
   */
  public Adapter createEValueJinjaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EValueWithoutString <em>EValue Without String</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EValueWithoutString
   * @generated
   */
  public Adapter createEValueWithoutStringAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ESimpleValueWithoutString <em>ESimple Value Without String</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ESimpleValueWithoutString
   * @generated
   */
  public Adapter createESimpleValueWithoutStringAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ESimpleValueJinja <em>ESimple Value Jinja</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ESimpleValueJinja
   * @generated
   */
  public Adapter createESimpleValueJinjaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EJinjaExpressionEvaluation <em>EJinja Expression Evaluation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EJinjaExpressionEvaluation
   * @generated
   */
  public Adapter createEJinjaExpressionEvaluationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EJinjaExpressionEvaluationWithoutBrackets <em>EJinja Expression Evaluation Without Brackets</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EJinjaExpressionEvaluationWithoutBrackets
   * @generated
   */
  public Adapter createEJinjaExpressionEvaluationWithoutBracketsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EFunctionCallOrVariable <em>EFunction Call Or Variable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EFunctionCallOrVariable
   * @generated
   */
  public Adapter createEFunctionCallOrVariableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EFunctionInput <em>EFunction Input</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EFunctionInput
   * @generated
   */
  public Adapter createEFunctionInputAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EIfBlock <em>EIf Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EIfBlock
   * @generated
   */
  public Adapter createEIfBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EFilteredExpression <em>EFiltered Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EFilteredExpression
   * @generated
   */
  public Adapter createEFilteredExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EOrExpression <em>EOr Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EOrExpression
   * @generated
   */
  public Adapter createEOrExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EAndExpression <em>EAnd Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EAndExpression
   * @generated
   */
  public Adapter createEAndExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ETruthExpression <em>ETruth Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ETruthExpression
   * @generated
   */
  public Adapter createETruthExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EOperation <em>EOperation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EOperation
   * @generated
   */
  public Adapter createEOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EIsExpression <em>EIs Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EIsExpression
   * @generated
   */
  public Adapter createEIsExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EParenthesisedExpression <em>EParenthesised Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EParenthesisedExpression
   * @generated
   */
  public Adapter createEParenthesisedExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EJinjaStatement <em>EJinja Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EJinjaStatement
   * @generated
   */
  public Adapter createEJinjaStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EIfStatement <em>EIf Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EIfStatement
   * @generated
   */
  public Adapter createEIfStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EElifBlock <em>EElif Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EElifBlock
   * @generated
   */
  public Adapter createEElifBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EForStatement <em>EFor Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EForStatement
   * @generated
   */
  public Adapter createEForStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EVariableDeclarationVariableReference <em>EVariable Declaration Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EVariableDeclarationVariableReference
   * @generated
   */
  public Adapter createEVariableDeclarationVariableReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ERegisterVariableReference <em>ERegister Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ERegisterVariableReference
   * @generated
   */
  public Adapter createERegisterVariableReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EVariableDeclaration <em>EVariable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EVariableDeclaration
   * @generated
   */
  public Adapter createEVariableDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EIndexOrLoopVariable <em>EIndex Or Loop Variable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EIndexOrLoopVariable
   * @generated
   */
  public Adapter createEIndexOrLoopVariableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EIndexOrLoopVariableReference <em>EIndex Or Loop Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EIndexOrLoopVariableReference
   * @generated
   */
  public Adapter createEIndexOrLoopVariableReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ERegisterVariable <em>ERegister Variable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ERegisterVariable
   * @generated
   */
  public Adapter createERegisterVariableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EInputOperationVariableReference <em>EInput Operation Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EInputOperationVariableReference
   * @generated
   */
  public Adapter createEInputOperationVariableReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EInputInterfaceVariableReference <em>EInput Interface Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EInputInterfaceVariableReference
   * @generated
   */
  public Adapter createEInputInterfaceVariableReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ESetFactVariableReference <em>ESet Fact Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ESetFactVariableReference
   * @generated
   */
  public Adapter createESetFactVariableReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EVariableReference <em>EVariable Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EVariableReference
   * @generated
   */
  public Adapter createEVariableReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ESpecialVariable <em>ESpecial Variable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ESpecialVariable
   * @generated
   */
  public Adapter createESpecialVariableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ETailElement <em>ETail Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ETailElement
   * @generated
   */
  public Adapter createETailElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ESquareBracketElement <em>ESquare Bracket Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ESquareBracketElement
   * @generated
   */
  public Adapter createESquareBracketElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ESliceNotation <em>ESlice Notation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ESliceNotation
   * @generated
   */
  public Adapter createESliceNotationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionary <em>EDictionary</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionary
   * @generated
   */
  public Adapter createEDictionaryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionaryInLine <em>EDictionary In Line</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionaryInLine
   * @generated
   */
  public Adapter createEDictionaryInLineAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionaryIndented <em>EDictionary Indented</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionaryIndented
   * @generated
   */
  public Adapter createEDictionaryIndentedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPair <em>EDictionary Pair</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPair
   * @generated
   */
  public Adapter createEDictionaryPairAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionaryJinja <em>EDictionary Jinja</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionaryJinja
   * @generated
   */
  public Adapter createEDictionaryJinjaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPairJinja <em>EDictionary Pair Jinja</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPairJinja
   * @generated
   */
  public Adapter createEDictionaryPairJinjaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EList <em>EList</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EList
   * @generated
   */
  public Adapter createEListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EListInLine <em>EList In Line</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EListInLine
   * @generated
   */
  public Adapter createEListInLineAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EListIndented <em>EList Indented</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EListIndented
   * @generated
   */
  public Adapter createEListIndentedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionaryOfListIndented <em>EDictionary Of List Indented</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionaryOfListIndented
   * @generated
   */
  public Adapter createEDictionaryOfListIndentedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EElementOfListIndented <em>EElement Of List Indented</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EElementOfListIndented
   * @generated
   */
  public Adapter createEElementOfListIndentedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EListJinja <em>EList Jinja</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EListJinja
   * @generated
   */
  public Adapter createEListJinjaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ECondition <em>ECondition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ECondition
   * @generated
   */
  public Adapter createEConditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EListOfConditions <em>EList Of Conditions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EListOfConditions
   * @generated
   */
  public Adapter createEListOfConditionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPassed <em>EDictionary Passed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPassed
   * @generated
   */
  public Adapter createEDictionaryPassedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EListPassed <em>EList Passed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EListPassed
   * @generated
   */
  public Adapter createEListPassedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ENumberPassed <em>ENumber Passed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ENumberPassed
   * @generated
   */
  public Adapter createENumberPassedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EBooleanPassed <em>EBoolean Passed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EBooleanPassed
   * @generated
   */
  public Adapter createEBooleanPassedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.EBooleanAnsible <em>EBoolean Ansible</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.EBooleanAnsible
   * @generated
   */
  public Adapter createEBooleanAnsibleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.sodalite.sdl.ansible.ansibleDsl.ENumber <em>ENumber</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.sodalite.sdl.ansible.ansibleDsl.ENumber
   * @generated
   */
  public Adapter createENumberAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //AnsibleDslAdapterFactory
