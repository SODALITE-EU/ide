package org.sodalite.sdl.ansible.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sodalite.sdl.ansible.services.AnsibleDslGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalAnsibleDslParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "External_file_inclusion", "Asynchronous_settings", "Privilege_escalation", "Max_fail_percentage", "Registered_variable", "Ignore_unreachable", "Declared_variable", "Index_or_loop_var", "Play_exe_settings", "Any_errors_fatal", "Block_to_execute", "Direct_parameter", "Roles_inclusions", "Special_variable", "Connection_info", "Delay_attribute", "Import_playbook", "Interface_input", "Module_defaults", "Operation_input", "Task_to_execute", "Until_condition", "Validation_mode", "Delegate_facts", "Error_handling", "Facts_settings", "Force_handlers", "Gather_timeout", "Line_of_string", "Port_attribute", "Tags_attribute", "When_condition", "Become_method", "Gather_subset", "Ignore_errors", "Playbook_name", "Always_tasks", "Become_flags", "Changed_when", "Exe_settings", "Gather_facts", "Handler_name", "Loop_control", "Rescue_tasks", "Become_user", "Collections", "Delegate_to", "Environment", "Failed_when", "Remote_user", "Vars_prompt", "Become_exe", "Block_name", "Check_mode", "Connection", "Delegation", "Parameters", "Post_tasks", "Tasks_list", "Vars_files", "Fact_path", "Index_var", "Interface", "Loop_over", "Node_type", "Operation", "Play_name", "Pre_tasks", "Role_name", "Task_name", "Debugger", "Extended", "Fact_set", "Handlers", "Loop_var", "Register", "Run_once", "Strategy", "Throttle", "Handler", "Include", "Retries", "Used_by", "Action", "Become", "Listen", "Module", "No_log", "Notify", "Serial", "Async", "Endfor", "Hosts", "Label", "Order", "Pause", "Plays", "Tasks", "Topic", "Until", "Args", "Diff", "Endif", "Loop", "Play", "Poll", "Role", "Vars", "When", "Elif", "Else", "With", "And", "For", "Not", "ExclamationMarkEqualsSign", "PercentSignRightCurlyBracket", "LeftParenthesisRightParenthesis", "AsteriskAsterisk", "SolidusSolidus", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "GreaterThanSignEqualsSign", "KW__", "If", "In", "Is", "Or", "LeftCurlyBracketPercentSign", "LeftCurlyBracketLeftCurlyBracket", "RightCurlyBracketRightCurlyBracket", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_BOOLEAN", "RULE_BOOLEAN_ONLY_ANSIBLE", "RULE_NULL", "RULE_NONE", "RULE_OCTAL_NUMBER", "RULE_HEXADECIMAL_NUMBER", "RULE_SIMPLE_NUMBER", "RULE_EXPONENTIAL_NUMBER", "RULE_INT", "RULE_INTEGER", "RULE_ID", "RULE_BEGIN", "RULE_END", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Line_of_string=32;
    public static final int Node_type=68;
    public static final int Rescue_tasks=47;
    public static final int Or=131;
    public static final int Privilege_escalation=6;
    public static final int Notify=92;
    public static final int Diff=105;
    public static final int Elif=113;
    public static final int Plays=100;
    public static final int Extended=75;
    public static final int Roles_inclusions=16;
    public static final int LessThanSign=145;
    public static final int Throttle=82;
    public static final int Play_name=70;
    public static final int LeftParenthesis=136;
    public static final int Loop_control=46;
    public static final int Remote_user=53;
    public static final int PercentSignRightCurlyBracket=120;
    public static final int GreaterThanSign=147;
    public static final int Changed_when=42;
    public static final int Parameters=60;
    public static final int RULE_ID=163;
    public static final int Exe_settings=43;
    public static final int Gather_facts=44;
    public static final int SolidusSolidus=123;
    public static final int Become_exe=55;
    public static final int GreaterThanSignEqualsSign=126;
    public static final int EqualsSignEqualsSign=125;
    public static final int Handler_name=45;
    public static final int VerticalLine=151;
    public static final int PlusSign=139;
    public static final int RULE_INT=161;
    public static final int Max_fail_percentage=7;
    public static final int RULE_ML_COMMENT=167;
    public static final int LeftSquareBracket=148;
    public static final int Loop_over=67;
    public static final int Module=90;
    public static final int If=128;
    public static final int Block_to_execute=14;
    public static final int Delay_attribute=19;
    public static final int Loop_var=78;
    public static final int Pause=99;
    public static final int RightCurlyBracketRightCurlyBracket=134;
    public static final int In=129;
    public static final int Asynchronous_settings=5;
    public static final int Listen=89;
    public static final int Is=130;
    public static final int Index_var=65;
    public static final int Always_tasks=40;
    public static final int Comma=140;
    public static final int LeftParenthesisRightParenthesis=121;
    public static final int HyphenMinus=141;
    public static final int Task_to_execute=24;
    public static final int Index_or_loop_var=11;
    public static final int LessThanSignEqualsSign=124;
    public static final int Solidus=143;
    public static final int RightCurlyBracket=152;
    public static final int Fact_set=76;
    public static final int FullStop=142;
    public static final int Connection_info=18;
    public static final int Block_name=56;
    public static final int Vars=111;
    public static final int Connection=58;
    public static final int Gather_subset=37;
    public static final int Delegate_facts=27;
    public static final int Module_defaults=22;
    public static final int Declared_variable=10;
    public static final int RULE_SIMPLE_NUMBER=159;
    public static final int Any_errors_fatal=13;
    public static final int Become_method=36;
    public static final int KW__=127;
    public static final int Handlers=77;
    public static final int Play=108;
    public static final int Serial=93;
    public static final int Check_mode=57;
    public static final int When=112;
    public static final int Register=79;
    public static final int Else=114;
    public static final int Interface_input=21;
    public static final int ExclamationMarkEqualsSign=119;
    public static final int Gather_timeout=31;
    public static final int Delegate_to=50;
    public static final int Interface=66;
    public static final int Facts_settings=29;
    public static final int LeftCurlyBracketPercentSign=132;
    public static final int Hosts=96;
    public static final int External_file_inclusion=4;
    public static final int RULE_BEGIN=164;
    public static final int Failed_when=52;
    public static final int No_log=91;
    public static final int Registered_variable=8;
    public static final int Import_playbook=20;
    public static final int Label=97;
    public static final int Post_tasks=61;
    public static final int Include=84;
    public static final int RULE_BOOLEAN=153;
    public static final int Fact_path=64;
    public static final int PercentSign=135;
    public static final int Until_condition=25;
    public static final int Become_flags=41;
    public static final int Used_by=86;
    public static final int Retries=85;
    public static final int Async=94;
    public static final int Port_attribute=33;
    public static final int Ignore_unreachable=9;
    public static final int Collections=49;
    public static final int RightSquareBracket=149;
    public static final int Order=98;
    public static final int Playbook_name=39;
    public static final int Tasks=101;
    public static final int Run_once=80;
    public static final int For=117;
    public static final int RightParenthesis=137;
    public static final int When_condition=35;
    public static final int Handler=83;
    public static final int Role=110;
    public static final int Not=118;
    public static final int RULE_HEXADECIMAL_NUMBER=158;
    public static final int Direct_parameter=15;
    public static final int And=116;
    public static final int AsteriskAsterisk=122;
    public static final int Environment=51;
    public static final int Become=88;
    public static final int Tags_attribute=34;
    public static final int Special_variable=17;
    public static final int LeftCurlyBracketLeftCurlyBracket=133;
    public static final int RULE_NONE=156;
    public static final int Debugger=74;
    public static final int Error_handling=28;
    public static final int Action=87;
    public static final int RULE_END=165;
    public static final int RULE_STRING=166;
    public static final int Operation=69;
    public static final int RULE_NULL=155;
    public static final int With=115;
    public static final int RULE_SL_COMMENT=168;
    public static final int Ignore_errors=38;
    public static final int EqualsSign=146;
    public static final int Task_name=73;
    public static final int Endfor=95;
    public static final int RULE_BOOLEAN_ONLY_ANSIBLE=154;
    public static final int Play_exe_settings=12;
    public static final int Colon=144;
    public static final int Tasks_list=62;
    public static final int Topic=102;
    public static final int EOF=-1;
    public static final int Force_handlers=30;
    public static final int Asterisk=138;
    public static final int Until=103;
    public static final int Loop=107;
    public static final int Operation_input=23;
    public static final int Role_name=72;
    public static final int Args=104;
    public static final int RULE_EXPONENTIAL_NUMBER=160;
    public static final int RULE_WS=169;
    public static final int Vars_prompt=54;
    public static final int Endif=106;
    public static final int LeftCurlyBracket=150;
    public static final int Validation_mode=26;
    public static final int RULE_ANY_OTHER=170;
    public static final int Delegation=59;
    public static final int Vars_files=63;
    public static final int Become_user=48;
    public static final int Pre_tasks=71;
    public static final int Strategy=81;
    public static final int Poll=109;
    public static final int RULE_OCTAL_NUMBER=157;
    public static final int RULE_INTEGER=162;

    // delegates
    // delegators


        public InternalAnsibleDslParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAnsibleDslParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAnsibleDslParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAnsibleDslParser.g"; }



     	private AnsibleDslGrammarAccess grammarAccess;

        public InternalAnsibleDslParser(TokenStream input, AnsibleDslGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected AnsibleDslGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalAnsibleDslParser.g:57:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalAnsibleDslParser.g:57:46: (iv_ruleModel= ruleModel EOF )
            // InternalAnsibleDslParser.g:58:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalAnsibleDslParser.g:64:1: ruleModel returns [EObject current=null] : this_EPlaybook_0= ruleEPlaybook ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject this_EPlaybook_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:70:2: (this_EPlaybook_0= ruleEPlaybook )
            // InternalAnsibleDslParser.g:71:2: this_EPlaybook_0= ruleEPlaybook
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getModelAccess().getEPlaybookParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_EPlaybook_0=ruleEPlaybook();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_EPlaybook_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleEPlaybook"
    // InternalAnsibleDslParser.g:82:1: entryRuleEPlaybook returns [EObject current=null] : iv_ruleEPlaybook= ruleEPlaybook EOF ;
    public final EObject entryRuleEPlaybook() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEPlaybook = null;


        try {
            // InternalAnsibleDslParser.g:82:50: (iv_ruleEPlaybook= ruleEPlaybook EOF )
            // InternalAnsibleDslParser.g:83:2: iv_ruleEPlaybook= ruleEPlaybook EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEPlaybookRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEPlaybook=ruleEPlaybook();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEPlaybook; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEPlaybook"


    // $ANTLR start "ruleEPlaybook"
    // InternalAnsibleDslParser.g:89:1: ruleEPlaybook returns [EObject current=null] : (otherlv_0= Playbook_name ( (lv_name_1_0= RULE_STRING ) ) ( (lv_used_by_2_0= ruleEUsedByBody ) )? otherlv_3= Plays this_BEGIN_4= RULE_BEGIN ( (lv_plays_5_0= ruleEPlay ) )+ this_END_6= RULE_END ) ;
    public final EObject ruleEPlaybook() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_3=null;
        Token this_BEGIN_4=null;
        Token this_END_6=null;
        EObject lv_used_by_2_0 = null;

        EObject lv_plays_5_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:95:2: ( (otherlv_0= Playbook_name ( (lv_name_1_0= RULE_STRING ) ) ( (lv_used_by_2_0= ruleEUsedByBody ) )? otherlv_3= Plays this_BEGIN_4= RULE_BEGIN ( (lv_plays_5_0= ruleEPlay ) )+ this_END_6= RULE_END ) )
            // InternalAnsibleDslParser.g:96:2: (otherlv_0= Playbook_name ( (lv_name_1_0= RULE_STRING ) ) ( (lv_used_by_2_0= ruleEUsedByBody ) )? otherlv_3= Plays this_BEGIN_4= RULE_BEGIN ( (lv_plays_5_0= ruleEPlay ) )+ this_END_6= RULE_END )
            {
            // InternalAnsibleDslParser.g:96:2: (otherlv_0= Playbook_name ( (lv_name_1_0= RULE_STRING ) ) ( (lv_used_by_2_0= ruleEUsedByBody ) )? otherlv_3= Plays this_BEGIN_4= RULE_BEGIN ( (lv_plays_5_0= ruleEPlay ) )+ this_END_6= RULE_END )
            // InternalAnsibleDslParser.g:97:3: otherlv_0= Playbook_name ( (lv_name_1_0= RULE_STRING ) ) ( (lv_used_by_2_0= ruleEUsedByBody ) )? otherlv_3= Plays this_BEGIN_4= RULE_BEGIN ( (lv_plays_5_0= ruleEPlay ) )+ this_END_6= RULE_END
            {
            otherlv_0=(Token)match(input,Playbook_name,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEPlaybookAccess().getPlaybook_nameKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:101:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalAnsibleDslParser.g:102:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:102:4: (lv_name_1_0= RULE_STRING )
            // InternalAnsibleDslParser.g:103:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getEPlaybookAccess().getNameSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEPlaybookRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:119:3: ( (lv_used_by_2_0= ruleEUsedByBody ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==Used_by) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalAnsibleDslParser.g:120:4: (lv_used_by_2_0= ruleEUsedByBody )
                    {
                    // InternalAnsibleDslParser.g:120:4: (lv_used_by_2_0= ruleEUsedByBody )
                    // InternalAnsibleDslParser.g:121:5: lv_used_by_2_0= ruleEUsedByBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEPlaybookAccess().getUsed_byEUsedByBodyParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_used_by_2_0=ruleEUsedByBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEPlaybookRule());
                      					}
                      					set(
                      						current,
                      						"used_by",
                      						lv_used_by_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.EUsedByBody");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,Plays,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEPlaybookAccess().getPlaysKeyword_3());
              		
            }
            this_BEGIN_4=(Token)match(input,RULE_BEGIN,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_4, grammarAccess.getEPlaybookAccess().getBEGINTerminalRuleCall_4());
              		
            }
            // InternalAnsibleDslParser.g:146:3: ( (lv_plays_5_0= ruleEPlay ) )+
            int cnt2=0;
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==Play) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:147:4: (lv_plays_5_0= ruleEPlay )
            	    {
            	    // InternalAnsibleDslParser.g:147:4: (lv_plays_5_0= ruleEPlay )
            	    // InternalAnsibleDslParser.g:148:5: lv_plays_5_0= ruleEPlay
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEPlaybookAccess().getPlaysEPlayParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_8);
            	    lv_plays_5_0=ruleEPlay();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEPlaybookRule());
            	      					}
            	      					add(
            	      						current,
            	      						"plays",
            	      						lv_plays_5_0,
            	      						"org.sodalite.sdl.ansible.AnsibleDsl.EPlay");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt2 >= 1 ) break loop2;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(2, input);
                        throw eee;
                }
                cnt2++;
            } while (true);

            this_END_6=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_6, grammarAccess.getEPlaybookAccess().getENDTerminalRuleCall_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEPlaybook"


    // $ANTLR start "entryRuleEUsedByBody"
    // InternalAnsibleDslParser.g:173:1: entryRuleEUsedByBody returns [EObject current=null] : iv_ruleEUsedByBody= ruleEUsedByBody EOF ;
    public final EObject entryRuleEUsedByBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEUsedByBody = null;


        try {
            // InternalAnsibleDslParser.g:173:52: (iv_ruleEUsedByBody= ruleEUsedByBody EOF )
            // InternalAnsibleDslParser.g:174:2: iv_ruleEUsedByBody= ruleEUsedByBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEUsedByBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEUsedByBody=ruleEUsedByBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEUsedByBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEUsedByBody"


    // $ANTLR start "ruleEUsedByBody"
    // InternalAnsibleDslParser.g:180:1: ruleEUsedByBody returns [EObject current=null] : (otherlv_0= Used_by this_BEGIN_1= RULE_BEGIN ( (lv_node_2_0= ruleNode ) ) this_END_3= RULE_END ) ;
    public final EObject ruleEUsedByBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token this_END_3=null;
        EObject lv_node_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:186:2: ( (otherlv_0= Used_by this_BEGIN_1= RULE_BEGIN ( (lv_node_2_0= ruleNode ) ) this_END_3= RULE_END ) )
            // InternalAnsibleDslParser.g:187:2: (otherlv_0= Used_by this_BEGIN_1= RULE_BEGIN ( (lv_node_2_0= ruleNode ) ) this_END_3= RULE_END )
            {
            // InternalAnsibleDslParser.g:187:2: (otherlv_0= Used_by this_BEGIN_1= RULE_BEGIN ( (lv_node_2_0= ruleNode ) ) this_END_3= RULE_END )
            // InternalAnsibleDslParser.g:188:3: otherlv_0= Used_by this_BEGIN_1= RULE_BEGIN ( (lv_node_2_0= ruleNode ) ) this_END_3= RULE_END
            {
            otherlv_0=(Token)match(input,Used_by,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEUsedByBodyAccess().getUsed_byKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEUsedByBodyAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:196:3: ( (lv_node_2_0= ruleNode ) )
            // InternalAnsibleDslParser.g:197:4: (lv_node_2_0= ruleNode )
            {
            // InternalAnsibleDslParser.g:197:4: (lv_node_2_0= ruleNode )
            // InternalAnsibleDslParser.g:198:5: lv_node_2_0= ruleNode
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEUsedByBodyAccess().getNodeNodeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_node_2_0=ruleNode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEUsedByBodyRule());
              					}
              					set(
              						current,
              						"node",
              						lv_node_2_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.Node");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_END_3=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_3, grammarAccess.getEUsedByBodyAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEUsedByBody"


    // $ANTLR start "entryRuleNode"
    // InternalAnsibleDslParser.g:223:1: entryRuleNode returns [EObject current=null] : iv_ruleNode= ruleNode EOF ;
    public final EObject entryRuleNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNode = null;


        try {
            // InternalAnsibleDslParser.g:223:45: (iv_ruleNode= ruleNode EOF )
            // InternalAnsibleDslParser.g:224:2: iv_ruleNode= ruleNode EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNodeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNode=ruleNode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNode; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNode"


    // $ANTLR start "ruleNode"
    // InternalAnsibleDslParser.g:230:1: ruleNode returns [EObject current=null] : (this_LocalNode_0= ruleLocalNode | this_KBNode_1= ruleKBNode ) ;
    public final EObject ruleNode() throws RecognitionException {
        EObject current = null;

        EObject this_LocalNode_0 = null;

        EObject this_KBNode_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:236:2: ( (this_LocalNode_0= ruleLocalNode | this_KBNode_1= ruleKBNode ) )
            // InternalAnsibleDslParser.g:237:2: (this_LocalNode_0= ruleLocalNode | this_KBNode_1= ruleKBNode )
            {
            // InternalAnsibleDslParser.g:237:2: (this_LocalNode_0= ruleLocalNode | this_KBNode_1= ruleKBNode )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==Node_type) ) {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==RULE_STRING) ) {
                    alt3=1;
                }
                else if ( (LA3_1==RULE_ID) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalAnsibleDslParser.g:238:3: this_LocalNode_0= ruleLocalNode
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNodeAccess().getLocalNodeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LocalNode_0=ruleLocalNode();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocalNode_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:247:3: this_KBNode_1= ruleKBNode
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNodeAccess().getKBNodeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_KBNode_1=ruleKBNode();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KBNode_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNode"


    // $ANTLR start "entryRuleLocalNode"
    // InternalAnsibleDslParser.g:259:1: entryRuleLocalNode returns [EObject current=null] : iv_ruleLocalNode= ruleLocalNode EOF ;
    public final EObject entryRuleLocalNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalNode = null;


        try {
            // InternalAnsibleDslParser.g:259:50: (iv_ruleLocalNode= ruleLocalNode EOF )
            // InternalAnsibleDslParser.g:260:2: iv_ruleLocalNode= ruleLocalNode EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalNodeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalNode=ruleLocalNode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalNode; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalNode"


    // $ANTLR start "ruleLocalNode"
    // InternalAnsibleDslParser.g:266:1: ruleLocalNode returns [EObject current=null] : (otherlv_0= Node_type ( (otherlv_1= RULE_STRING ) ) otherlv_2= Interface ( (otherlv_3= RULE_STRING ) ) otherlv_4= Operation ( (otherlv_5= RULE_STRING ) ) ) ;
    public final EObject ruleLocalNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:272:2: ( (otherlv_0= Node_type ( (otherlv_1= RULE_STRING ) ) otherlv_2= Interface ( (otherlv_3= RULE_STRING ) ) otherlv_4= Operation ( (otherlv_5= RULE_STRING ) ) ) )
            // InternalAnsibleDslParser.g:273:2: (otherlv_0= Node_type ( (otherlv_1= RULE_STRING ) ) otherlv_2= Interface ( (otherlv_3= RULE_STRING ) ) otherlv_4= Operation ( (otherlv_5= RULE_STRING ) ) )
            {
            // InternalAnsibleDslParser.g:273:2: (otherlv_0= Node_type ( (otherlv_1= RULE_STRING ) ) otherlv_2= Interface ( (otherlv_3= RULE_STRING ) ) otherlv_4= Operation ( (otherlv_5= RULE_STRING ) ) )
            // InternalAnsibleDslParser.g:274:3: otherlv_0= Node_type ( (otherlv_1= RULE_STRING ) ) otherlv_2= Interface ( (otherlv_3= RULE_STRING ) ) otherlv_4= Operation ( (otherlv_5= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,Node_type,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLocalNodeAccess().getNode_typeKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:278:3: ( (otherlv_1= RULE_STRING ) )
            // InternalAnsibleDslParser.g:279:4: (otherlv_1= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:279:4: (otherlv_1= RULE_STRING )
            // InternalAnsibleDslParser.g:280:5: otherlv_1= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLocalNodeRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getLocalNodeAccess().getNode_typeENodeTypeCrossReference_1_0());
              				
            }

            }


            }

            otherlv_2=(Token)match(input,Interface,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLocalNodeAccess().getInterfaceKeyword_2());
              		
            }
            // InternalAnsibleDslParser.g:295:3: ( (otherlv_3= RULE_STRING ) )
            // InternalAnsibleDslParser.g:296:4: (otherlv_3= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:296:4: (otherlv_3= RULE_STRING )
            // InternalAnsibleDslParser.g:297:5: otherlv_3= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLocalNodeRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_STRING,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getLocalNodeAccess().getInterfaceEInterfaceDefinitionCrossReference_3_0());
              				
            }

            }


            }

            otherlv_4=(Token)match(input,Operation,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLocalNodeAccess().getOperationKeyword_4());
              		
            }
            // InternalAnsibleDslParser.g:312:3: ( (otherlv_5= RULE_STRING ) )
            // InternalAnsibleDslParser.g:313:4: (otherlv_5= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:313:4: (otherlv_5= RULE_STRING )
            // InternalAnsibleDslParser.g:314:5: otherlv_5= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLocalNodeRule());
              					}
              				
            }
            otherlv_5=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_5, grammarAccess.getLocalNodeAccess().getOperationEOperationDefinitionCrossReference_5_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalNode"


    // $ANTLR start "entryRuleKBNode"
    // InternalAnsibleDslParser.g:329:1: entryRuleKBNode returns [EObject current=null] : iv_ruleKBNode= ruleKBNode EOF ;
    public final EObject entryRuleKBNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKBNode = null;


        try {
            // InternalAnsibleDslParser.g:329:47: (iv_ruleKBNode= ruleKBNode EOF )
            // InternalAnsibleDslParser.g:330:2: iv_ruleKBNode= ruleKBNode EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKBNodeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKBNode=ruleKBNode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKBNode; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKBNode"


    // $ANTLR start "ruleKBNode"
    // InternalAnsibleDslParser.g:336:1: ruleKBNode returns [EObject current=null] : (otherlv_0= Node_type ( (lv_node_type_1_0= ruleEPREFIX_TYPE ) ) otherlv_2= Interface ( (lv_interface_3_0= RULE_ID ) ) otherlv_4= Operation ( (lv_operation_5_0= RULE_ID ) ) ) ;
    public final EObject ruleKBNode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_interface_3_0=null;
        Token otherlv_4=null;
        Token lv_operation_5_0=null;
        EObject lv_node_type_1_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:342:2: ( (otherlv_0= Node_type ( (lv_node_type_1_0= ruleEPREFIX_TYPE ) ) otherlv_2= Interface ( (lv_interface_3_0= RULE_ID ) ) otherlv_4= Operation ( (lv_operation_5_0= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:343:2: (otherlv_0= Node_type ( (lv_node_type_1_0= ruleEPREFIX_TYPE ) ) otherlv_2= Interface ( (lv_interface_3_0= RULE_ID ) ) otherlv_4= Operation ( (lv_operation_5_0= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:343:2: (otherlv_0= Node_type ( (lv_node_type_1_0= ruleEPREFIX_TYPE ) ) otherlv_2= Interface ( (lv_interface_3_0= RULE_ID ) ) otherlv_4= Operation ( (lv_operation_5_0= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:344:3: otherlv_0= Node_type ( (lv_node_type_1_0= ruleEPREFIX_TYPE ) ) otherlv_2= Interface ( (lv_interface_3_0= RULE_ID ) ) otherlv_4= Operation ( (lv_operation_5_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Node_type,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKBNodeAccess().getNode_typeKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:348:3: ( (lv_node_type_1_0= ruleEPREFIX_TYPE ) )
            // InternalAnsibleDslParser.g:349:4: (lv_node_type_1_0= ruleEPREFIX_TYPE )
            {
            // InternalAnsibleDslParser.g:349:4: (lv_node_type_1_0= ruleEPREFIX_TYPE )
            // InternalAnsibleDslParser.g:350:5: lv_node_type_1_0= ruleEPREFIX_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKBNodeAccess().getNode_typeEPREFIX_TYPEParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_node_type_1_0=ruleEPREFIX_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKBNodeRule());
              					}
              					set(
              						current,
              						"node_type",
              						lv_node_type_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EPREFIX_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,Interface,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getKBNodeAccess().getInterfaceKeyword_2());
              		
            }
            // InternalAnsibleDslParser.g:371:3: ( (lv_interface_3_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:372:4: (lv_interface_3_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:372:4: (lv_interface_3_0= RULE_ID )
            // InternalAnsibleDslParser.g:373:5: lv_interface_3_0= RULE_ID
            {
            lv_interface_3_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_interface_3_0, grammarAccess.getKBNodeAccess().getInterfaceIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getKBNodeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"interface",
              						lv_interface_3_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,Operation,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getKBNodeAccess().getOperationKeyword_4());
              		
            }
            // InternalAnsibleDslParser.g:393:3: ( (lv_operation_5_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:394:4: (lv_operation_5_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:394:4: (lv_operation_5_0= RULE_ID )
            // InternalAnsibleDslParser.g:395:5: lv_operation_5_0= RULE_ID
            {
            lv_operation_5_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_operation_5_0, grammarAccess.getKBNodeAccess().getOperationIDTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getKBNodeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"operation",
              						lv_operation_5_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKBNode"


    // $ANTLR start "entryRuleEPREFIX_TYPE"
    // InternalAnsibleDslParser.g:415:1: entryRuleEPREFIX_TYPE returns [EObject current=null] : iv_ruleEPREFIX_TYPE= ruleEPREFIX_TYPE EOF ;
    public final EObject entryRuleEPREFIX_TYPE() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEPREFIX_TYPE = null;


        try {
            // InternalAnsibleDslParser.g:415:53: (iv_ruleEPREFIX_TYPE= ruleEPREFIX_TYPE EOF )
            // InternalAnsibleDslParser.g:416:2: iv_ruleEPREFIX_TYPE= ruleEPREFIX_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEPREFIX_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEPREFIX_TYPE=ruleEPREFIX_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEPREFIX_TYPE; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEPREFIX_TYPE"


    // $ANTLR start "ruleEPREFIX_TYPE"
    // InternalAnsibleDslParser.g:422:1: ruleEPREFIX_TYPE returns [EObject current=null] : ( ( ( (lv_module_0_0= RULE_ID ) ) otherlv_1= Solidus )? ( (lv_type_2_0= ruleQUALIFIED_NAME ) ) ) ;
    public final EObject ruleEPREFIX_TYPE() throws RecognitionException {
        EObject current = null;

        Token lv_module_0_0=null;
        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:428:2: ( ( ( ( (lv_module_0_0= RULE_ID ) ) otherlv_1= Solidus )? ( (lv_type_2_0= ruleQUALIFIED_NAME ) ) ) )
            // InternalAnsibleDslParser.g:429:2: ( ( ( (lv_module_0_0= RULE_ID ) ) otherlv_1= Solidus )? ( (lv_type_2_0= ruleQUALIFIED_NAME ) ) )
            {
            // InternalAnsibleDslParser.g:429:2: ( ( ( (lv_module_0_0= RULE_ID ) ) otherlv_1= Solidus )? ( (lv_type_2_0= ruleQUALIFIED_NAME ) ) )
            // InternalAnsibleDslParser.g:430:3: ( ( (lv_module_0_0= RULE_ID ) ) otherlv_1= Solidus )? ( (lv_type_2_0= ruleQUALIFIED_NAME ) )
            {
            // InternalAnsibleDslParser.g:430:3: ( ( (lv_module_0_0= RULE_ID ) ) otherlv_1= Solidus )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_ID) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==Solidus) ) {
                    alt4=1;
                }
            }
            switch (alt4) {
                case 1 :
                    // InternalAnsibleDslParser.g:431:4: ( (lv_module_0_0= RULE_ID ) ) otherlv_1= Solidus
                    {
                    // InternalAnsibleDslParser.g:431:4: ( (lv_module_0_0= RULE_ID ) )
                    // InternalAnsibleDslParser.g:432:5: (lv_module_0_0= RULE_ID )
                    {
                    // InternalAnsibleDslParser.g:432:5: (lv_module_0_0= RULE_ID )
                    // InternalAnsibleDslParser.g:433:6: lv_module_0_0= RULE_ID
                    {
                    lv_module_0_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_module_0_0, grammarAccess.getEPREFIX_TYPEAccess().getModuleIDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEPREFIX_TYPERule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"module",
                      							lv_module_0_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.ID");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,Solidus,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEPREFIX_TYPEAccess().getSolidusKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAnsibleDslParser.g:454:3: ( (lv_type_2_0= ruleQUALIFIED_NAME ) )
            // InternalAnsibleDslParser.g:455:4: (lv_type_2_0= ruleQUALIFIED_NAME )
            {
            // InternalAnsibleDslParser.g:455:4: (lv_type_2_0= ruleQUALIFIED_NAME )
            // InternalAnsibleDslParser.g:456:5: lv_type_2_0= ruleQUALIFIED_NAME
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEPREFIX_TYPEAccess().getTypeQUALIFIED_NAMEParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruleQUALIFIED_NAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEPREFIX_TYPERule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.QUALIFIED_NAME");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEPREFIX_TYPE"


    // $ANTLR start "entryRuleEExecution"
    // InternalAnsibleDslParser.g:477:1: entryRuleEExecution returns [EObject current=null] : iv_ruleEExecution= ruleEExecution EOF ;
    public final EObject entryRuleEExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEExecution = null;


        try {
            // InternalAnsibleDslParser.g:477:51: (iv_ruleEExecution= ruleEExecution EOF )
            // InternalAnsibleDslParser.g:478:2: iv_ruleEExecution= ruleEExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEExecution=ruleEExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEExecution"


    // $ANTLR start "ruleEExecution"
    // InternalAnsibleDslParser.g:484:1: ruleEExecution returns [EObject current=null] : (this_EBlock_0= ruleEBlock | this_ETaskHandler_1= ruleETaskHandler | this_ERoleInclusion_2= ruleERoleInclusion ) ;
    public final EObject ruleEExecution() throws RecognitionException {
        EObject current = null;

        EObject this_EBlock_0 = null;

        EObject this_ETaskHandler_1 = null;

        EObject this_ERoleInclusion_2 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:490:2: ( (this_EBlock_0= ruleEBlock | this_ETaskHandler_1= ruleETaskHandler | this_ERoleInclusion_2= ruleERoleInclusion ) )
            // InternalAnsibleDslParser.g:491:2: (this_EBlock_0= ruleEBlock | this_ETaskHandler_1= ruleETaskHandler | this_ERoleInclusion_2= ruleERoleInclusion )
            {
            // InternalAnsibleDslParser.g:491:2: (this_EBlock_0= ruleEBlock | this_ETaskHandler_1= ruleETaskHandler | this_ERoleInclusion_2= ruleERoleInclusion )
            int alt5=3;
            switch ( input.LA(1) ) {
            case Block_to_execute:
                {
                alt5=1;
                }
                break;
            case Task_to_execute:
            case Handler:
                {
                alt5=2;
                }
                break;
            case Role:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalAnsibleDslParser.g:492:3: this_EBlock_0= ruleEBlock
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEExecutionAccess().getEBlockParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EBlock_0=ruleEBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EBlock_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:501:3: this_ETaskHandler_1= ruleETaskHandler
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEExecutionAccess().getETaskHandlerParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ETaskHandler_1=ruleETaskHandler();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ETaskHandler_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:510:3: this_ERoleInclusion_2= ruleERoleInclusion
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEExecutionAccess().getERoleInclusionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ERoleInclusion_2=ruleERoleInclusion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ERoleInclusion_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEExecution"


    // $ANTLR start "entryRuleEBlockTask"
    // InternalAnsibleDslParser.g:522:1: entryRuleEBlockTask returns [EObject current=null] : iv_ruleEBlockTask= ruleEBlockTask EOF ;
    public final EObject entryRuleEBlockTask() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEBlockTask = null;


        try {
            // InternalAnsibleDslParser.g:522:51: (iv_ruleEBlockTask= ruleEBlockTask EOF )
            // InternalAnsibleDslParser.g:523:2: iv_ruleEBlockTask= ruleEBlockTask EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEBlockTaskRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEBlockTask=ruleEBlockTask();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEBlockTask; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEBlockTask"


    // $ANTLR start "ruleEBlockTask"
    // InternalAnsibleDslParser.g:529:1: ruleEBlockTask returns [EObject current=null] : (this_EBlock_0= ruleEBlock | this_ETask_1= ruleETask ) ;
    public final EObject ruleEBlockTask() throws RecognitionException {
        EObject current = null;

        EObject this_EBlock_0 = null;

        EObject this_ETask_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:535:2: ( (this_EBlock_0= ruleEBlock | this_ETask_1= ruleETask ) )
            // InternalAnsibleDslParser.g:536:2: (this_EBlock_0= ruleEBlock | this_ETask_1= ruleETask )
            {
            // InternalAnsibleDslParser.g:536:2: (this_EBlock_0= ruleEBlock | this_ETask_1= ruleETask )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==Block_to_execute) ) {
                alt6=1;
            }
            else if ( (LA6_0==Task_to_execute) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalAnsibleDslParser.g:537:3: this_EBlock_0= ruleEBlock
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEBlockTaskAccess().getEBlockParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EBlock_0=ruleEBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EBlock_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:546:3: this_ETask_1= ruleETask
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEBlockTaskAccess().getETaskParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ETask_1=ruleETask();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ETask_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEBlockTask"


    // $ANTLR start "entryRuleETaskHandler"
    // InternalAnsibleDslParser.g:558:1: entryRuleETaskHandler returns [EObject current=null] : iv_ruleETaskHandler= ruleETaskHandler EOF ;
    public final EObject entryRuleETaskHandler() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleETaskHandler = null;


        try {
            // InternalAnsibleDslParser.g:558:53: (iv_ruleETaskHandler= ruleETaskHandler EOF )
            // InternalAnsibleDslParser.g:559:2: iv_ruleETaskHandler= ruleETaskHandler EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getETaskHandlerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleETaskHandler=ruleETaskHandler();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleETaskHandler; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleETaskHandler"


    // $ANTLR start "ruleETaskHandler"
    // InternalAnsibleDslParser.g:565:1: ruleETaskHandler returns [EObject current=null] : (this_ETask_0= ruleETask | this_EHandler_1= ruleEHandler ) ;
    public final EObject ruleETaskHandler() throws RecognitionException {
        EObject current = null;

        EObject this_ETask_0 = null;

        EObject this_EHandler_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:571:2: ( (this_ETask_0= ruleETask | this_EHandler_1= ruleEHandler ) )
            // InternalAnsibleDslParser.g:572:2: (this_ETask_0= ruleETask | this_EHandler_1= ruleEHandler )
            {
            // InternalAnsibleDslParser.g:572:2: (this_ETask_0= ruleETask | this_EHandler_1= ruleEHandler )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Task_to_execute) ) {
                alt7=1;
            }
            else if ( (LA7_0==Handler) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalAnsibleDslParser.g:573:3: this_ETask_0= ruleETask
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getETaskHandlerAccess().getETaskParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ETask_0=ruleETask();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ETask_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:582:3: this_EHandler_1= ruleEHandler
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getETaskHandlerAccess().getEHandlerParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EHandler_1=ruleEHandler();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EHandler_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleETaskHandler"


    // $ANTLR start "entryRuleEPlay"
    // InternalAnsibleDslParser.g:594:1: entryRuleEPlay returns [EObject current=null] : iv_ruleEPlay= ruleEPlay EOF ;
    public final EObject entryRuleEPlay() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEPlay = null;


        try {
            // InternalAnsibleDslParser.g:594:46: (iv_ruleEPlay= ruleEPlay EOF )
            // InternalAnsibleDslParser.g:595:2: iv_ruleEPlay= ruleEPlay EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEPlayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEPlay=ruleEPlay();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEPlay; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEPlay"


    // $ANTLR start "ruleEPlay"
    // InternalAnsibleDslParser.g:601:1: ruleEPlay returns [EObject current=null] : ( () otherlv_1= Play this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) ) ) this_END_54= RULE_END ) ;
    public final EObject ruleEPlay() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token this_BEGIN_24=null;
        Token this_END_26=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_37=null;
        Token this_BEGIN_38=null;
        Token this_END_40=null;
        Token otherlv_42=null;
        Token this_BEGIN_43=null;
        Token this_END_45=null;
        Token otherlv_46=null;
        Token this_BEGIN_47=null;
        Token this_END_49=null;
        Token otherlv_50=null;
        Token this_BEGIN_51=null;
        Token this_END_53=null;
        Token this_END_54=null;
        EObject lv_name_5_0 = null;

        EObject lv_hosts_7_0 = null;

        EObject lv_privilege_escalation_8_0 = null;

        EObject lv_validation_mode_9_0 = null;

        EObject lv_connection_10_0 = null;

        EObject lv_no_log_12_0 = null;

        EObject lv_debugger_14_0 = null;

        EObject lv_module_defaults_16_0 = null;

        EObject lv_environment_18_0 = null;

        EObject lv_collections_20_0 = null;

        EObject lv_tags_22_0 = null;

        EObject lv_variable_declarations_25_0 = null;

        EObject lv_play_exe_settings_27_0 = null;

        EObject lv_error_handling_28_0 = null;

        EObject lv_facts_settings_29_0 = null;

        EObject lv_vars_files_31_0 = null;

        EObject lv_vars_prompt_33_0 = null;

        EObject lv_force_handlers_35_0 = null;

        EObject lv_external_file_inclusion_36_0 = null;

        EObject lv_pre_tasks_list_39_0 = null;

        EObject lv_roles_inclusions_41_0 = null;

        EObject lv_tasks_list_44_0 = null;

        EObject lv_post_tasks_list_48_0 = null;

        EObject lv_handlers_52_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:607:2: ( ( () otherlv_1= Play this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) ) ) this_END_54= RULE_END ) )
            // InternalAnsibleDslParser.g:608:2: ( () otherlv_1= Play this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) ) ) this_END_54= RULE_END )
            {
            // InternalAnsibleDslParser.g:608:2: ( () otherlv_1= Play this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) ) ) this_END_54= RULE_END )
            // InternalAnsibleDslParser.g:609:3: () otherlv_1= Play this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) ) ) this_END_54= RULE_END
            {
            // InternalAnsibleDslParser.g:609:3: ()
            // InternalAnsibleDslParser.g:610:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEPlayAccess().getEPlayAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Play,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEPlayAccess().getPlayKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getEPlayAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalAnsibleDslParser.g:624:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:625:4: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:625:4: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:626:5: ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEPlayAccess().getUnorderedGroup_3());
            // InternalAnsibleDslParser.g:629:5: ( ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )* )
            // InternalAnsibleDslParser.g:630:6: ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:630:6: ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )*
            loop13:
            do {
                int alt13=25;
                alt13 = dfa13.predict(input);
                switch (alt13) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:631:4: ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:631:4: ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:632:5: {...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:632:102: ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:633:6: ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 0);
            	    // InternalAnsibleDslParser.g:636:9: ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:636:10: {...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:636:19: (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:636:20: otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) )
            	    {
            	    otherlv_4=(Token)match(input,Play_name,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getEPlayAccess().getPlay_nameKeyword_3_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:640:9: ( (lv_name_5_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:641:10: (lv_name_5_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:641:10: (lv_name_5_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:642:11: lv_name_5_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getNameEStringPassedParserRuleCall_3_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_name_5_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"name",
            	      												lv_name_5_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:665:4: ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:665:4: ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:666:5: {...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:666:102: ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:667:6: ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 1);
            	    // InternalAnsibleDslParser.g:670:9: ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:670:10: {...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:670:19: (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:670:20: otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) )
            	    {
            	    otherlv_6=(Token)match(input,Hosts,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getEPlayAccess().getHostsKeyword_3_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:674:9: ( (lv_hosts_7_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:675:10: (lv_hosts_7_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:675:10: (lv_hosts_7_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:676:11: lv_hosts_7_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getHostsEStringPassedParserRuleCall_3_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_hosts_7_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"hosts",
            	      												lv_hosts_7_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:699:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:699:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:700:5: {...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:700:102: ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) )
            	    // InternalAnsibleDslParser.g:701:6: ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 2);
            	    // InternalAnsibleDslParser.g:704:9: ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) )
            	    // InternalAnsibleDslParser.g:704:10: {...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:704:19: ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) )
            	    // InternalAnsibleDslParser.g:704:20: (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation )
            	    {
            	    // InternalAnsibleDslParser.g:704:20: (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation )
            	    // InternalAnsibleDslParser.g:705:10: lv_privilege_escalation_8_0= ruleEPrivilegeEscalation
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getPrivilege_escalationEPrivilegeEscalationParserRuleCall_3_2_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_privilege_escalation_8_0=ruleEPrivilegeEscalation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"privilege_escalation",
            	      											lv_privilege_escalation_8_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EPrivilegeEscalation");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:727:4: ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:727:4: ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) )
            	    // InternalAnsibleDslParser.g:728:5: {...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:728:102: ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) )
            	    // InternalAnsibleDslParser.g:729:6: ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 3);
            	    // InternalAnsibleDslParser.g:732:9: ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) )
            	    // InternalAnsibleDslParser.g:732:10: {...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:732:19: ( (lv_validation_mode_9_0= ruleEValidationMode ) )
            	    // InternalAnsibleDslParser.g:732:20: (lv_validation_mode_9_0= ruleEValidationMode )
            	    {
            	    // InternalAnsibleDslParser.g:732:20: (lv_validation_mode_9_0= ruleEValidationMode )
            	    // InternalAnsibleDslParser.g:733:10: lv_validation_mode_9_0= ruleEValidationMode
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getValidation_modeEValidationModeParserRuleCall_3_3_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_validation_mode_9_0=ruleEValidationMode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"validation_mode",
            	      											lv_validation_mode_9_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EValidationMode");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:755:4: ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:755:4: ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) )
            	    // InternalAnsibleDslParser.g:756:5: {...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:756:102: ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) )
            	    // InternalAnsibleDslParser.g:757:6: ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 4);
            	    // InternalAnsibleDslParser.g:760:9: ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) )
            	    // InternalAnsibleDslParser.g:760:10: {...}? => ( (lv_connection_10_0= ruleEConnection ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:760:19: ( (lv_connection_10_0= ruleEConnection ) )
            	    // InternalAnsibleDslParser.g:760:20: (lv_connection_10_0= ruleEConnection )
            	    {
            	    // InternalAnsibleDslParser.g:760:20: (lv_connection_10_0= ruleEConnection )
            	    // InternalAnsibleDslParser.g:761:10: lv_connection_10_0= ruleEConnection
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getConnectionEConnectionParserRuleCall_3_4_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_connection_10_0=ruleEConnection();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"connection",
            	      											lv_connection_10_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EConnection");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalAnsibleDslParser.g:783:4: ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:783:4: ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:784:5: {...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalAnsibleDslParser.g:784:102: ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:785:6: ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 5);
            	    // InternalAnsibleDslParser.g:788:9: ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:788:10: {...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:788:19: (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:788:20: otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_11=(Token)match(input,No_log,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getEPlayAccess().getNo_logKeyword_3_5_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:792:9: ( (lv_no_log_12_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:793:10: (lv_no_log_12_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:793:10: (lv_no_log_12_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:794:11: lv_no_log_12_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getNo_logEBooleanPassedParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_no_log_12_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"no_log",
            	      												lv_no_log_12_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalAnsibleDslParser.g:817:4: ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:817:4: ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:818:5: {...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalAnsibleDslParser.g:818:102: ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:819:6: ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 6);
            	    // InternalAnsibleDslParser.g:822:9: ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:822:10: {...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:822:19: (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:822:20: otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) )
            	    {
            	    otherlv_13=(Token)match(input,Debugger,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getEPlayAccess().getDebuggerKeyword_3_6_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:826:9: ( (lv_debugger_14_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:827:10: (lv_debugger_14_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:827:10: (lv_debugger_14_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:828:11: lv_debugger_14_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getDebuggerEStringPassedParserRuleCall_3_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_debugger_14_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"debugger",
            	      												lv_debugger_14_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalAnsibleDslParser.g:851:4: ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:851:4: ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:852:5: {...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalAnsibleDslParser.g:852:102: ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:853:6: ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 7);
            	    // InternalAnsibleDslParser.g:856:9: ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:856:10: {...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:856:19: (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:856:20: otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) )
            	    {
            	    otherlv_15=(Token)match(input,Module_defaults,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getEPlayAccess().getModule_defaultsKeyword_3_7_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:860:9: ( (lv_module_defaults_16_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:861:10: (lv_module_defaults_16_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:861:10: (lv_module_defaults_16_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:862:11: lv_module_defaults_16_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getModule_defaultsEValuePassedParserRuleCall_3_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_module_defaults_16_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"module_defaults",
            	      												lv_module_defaults_16_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalAnsibleDslParser.g:885:4: ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:885:4: ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:886:5: {...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalAnsibleDslParser.g:886:102: ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:887:6: ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 8);
            	    // InternalAnsibleDslParser.g:890:9: ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:890:10: {...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:890:19: (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:890:20: otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) )
            	    {
            	    otherlv_17=(Token)match(input,Environment,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_17, grammarAccess.getEPlayAccess().getEnvironmentKeyword_3_8_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:894:9: ( (lv_environment_18_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:895:10: (lv_environment_18_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:895:10: (lv_environment_18_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:896:11: lv_environment_18_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getEnvironmentEValuePassedParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_environment_18_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"environment",
            	      												lv_environment_18_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalAnsibleDslParser.g:919:4: ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:919:4: ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:920:5: {...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalAnsibleDslParser.g:920:102: ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:921:6: ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 9);
            	    // InternalAnsibleDslParser.g:924:9: ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:924:10: {...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:924:19: (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) )
            	    // InternalAnsibleDslParser.g:924:20: otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) )
            	    {
            	    otherlv_19=(Token)match(input,Collections,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getEPlayAccess().getCollectionsKeyword_3_9_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:928:9: ( (lv_collections_20_0= ruleECollectionListPassed ) )
            	    // InternalAnsibleDslParser.g:929:10: (lv_collections_20_0= ruleECollectionListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:929:10: (lv_collections_20_0= ruleECollectionListPassed )
            	    // InternalAnsibleDslParser.g:930:11: lv_collections_20_0= ruleECollectionListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getCollectionsECollectionListPassedParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_collections_20_0=ruleECollectionListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"collections",
            	      												lv_collections_20_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalAnsibleDslParser.g:953:4: ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:953:4: ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:954:5: {...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalAnsibleDslParser.g:954:103: ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:955:6: ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 10);
            	    // InternalAnsibleDslParser.g:958:9: ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:958:10: {...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:958:19: (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) )
            	    // InternalAnsibleDslParser.g:958:20: otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) )
            	    {
            	    otherlv_21=(Token)match(input,Tags_attribute,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getEPlayAccess().getTags_attributeKeyword_3_10_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:962:9: ( (lv_tags_22_0= ruleEListPassed ) )
            	    // InternalAnsibleDslParser.g:963:10: (lv_tags_22_0= ruleEListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:963:10: (lv_tags_22_0= ruleEListPassed )
            	    // InternalAnsibleDslParser.g:964:11: lv_tags_22_0= ruleEListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getTagsEListPassedParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_tags_22_0=ruleEListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"tags",
            	      												lv_tags_22_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalAnsibleDslParser.g:987:4: ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:987:4: ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:988:5: {...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalAnsibleDslParser.g:988:103: ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:989:6: ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 11);
            	    // InternalAnsibleDslParser.g:992:9: ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) )
            	    // InternalAnsibleDslParser.g:992:10: {...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:992:19: (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END )
            	    // InternalAnsibleDslParser.g:992:20: otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END
            	    {
            	    otherlv_23=(Token)match(input,Vars,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getEPlayAccess().getVarsKeyword_3_11_0());
            	      								
            	    }
            	    this_BEGIN_24=(Token)match(input,RULE_BEGIN,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_24, grammarAccess.getEPlayAccess().getBEGINTerminalRuleCall_3_11_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1000:9: ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+
            	    int cnt8=0;
            	    loop8:
            	    do {
            	        int alt8=2;
            	        int LA8_0 = input.LA(1);

            	        if ( (LA8_0==RULE_ID) ) {
            	            alt8=1;
            	        }


            	        switch (alt8) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:1001:10: (lv_variable_declarations_25_0= ruleEVariableDeclaration )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:1001:10: (lv_variable_declarations_25_0= ruleEVariableDeclaration )
            	    	    // InternalAnsibleDslParser.g:1002:11: lv_variable_declarations_25_0= ruleEVariableDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEPlayAccess().getVariable_declarationsEVariableDeclarationParserRuleCall_3_11_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_21);
            	    	    lv_variable_declarations_25_0=ruleEVariableDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"variable_declarations",
            	    	      												lv_variable_declarations_25_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EVariableDeclaration");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt8 >= 1 ) break loop8;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(8, input);
            	                throw eee;
            	        }
            	        cnt8++;
            	    } while (true);

            	    this_END_26=(Token)match(input,RULE_END,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_26, grammarAccess.getEPlayAccess().getENDTerminalRuleCall_3_11_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalAnsibleDslParser.g:1029:4: ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1029:4: ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1030:5: {...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalAnsibleDslParser.g:1030:103: ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:1031:6: ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 12);
            	    // InternalAnsibleDslParser.g:1034:9: ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) )
            	    // InternalAnsibleDslParser.g:1034:10: {...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1034:19: ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) )
            	    // InternalAnsibleDslParser.g:1034:20: (lv_play_exe_settings_27_0= ruleEPlayExeSettings )
            	    {
            	    // InternalAnsibleDslParser.g:1034:20: (lv_play_exe_settings_27_0= ruleEPlayExeSettings )
            	    // InternalAnsibleDslParser.g:1035:10: lv_play_exe_settings_27_0= ruleEPlayExeSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getPlay_exe_settingsEPlayExeSettingsParserRuleCall_3_12_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_play_exe_settings_27_0=ruleEPlayExeSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"play_exe_settings",
            	      											lv_play_exe_settings_27_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EPlayExeSettings");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalAnsibleDslParser.g:1057:4: ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1057:4: ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1058:5: {...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalAnsibleDslParser.g:1058:103: ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) )
            	    // InternalAnsibleDslParser.g:1059:6: ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 13);
            	    // InternalAnsibleDslParser.g:1062:9: ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) )
            	    // InternalAnsibleDslParser.g:1062:10: {...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1062:19: ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) )
            	    // InternalAnsibleDslParser.g:1062:20: (lv_error_handling_28_0= ruleEPlayErrorHandling )
            	    {
            	    // InternalAnsibleDslParser.g:1062:20: (lv_error_handling_28_0= ruleEPlayErrorHandling )
            	    // InternalAnsibleDslParser.g:1063:10: lv_error_handling_28_0= ruleEPlayErrorHandling
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getError_handlingEPlayErrorHandlingParserRuleCall_3_13_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_error_handling_28_0=ruleEPlayErrorHandling();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"error_handling",
            	      											lv_error_handling_28_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EPlayErrorHandling");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalAnsibleDslParser.g:1085:4: ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1085:4: ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1086:5: {...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalAnsibleDslParser.g:1086:103: ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:1087:6: ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 14);
            	    // InternalAnsibleDslParser.g:1090:9: ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) )
            	    // InternalAnsibleDslParser.g:1090:10: {...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1090:19: ( (lv_facts_settings_29_0= ruleEFactsSettings ) )
            	    // InternalAnsibleDslParser.g:1090:20: (lv_facts_settings_29_0= ruleEFactsSettings )
            	    {
            	    // InternalAnsibleDslParser.g:1090:20: (lv_facts_settings_29_0= ruleEFactsSettings )
            	    // InternalAnsibleDslParser.g:1091:10: lv_facts_settings_29_0= ruleEFactsSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getFacts_settingsEFactsSettingsParserRuleCall_3_14_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_facts_settings_29_0=ruleEFactsSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"facts_settings",
            	      											lv_facts_settings_29_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EFactsSettings");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalAnsibleDslParser.g:1113:4: ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1113:4: ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1114:5: {...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalAnsibleDslParser.g:1114:103: ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1115:6: ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 15);
            	    // InternalAnsibleDslParser.g:1118:9: ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1118:10: {...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1118:19: (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) )
            	    // InternalAnsibleDslParser.g:1118:20: otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) )
            	    {
            	    otherlv_30=(Token)match(input,Vars_files,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_30, grammarAccess.getEPlayAccess().getVars_filesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1122:9: ( (lv_vars_files_31_0= ruleEListPassed ) )
            	    // InternalAnsibleDslParser.g:1123:10: (lv_vars_files_31_0= ruleEListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1123:10: (lv_vars_files_31_0= ruleEListPassed )
            	    // InternalAnsibleDslParser.g:1124:11: lv_vars_files_31_0= ruleEListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getVars_filesEListPassedParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_vars_files_31_0=ruleEListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"vars_files",
            	      												lv_vars_files_31_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalAnsibleDslParser.g:1147:4: ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1147:4: ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1148:5: {...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalAnsibleDslParser.g:1148:103: ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1149:6: ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 16);
            	    // InternalAnsibleDslParser.g:1152:9: ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1152:10: {...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1152:19: (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) )
            	    // InternalAnsibleDslParser.g:1152:20: otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) )
            	    {
            	    otherlv_32=(Token)match(input,Vars_prompt,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getEPlayAccess().getVars_promptKeyword_3_16_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1156:9: ( (lv_vars_prompt_33_0= ruleEListPassed ) )
            	    // InternalAnsibleDslParser.g:1157:10: (lv_vars_prompt_33_0= ruleEListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1157:10: (lv_vars_prompt_33_0= ruleEListPassed )
            	    // InternalAnsibleDslParser.g:1158:11: lv_vars_prompt_33_0= ruleEListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getVars_promptEListPassedParserRuleCall_3_16_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_vars_prompt_33_0=ruleEListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"vars_prompt",
            	      												lv_vars_prompt_33_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalAnsibleDslParser.g:1181:4: ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1181:4: ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1182:5: {...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalAnsibleDslParser.g:1182:103: ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1183:6: ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 17);
            	    // InternalAnsibleDslParser.g:1186:9: ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1186:10: {...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1186:19: (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:1186:20: otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_34=(Token)match(input,Force_handlers,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_34, grammarAccess.getEPlayAccess().getForce_handlersKeyword_3_17_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1190:9: ( (lv_force_handlers_35_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:1191:10: (lv_force_handlers_35_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1191:10: (lv_force_handlers_35_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:1192:11: lv_force_handlers_35_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayAccess().getForce_handlersEBooleanPassedParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_force_handlers_35_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"force_handlers",
            	      												lv_force_handlers_35_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalAnsibleDslParser.g:1215:4: ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1215:4: ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1216:5: {...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalAnsibleDslParser.g:1216:103: ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) )
            	    // InternalAnsibleDslParser.g:1217:6: ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 18);
            	    // InternalAnsibleDslParser.g:1220:9: ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) )
            	    // InternalAnsibleDslParser.g:1220:10: {...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1220:19: ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) )
            	    // InternalAnsibleDslParser.g:1220:20: (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion )
            	    {
            	    // InternalAnsibleDslParser.g:1220:20: (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion )
            	    // InternalAnsibleDslParser.g:1221:10: lv_external_file_inclusion_36_0= ruleEExternalFileInclusion
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getExternal_file_inclusionEExternalFileInclusionParserRuleCall_3_18_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_external_file_inclusion_36_0=ruleEExternalFileInclusion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"external_file_inclusion",
            	      											lv_external_file_inclusion_36_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EExternalFileInclusion");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalAnsibleDslParser.g:1243:4: ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1243:4: ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:1244:5: {...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalAnsibleDslParser.g:1244:103: ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:1245:6: ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 19);
            	    // InternalAnsibleDslParser.g:1248:9: ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) )
            	    // InternalAnsibleDslParser.g:1248:10: {...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1248:19: (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END )
            	    // InternalAnsibleDslParser.g:1248:20: otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END
            	    {
            	    otherlv_37=(Token)match(input,Pre_tasks,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getEPlayAccess().getPre_tasksKeyword_3_19_0());
            	      								
            	    }
            	    this_BEGIN_38=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_38, grammarAccess.getEPlayAccess().getBEGINTerminalRuleCall_3_19_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1256:9: ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+
            	    int cnt9=0;
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==Block_to_execute||LA9_0==Task_to_execute) ) {
            	            alt9=1;
            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:1257:10: (lv_pre_tasks_list_39_0= ruleEBlockTask )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:1257:10: (lv_pre_tasks_list_39_0= ruleEBlockTask )
            	    	    // InternalAnsibleDslParser.g:1258:11: lv_pre_tasks_list_39_0= ruleEBlockTask
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEPlayAccess().getPre_tasks_listEBlockTaskParserRuleCall_3_19_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_pre_tasks_list_39_0=ruleEBlockTask();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"pre_tasks_list",
            	    	      												lv_pre_tasks_list_39_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBlockTask");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt9 >= 1 ) break loop9;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(9, input);
            	                throw eee;
            	        }
            	        cnt9++;
            	    } while (true);

            	    this_END_40=(Token)match(input,RULE_END,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_40, grammarAccess.getEPlayAccess().getENDTerminalRuleCall_3_19_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalAnsibleDslParser.g:1285:4: ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1285:4: ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1286:5: {...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalAnsibleDslParser.g:1286:103: ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) )
            	    // InternalAnsibleDslParser.g:1287:6: ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 20);
            	    // InternalAnsibleDslParser.g:1290:9: ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) )
            	    // InternalAnsibleDslParser.g:1290:10: {...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1290:19: ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) )
            	    // InternalAnsibleDslParser.g:1290:20: (lv_roles_inclusions_41_0= ruleERoleInclusions )
            	    {
            	    // InternalAnsibleDslParser.g:1290:20: (lv_roles_inclusions_41_0= ruleERoleInclusions )
            	    // InternalAnsibleDslParser.g:1291:10: lv_roles_inclusions_41_0= ruleERoleInclusions
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEPlayAccess().getRoles_inclusionsERoleInclusionsParserRuleCall_3_20_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_roles_inclusions_41_0=ruleERoleInclusions();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEPlayRule());
            	      										}
            	      										set(
            	      											current,
            	      											"roles_inclusions",
            	      											lv_roles_inclusions_41_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.ERoleInclusions");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalAnsibleDslParser.g:1313:4: ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1313:4: ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:1314:5: {...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalAnsibleDslParser.g:1314:103: ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:1315:6: ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 21);
            	    // InternalAnsibleDslParser.g:1318:9: ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) )
            	    // InternalAnsibleDslParser.g:1318:10: {...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1318:19: (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END )
            	    // InternalAnsibleDslParser.g:1318:20: otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END
            	    {
            	    otherlv_42=(Token)match(input,Tasks_list,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_42, grammarAccess.getEPlayAccess().getTasks_listKeyword_3_21_0());
            	      								
            	    }
            	    this_BEGIN_43=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_43, grammarAccess.getEPlayAccess().getBEGINTerminalRuleCall_3_21_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1326:9: ( (lv_tasks_list_44_0= ruleEBlockTask ) )+
            	    int cnt10=0;
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==Block_to_execute||LA10_0==Task_to_execute) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:1327:10: (lv_tasks_list_44_0= ruleEBlockTask )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:1327:10: (lv_tasks_list_44_0= ruleEBlockTask )
            	    	    // InternalAnsibleDslParser.g:1328:11: lv_tasks_list_44_0= ruleEBlockTask
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEPlayAccess().getTasks_listEBlockTaskParserRuleCall_3_21_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_tasks_list_44_0=ruleEBlockTask();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"tasks_list",
            	    	      												lv_tasks_list_44_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBlockTask");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt10 >= 1 ) break loop10;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(10, input);
            	                throw eee;
            	        }
            	        cnt10++;
            	    } while (true);

            	    this_END_45=(Token)match(input,RULE_END,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_45, grammarAccess.getEPlayAccess().getENDTerminalRuleCall_3_21_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalAnsibleDslParser.g:1355:4: ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1355:4: ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:1356:5: {...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalAnsibleDslParser.g:1356:103: ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:1357:6: ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 22);
            	    // InternalAnsibleDslParser.g:1360:9: ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) )
            	    // InternalAnsibleDslParser.g:1360:10: {...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1360:19: (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END )
            	    // InternalAnsibleDslParser.g:1360:20: otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END
            	    {
            	    otherlv_46=(Token)match(input,Post_tasks,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_46, grammarAccess.getEPlayAccess().getPost_tasksKeyword_3_22_0());
            	      								
            	    }
            	    this_BEGIN_47=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_47, grammarAccess.getEPlayAccess().getBEGINTerminalRuleCall_3_22_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1368:9: ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+
            	    int cnt11=0;
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==Block_to_execute||LA11_0==Task_to_execute) ) {
            	            alt11=1;
            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:1369:10: (lv_post_tasks_list_48_0= ruleEBlockTask )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:1369:10: (lv_post_tasks_list_48_0= ruleEBlockTask )
            	    	    // InternalAnsibleDslParser.g:1370:11: lv_post_tasks_list_48_0= ruleEBlockTask
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEPlayAccess().getPost_tasks_listEBlockTaskParserRuleCall_3_22_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_post_tasks_list_48_0=ruleEBlockTask();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"post_tasks_list",
            	    	      												lv_post_tasks_list_48_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBlockTask");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt11 >= 1 ) break loop11;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(11, input);
            	                throw eee;
            	        }
            	        cnt11++;
            	    } while (true);

            	    this_END_49=(Token)match(input,RULE_END,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_49, grammarAccess.getEPlayAccess().getENDTerminalRuleCall_3_22_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 24 :
            	    // InternalAnsibleDslParser.g:1397:4: ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1397:4: ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:1398:5: {...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 23) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 23)");
            	    }
            	    // InternalAnsibleDslParser.g:1398:103: ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:1399:6: ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 23);
            	    // InternalAnsibleDslParser.g:1402:9: ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) )
            	    // InternalAnsibleDslParser.g:1402:10: {...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlay", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1402:19: (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END )
            	    // InternalAnsibleDslParser.g:1402:20: otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END
            	    {
            	    otherlv_50=(Token)match(input,Handlers,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_50, grammarAccess.getEPlayAccess().getHandlersKeyword_3_23_0());
            	      								
            	    }
            	    this_BEGIN_51=(Token)match(input,RULE_BEGIN,FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_51, grammarAccess.getEPlayAccess().getBEGINTerminalRuleCall_3_23_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1410:9: ( (lv_handlers_52_0= ruleEHandler ) )+
            	    int cnt12=0;
            	    loop12:
            	    do {
            	        int alt12=2;
            	        int LA12_0 = input.LA(1);

            	        if ( (LA12_0==Handler) ) {
            	            alt12=1;
            	        }


            	        switch (alt12) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:1411:10: (lv_handlers_52_0= ruleEHandler )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:1411:10: (lv_handlers_52_0= ruleEHandler )
            	    	    // InternalAnsibleDslParser.g:1412:11: lv_handlers_52_0= ruleEHandler
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEPlayAccess().getHandlersEHandlerParserRuleCall_3_23_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_25);
            	    	    lv_handlers_52_0=ruleEHandler();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEPlayRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"handlers",
            	    	      												lv_handlers_52_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EHandler");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt12 >= 1 ) break loop12;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(12, input);
            	                throw eee;
            	        }
            	        cnt12++;
            	    } while (true);

            	    this_END_53=(Token)match(input,RULE_END,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_53, grammarAccess.getEPlayAccess().getENDTerminalRuleCall_3_23_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEPlayAccess().getUnorderedGroup_3());

            }

            this_END_54=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_54, grammarAccess.getEPlayAccess().getENDTerminalRuleCall_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEPlay"


    // $ANTLR start "entryRuleEBlock"
    // InternalAnsibleDslParser.g:1454:1: entryRuleEBlock returns [EObject current=null] : iv_ruleEBlock= ruleEBlock EOF ;
    public final EObject entryRuleEBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEBlock = null;


        try {
            // InternalAnsibleDslParser.g:1454:47: (iv_ruleEBlock= ruleEBlock EOF )
            // InternalAnsibleDslParser.g:1455:2: iv_ruleEBlock= ruleEBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEBlock=ruleEBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEBlock"


    // $ANTLR start "ruleEBlock"
    // InternalAnsibleDslParser.g:1461:1: ruleEBlock returns [EObject current=null] : (otherlv_0= Block_to_execute this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) ) ) this_END_41= RULE_END ) ;
    public final EObject ruleEBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token this_BEGIN_21=null;
        Token this_END_23=null;
        Token otherlv_26=null;
        Token otherlv_29=null;
        Token this_BEGIN_30=null;
        Token this_END_32=null;
        Token otherlv_33=null;
        Token this_BEGIN_34=null;
        Token this_END_36=null;
        Token otherlv_37=null;
        Token this_BEGIN_38=null;
        Token this_END_40=null;
        Token this_END_41=null;
        EObject lv_name_4_0 = null;

        EObject lv_privilege_escalation_5_0 = null;

        EObject lv_validation_mode_6_0 = null;

        EObject lv_connection_7_0 = null;

        EObject lv_no_log_9_0 = null;

        EObject lv_debugger_11_0 = null;

        EObject lv_module_defaults_13_0 = null;

        EObject lv_environment_15_0 = null;

        EObject lv_collections_17_0 = null;

        EObject lv_tags_19_0 = null;

        EObject lv_variable_declarations_22_0 = null;

        EObject lv_exe_settings_24_0 = null;

        EObject lv_delegation_25_0 = null;

        EObject lv_when_expression_27_0 = null;

        EObject lv_error_handling_28_0 = null;

        EObject lv_tasks_31_0 = null;

        EObject lv_rescue_tasks_35_0 = null;

        EObject lv_always_tasks_39_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:1467:2: ( (otherlv_0= Block_to_execute this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) ) ) this_END_41= RULE_END ) )
            // InternalAnsibleDslParser.g:1468:2: (otherlv_0= Block_to_execute this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) ) ) this_END_41= RULE_END )
            {
            // InternalAnsibleDslParser.g:1468:2: (otherlv_0= Block_to_execute this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) ) ) this_END_41= RULE_END )
            // InternalAnsibleDslParser.g:1469:3: otherlv_0= Block_to_execute this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) ) ) this_END_41= RULE_END
            {
            otherlv_0=(Token)match(input,Block_to_execute,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEBlockAccess().getBlock_to_executeKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEBlockAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:1477:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) ) )
            // InternalAnsibleDslParser.g:1478:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) )
            {
            // InternalAnsibleDslParser.g:1478:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?) )
            // InternalAnsibleDslParser.g:1479:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEBlockAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:1482:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?)
            // InternalAnsibleDslParser.g:1483:6: ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+ {...}?
            {
            // InternalAnsibleDslParser.g:1483:6: ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+
            int cnt18=0;
            loop18:
            do {
                int alt18=19;
                alt18 = dfa18.predict(input);
                switch (alt18) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:1484:4: ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1484:4: ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1485:5: {...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:1485:103: ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1486:6: ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:1489:9: ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1489:10: {...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1489:19: (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:1489:20: otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Block_name,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEBlockAccess().getBlock_nameKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1493:9: ( (lv_name_4_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:1494:10: (lv_name_4_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1494:10: (lv_name_4_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:1495:11: lv_name_4_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getNameEStringPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_name_4_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"name",
            	      												lv_name_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:1518:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1518:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1519:5: {...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:1519:103: ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) )
            	    // InternalAnsibleDslParser.g:1520:6: ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:1523:9: ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) )
            	    // InternalAnsibleDslParser.g:1523:10: {...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1523:19: ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) )
            	    // InternalAnsibleDslParser.g:1523:20: (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation )
            	    {
            	    // InternalAnsibleDslParser.g:1523:20: (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation )
            	    // InternalAnsibleDslParser.g:1524:10: lv_privilege_escalation_5_0= ruleEPrivilegeEscalation
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEBlockAccess().getPrivilege_escalationEPrivilegeEscalationParserRuleCall_2_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_privilege_escalation_5_0=ruleEPrivilegeEscalation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      										}
            	      										set(
            	      											current,
            	      											"privilege_escalation",
            	      											lv_privilege_escalation_5_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EPrivilegeEscalation");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:1546:4: ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1546:4: ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1547:5: {...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:1547:103: ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) )
            	    // InternalAnsibleDslParser.g:1548:6: ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:1551:9: ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) )
            	    // InternalAnsibleDslParser.g:1551:10: {...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1551:19: ( (lv_validation_mode_6_0= ruleEValidationMode ) )
            	    // InternalAnsibleDslParser.g:1551:20: (lv_validation_mode_6_0= ruleEValidationMode )
            	    {
            	    // InternalAnsibleDslParser.g:1551:20: (lv_validation_mode_6_0= ruleEValidationMode )
            	    // InternalAnsibleDslParser.g:1552:10: lv_validation_mode_6_0= ruleEValidationMode
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEBlockAccess().getValidation_modeEValidationModeParserRuleCall_2_2_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_validation_mode_6_0=ruleEValidationMode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      										}
            	      										set(
            	      											current,
            	      											"validation_mode",
            	      											lv_validation_mode_6_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EValidationMode");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:1574:4: ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1574:4: ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1575:5: {...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:1575:103: ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) )
            	    // InternalAnsibleDslParser.g:1576:6: ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 3);
            	    // InternalAnsibleDslParser.g:1579:9: ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) )
            	    // InternalAnsibleDslParser.g:1579:10: {...}? => ( (lv_connection_7_0= ruleEConnection ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1579:19: ( (lv_connection_7_0= ruleEConnection ) )
            	    // InternalAnsibleDslParser.g:1579:20: (lv_connection_7_0= ruleEConnection )
            	    {
            	    // InternalAnsibleDslParser.g:1579:20: (lv_connection_7_0= ruleEConnection )
            	    // InternalAnsibleDslParser.g:1580:10: lv_connection_7_0= ruleEConnection
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEBlockAccess().getConnectionEConnectionParserRuleCall_2_3_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_connection_7_0=ruleEConnection();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      										}
            	      										set(
            	      											current,
            	      											"connection",
            	      											lv_connection_7_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EConnection");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:1602:4: ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1602:4: ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1603:5: {...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:1603:103: ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1604:6: ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 4);
            	    // InternalAnsibleDslParser.g:1607:9: ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1607:10: {...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1607:19: (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:1607:20: otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_8=(Token)match(input,No_log,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getEBlockAccess().getNo_logKeyword_2_4_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1611:9: ( (lv_no_log_9_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:1612:10: (lv_no_log_9_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1612:10: (lv_no_log_9_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:1613:11: lv_no_log_9_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getNo_logEBooleanPassedParserRuleCall_2_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_no_log_9_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"no_log",
            	      												lv_no_log_9_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalAnsibleDslParser.g:1636:4: ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1636:4: ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1637:5: {...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // InternalAnsibleDslParser.g:1637:103: ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1638:6: ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 5);
            	    // InternalAnsibleDslParser.g:1641:9: ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1641:10: {...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1641:19: (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:1641:20: otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) )
            	    {
            	    otherlv_10=(Token)match(input,Debugger,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getEBlockAccess().getDebuggerKeyword_2_5_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1645:9: ( (lv_debugger_11_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:1646:10: (lv_debugger_11_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1646:10: (lv_debugger_11_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:1647:11: lv_debugger_11_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getDebuggerEStringPassedParserRuleCall_2_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_debugger_11_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"debugger",
            	      												lv_debugger_11_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalAnsibleDslParser.g:1670:4: ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1670:4: ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1671:5: {...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 6)");
            	    }
            	    // InternalAnsibleDslParser.g:1671:103: ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1672:6: ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 6);
            	    // InternalAnsibleDslParser.g:1675:9: ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1675:10: {...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1675:19: (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:1675:20: otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) )
            	    {
            	    otherlv_12=(Token)match(input,Module_defaults,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getEBlockAccess().getModule_defaultsKeyword_2_6_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1679:9: ( (lv_module_defaults_13_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:1680:10: (lv_module_defaults_13_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:1680:10: (lv_module_defaults_13_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:1681:11: lv_module_defaults_13_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getModule_defaultsEValuePassedParserRuleCall_2_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_module_defaults_13_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"module_defaults",
            	      												lv_module_defaults_13_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalAnsibleDslParser.g:1704:4: ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1704:4: ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1705:5: {...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 7)");
            	    }
            	    // InternalAnsibleDslParser.g:1705:103: ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1706:6: ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 7);
            	    // InternalAnsibleDslParser.g:1709:9: ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1709:10: {...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1709:19: (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:1709:20: otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) )
            	    {
            	    otherlv_14=(Token)match(input,Environment,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getEBlockAccess().getEnvironmentKeyword_2_7_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1713:9: ( (lv_environment_15_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:1714:10: (lv_environment_15_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:1714:10: (lv_environment_15_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:1715:11: lv_environment_15_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getEnvironmentEValuePassedParserRuleCall_2_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_environment_15_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"environment",
            	      												lv_environment_15_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalAnsibleDslParser.g:1738:4: ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1738:4: ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1739:5: {...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 8)");
            	    }
            	    // InternalAnsibleDslParser.g:1739:103: ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1740:6: ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 8);
            	    // InternalAnsibleDslParser.g:1743:9: ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1743:10: {...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1743:19: (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) )
            	    // InternalAnsibleDslParser.g:1743:20: otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) )
            	    {
            	    otherlv_16=(Token)match(input,Collections,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getEBlockAccess().getCollectionsKeyword_2_8_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1747:9: ( (lv_collections_17_0= ruleECollectionListPassed ) )
            	    // InternalAnsibleDslParser.g:1748:10: (lv_collections_17_0= ruleECollectionListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1748:10: (lv_collections_17_0= ruleECollectionListPassed )
            	    // InternalAnsibleDslParser.g:1749:11: lv_collections_17_0= ruleECollectionListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getCollectionsECollectionListPassedParserRuleCall_2_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_collections_17_0=ruleECollectionListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"collections",
            	      												lv_collections_17_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalAnsibleDslParser.g:1772:4: ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1772:4: ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1773:5: {...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 9)");
            	    }
            	    // InternalAnsibleDslParser.g:1773:103: ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1774:6: ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 9);
            	    // InternalAnsibleDslParser.g:1777:9: ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:1777:10: {...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1777:19: (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) )
            	    // InternalAnsibleDslParser.g:1777:20: otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) )
            	    {
            	    otherlv_18=(Token)match(input,Tags_attribute,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getEBlockAccess().getTags_attributeKeyword_2_9_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1781:9: ( (lv_tags_19_0= ruleEListPassed ) )
            	    // InternalAnsibleDslParser.g:1782:10: (lv_tags_19_0= ruleEListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:1782:10: (lv_tags_19_0= ruleEListPassed )
            	    // InternalAnsibleDslParser.g:1783:11: lv_tags_19_0= ruleEListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getTagsEListPassedParserRuleCall_2_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_tags_19_0=ruleEListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"tags",
            	      												lv_tags_19_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalAnsibleDslParser.g:1806:4: ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1806:4: ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:1807:5: {...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 10)");
            	    }
            	    // InternalAnsibleDslParser.g:1807:104: ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:1808:6: ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 10);
            	    // InternalAnsibleDslParser.g:1811:9: ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) )
            	    // InternalAnsibleDslParser.g:1811:10: {...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1811:19: (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END )
            	    // InternalAnsibleDslParser.g:1811:20: otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END
            	    {
            	    otherlv_20=(Token)match(input,Vars,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getEBlockAccess().getVarsKeyword_2_10_0());
            	      								
            	    }
            	    this_BEGIN_21=(Token)match(input,RULE_BEGIN,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_21, grammarAccess.getEBlockAccess().getBEGINTerminalRuleCall_2_10_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1819:9: ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+
            	    int cnt14=0;
            	    loop14:
            	    do {
            	        int alt14=2;
            	        int LA14_0 = input.LA(1);

            	        if ( (LA14_0==RULE_ID) ) {
            	            alt14=1;
            	        }


            	        switch (alt14) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:1820:10: (lv_variable_declarations_22_0= ruleEVariableDeclaration )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:1820:10: (lv_variable_declarations_22_0= ruleEVariableDeclaration )
            	    	    // InternalAnsibleDslParser.g:1821:11: lv_variable_declarations_22_0= ruleEVariableDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEBlockAccess().getVariable_declarationsEVariableDeclarationParserRuleCall_2_10_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_21);
            	    	    lv_variable_declarations_22_0=ruleEVariableDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"variable_declarations",
            	    	      												lv_variable_declarations_22_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EVariableDeclaration");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt14 >= 1 ) break loop14;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(14, input);
            	                throw eee;
            	        }
            	        cnt14++;
            	    } while (true);

            	    this_END_23=(Token)match(input,RULE_END,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_23, grammarAccess.getEBlockAccess().getENDTerminalRuleCall_2_10_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalAnsibleDslParser.g:1848:4: ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1848:4: ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1849:5: {...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 11)");
            	    }
            	    // InternalAnsibleDslParser.g:1849:104: ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:1850:6: ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 11);
            	    // InternalAnsibleDslParser.g:1853:9: ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) )
            	    // InternalAnsibleDslParser.g:1853:10: {...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1853:19: ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) )
            	    // InternalAnsibleDslParser.g:1853:20: (lv_exe_settings_24_0= ruleEExecutionExeSettings )
            	    {
            	    // InternalAnsibleDslParser.g:1853:20: (lv_exe_settings_24_0= ruleEExecutionExeSettings )
            	    // InternalAnsibleDslParser.g:1854:10: lv_exe_settings_24_0= ruleEExecutionExeSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEBlockAccess().getExe_settingsEExecutionExeSettingsParserRuleCall_2_11_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_exe_settings_24_0=ruleEExecutionExeSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      										}
            	      										set(
            	      											current,
            	      											"exe_settings",
            	      											lv_exe_settings_24_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EExecutionExeSettings");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalAnsibleDslParser.g:1876:4: ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1876:4: ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1877:5: {...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 12)");
            	    }
            	    // InternalAnsibleDslParser.g:1877:104: ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) )
            	    // InternalAnsibleDslParser.g:1878:6: ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 12);
            	    // InternalAnsibleDslParser.g:1881:9: ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) )
            	    // InternalAnsibleDslParser.g:1881:10: {...}? => ( (lv_delegation_25_0= ruleEDelegation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1881:19: ( (lv_delegation_25_0= ruleEDelegation ) )
            	    // InternalAnsibleDslParser.g:1881:20: (lv_delegation_25_0= ruleEDelegation )
            	    {
            	    // InternalAnsibleDslParser.g:1881:20: (lv_delegation_25_0= ruleEDelegation )
            	    // InternalAnsibleDslParser.g:1882:10: lv_delegation_25_0= ruleEDelegation
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEBlockAccess().getDelegationEDelegationParserRuleCall_2_12_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_delegation_25_0=ruleEDelegation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      										}
            	      										set(
            	      											current,
            	      											"delegation",
            	      											lv_delegation_25_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EDelegation");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalAnsibleDslParser.g:1904:4: ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1904:4: ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1905:5: {...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 13)");
            	    }
            	    // InternalAnsibleDslParser.g:1905:104: ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1906:6: ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 13);
            	    // InternalAnsibleDslParser.g:1909:9: ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) )
            	    // InternalAnsibleDslParser.g:1909:10: {...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1909:19: (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) )
            	    // InternalAnsibleDslParser.g:1909:20: otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) )
            	    {
            	    otherlv_26=(Token)match(input,When,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getEBlockAccess().getWhenKeyword_2_13_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1913:9: ( (lv_when_expression_27_0= ruleECondition ) )
            	    // InternalAnsibleDslParser.g:1914:10: (lv_when_expression_27_0= ruleECondition )
            	    {
            	    // InternalAnsibleDslParser.g:1914:10: (lv_when_expression_27_0= ruleECondition )
            	    // InternalAnsibleDslParser.g:1915:11: lv_when_expression_27_0= ruleECondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAccess().getWhen_expressionEConditionParserRuleCall_2_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_when_expression_27_0=ruleECondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      											}
            	      											set(
            	      												current,
            	      												"when_expression",
            	      												lv_when_expression_27_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECondition");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalAnsibleDslParser.g:1938:4: ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1938:4: ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) )
            	    // InternalAnsibleDslParser.g:1939:5: {...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 14)");
            	    }
            	    // InternalAnsibleDslParser.g:1939:104: ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) )
            	    // InternalAnsibleDslParser.g:1940:6: ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 14);
            	    // InternalAnsibleDslParser.g:1943:9: ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) )
            	    // InternalAnsibleDslParser.g:1943:10: {...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1943:19: ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) )
            	    // InternalAnsibleDslParser.g:1943:20: (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling )
            	    {
            	    // InternalAnsibleDslParser.g:1943:20: (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling )
            	    // InternalAnsibleDslParser.g:1944:10: lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEBlockAccess().getError_handlingEBlockAndRoleErrorHandlingParserRuleCall_2_14_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_error_handling_28_0=ruleEBlockAndRoleErrorHandling();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEBlockRule());
            	      										}
            	      										set(
            	      											current,
            	      											"error_handling",
            	      											lv_error_handling_28_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EBlockAndRoleErrorHandling");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalAnsibleDslParser.g:1966:4: ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:1966:4: ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:1967:5: {...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 15)");
            	    }
            	    // InternalAnsibleDslParser.g:1967:104: ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:1968:6: ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 15);
            	    // InternalAnsibleDslParser.g:1971:9: ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) )
            	    // InternalAnsibleDslParser.g:1971:10: {...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:1971:19: (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END )
            	    // InternalAnsibleDslParser.g:1971:20: otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END
            	    {
            	    otherlv_29=(Token)match(input,Tasks,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_29, grammarAccess.getEBlockAccess().getTasksKeyword_2_15_0());
            	      								
            	    }
            	    this_BEGIN_30=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_30, grammarAccess.getEBlockAccess().getBEGINTerminalRuleCall_2_15_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:1979:9: ( (lv_tasks_31_0= ruleETask ) )+
            	    int cnt15=0;
            	    loop15:
            	    do {
            	        int alt15=2;
            	        int LA15_0 = input.LA(1);

            	        if ( (LA15_0==Task_to_execute) ) {
            	            alt15=1;
            	        }


            	        switch (alt15) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:1980:10: (lv_tasks_31_0= ruleETask )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:1980:10: (lv_tasks_31_0= ruleETask )
            	    	    // InternalAnsibleDslParser.g:1981:11: lv_tasks_31_0= ruleETask
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEBlockAccess().getTasksETaskParserRuleCall_2_15_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_tasks_31_0=ruleETask();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"tasks",
            	    	      												lv_tasks_31_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.ETask");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt15 >= 1 ) break loop15;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(15, input);
            	                throw eee;
            	        }
            	        cnt15++;
            	    } while (true);

            	    this_END_32=(Token)match(input,RULE_END,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_32, grammarAccess.getEBlockAccess().getENDTerminalRuleCall_2_15_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalAnsibleDslParser.g:2008:4: ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2008:4: ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:2009:5: {...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 16)");
            	    }
            	    // InternalAnsibleDslParser.g:2009:104: ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:2010:6: ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 16);
            	    // InternalAnsibleDslParser.g:2013:9: ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) )
            	    // InternalAnsibleDslParser.g:2013:10: {...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2013:19: (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END )
            	    // InternalAnsibleDslParser.g:2013:20: otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END
            	    {
            	    otherlv_33=(Token)match(input,Rescue_tasks,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_33, grammarAccess.getEBlockAccess().getRescue_tasksKeyword_2_16_0());
            	      								
            	    }
            	    this_BEGIN_34=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_34, grammarAccess.getEBlockAccess().getBEGINTerminalRuleCall_2_16_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2021:9: ( (lv_rescue_tasks_35_0= ruleETask ) )+
            	    int cnt16=0;
            	    loop16:
            	    do {
            	        int alt16=2;
            	        int LA16_0 = input.LA(1);

            	        if ( (LA16_0==Task_to_execute) ) {
            	            alt16=1;
            	        }


            	        switch (alt16) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:2022:10: (lv_rescue_tasks_35_0= ruleETask )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:2022:10: (lv_rescue_tasks_35_0= ruleETask )
            	    	    // InternalAnsibleDslParser.g:2023:11: lv_rescue_tasks_35_0= ruleETask
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEBlockAccess().getRescue_tasksETaskParserRuleCall_2_16_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_rescue_tasks_35_0=ruleETask();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"rescue_tasks",
            	    	      												lv_rescue_tasks_35_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.ETask");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt16 >= 1 ) break loop16;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(16, input);
            	                throw eee;
            	        }
            	        cnt16++;
            	    } while (true);

            	    this_END_36=(Token)match(input,RULE_END,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_36, grammarAccess.getEBlockAccess().getENDTerminalRuleCall_2_16_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalAnsibleDslParser.g:2050:4: ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2050:4: ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:2051:5: {...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 17)");
            	    }
            	    // InternalAnsibleDslParser.g:2051:104: ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:2052:6: ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 17);
            	    // InternalAnsibleDslParser.g:2055:9: ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) )
            	    // InternalAnsibleDslParser.g:2055:10: {...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlock", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2055:19: (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END )
            	    // InternalAnsibleDslParser.g:2055:20: otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END
            	    {
            	    otherlv_37=(Token)match(input,Always_tasks,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getEBlockAccess().getAlways_tasksKeyword_2_17_0());
            	      								
            	    }
            	    this_BEGIN_38=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_38, grammarAccess.getEBlockAccess().getBEGINTerminalRuleCall_2_17_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2063:9: ( (lv_always_tasks_39_0= ruleETask ) )+
            	    int cnt17=0;
            	    loop17:
            	    do {
            	        int alt17=2;
            	        int LA17_0 = input.LA(1);

            	        if ( (LA17_0==Task_to_execute) ) {
            	            alt17=1;
            	        }


            	        switch (alt17) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:2064:10: (lv_always_tasks_39_0= ruleETask )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:2064:10: (lv_always_tasks_39_0= ruleETask )
            	    	    // InternalAnsibleDslParser.g:2065:11: lv_always_tasks_39_0= ruleETask
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEBlockAccess().getAlways_tasksETaskParserRuleCall_2_17_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_23);
            	    	    lv_always_tasks_39_0=ruleETask();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEBlockRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"always_tasks",
            	    	      												lv_always_tasks_39_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.ETask");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt17 >= 1 ) break loop17;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(17, input);
            	                throw eee;
            	        }
            	        cnt17++;
            	    } while (true);

            	    this_END_40=(Token)match(input,RULE_END,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_40, grammarAccess.getEBlockAccess().getENDTerminalRuleCall_2_17_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEBlockAccess().getUnorderedGroup_2()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleEBlock", "getUnorderedGroupHelper().canLeave(grammarAccess.getEBlockAccess().getUnorderedGroup_2())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEBlockAccess().getUnorderedGroup_2());

            }

            this_END_41=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_41, grammarAccess.getEBlockAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEBlock"


    // $ANTLR start "entryRuleETask"
    // InternalAnsibleDslParser.g:2108:1: entryRuleETask returns [EObject current=null] : iv_ruleETask= ruleETask EOF ;
    public final EObject entryRuleETask() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleETask = null;


        try {
            // InternalAnsibleDslParser.g:2108:46: (iv_ruleETask= ruleETask EOF )
            // InternalAnsibleDslParser.g:2109:2: iv_ruleETask= ruleETask EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getETaskRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleETask=ruleETask();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleETask; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleETask"


    // $ANTLR start "ruleETask"
    // InternalAnsibleDslParser.g:2115:1: ruleETask returns [EObject current=null] : ( () otherlv_1= Task_to_execute this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) ) ) this_END_42= RULE_END ) ;
    public final EObject ruleETask() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        Token otherlv_27=null;
        Token otherlv_30=null;
        Token otherlv_33=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token this_END_42=null;
        EObject lv_name_5_0 = null;

        EObject lv_privilege_escalation_6_0 = null;

        EObject lv_validation_mode_7_0 = null;

        EObject lv_connection_8_0 = null;

        EObject lv_no_log_10_0 = null;

        EObject lv_debugger_12_0 = null;

        EObject lv_module_defaults_14_0 = null;

        EObject lv_environment_16_0 = null;

        EObject lv_collections_18_0 = null;

        EObject lv_tags_20_0 = null;

        EObject lv_variable_declarations_23_0 = null;

        EObject lv_exe_settings_25_0 = null;

        EObject lv_delegation_26_0 = null;

        EObject lv_when_expression_28_0 = null;

        EObject lv_error_handling_29_0 = null;

        EObject lv_action_31_0 = null;

        EObject lv_asynchronous_settings_32_0 = null;

        EObject lv_args_34_0 = null;

        EObject lv_module_35_0 = null;

        EObject lv_notifiables_37_0 = null;

        EObject lv_notifiables_39_0 = null;

        EObject lv_loop_40_0 = null;

        EObject lv_register_41_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:2121:2: ( ( () otherlv_1= Task_to_execute this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) ) ) this_END_42= RULE_END ) )
            // InternalAnsibleDslParser.g:2122:2: ( () otherlv_1= Task_to_execute this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) ) ) this_END_42= RULE_END )
            {
            // InternalAnsibleDslParser.g:2122:2: ( () otherlv_1= Task_to_execute this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) ) ) this_END_42= RULE_END )
            // InternalAnsibleDslParser.g:2123:3: () otherlv_1= Task_to_execute this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) ) ) this_END_42= RULE_END
            {
            // InternalAnsibleDslParser.g:2123:3: ()
            // InternalAnsibleDslParser.g:2124:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getETaskAccess().getETaskAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Task_to_execute,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getETaskAccess().getTask_to_executeKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getETaskAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalAnsibleDslParser.g:2138:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) ) )
            // InternalAnsibleDslParser.g:2139:4: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) )
            {
            // InternalAnsibleDslParser.g:2139:4: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?) )
            // InternalAnsibleDslParser.g:2140:5: ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getETaskAccess().getUnorderedGroup_3());
            // InternalAnsibleDslParser.g:2143:5: ( ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?)
            // InternalAnsibleDslParser.g:2144:6: ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+ {...}?
            {
            // InternalAnsibleDslParser.g:2144:6: ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+
            int cnt21=0;
            loop21:
            do {
                int alt21=23;
                alt21 = dfa21.predict(input);
                switch (alt21) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:2145:4: ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2145:4: ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2146:5: {...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:2146:102: ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2147:6: ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 0);
            	    // InternalAnsibleDslParser.g:2150:9: ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2150:10: {...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2150:19: (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:2150:20: otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) )
            	    {
            	    otherlv_4=(Token)match(input,Task_name,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getETaskAccess().getTask_nameKeyword_3_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2154:9: ( (lv_name_5_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:2155:10: (lv_name_5_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:2155:10: (lv_name_5_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:2156:11: lv_name_5_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getNameEStringPassedParserRuleCall_3_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_name_5_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"name",
            	      												lv_name_5_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:2179:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2179:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2180:5: {...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:2180:102: ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) )
            	    // InternalAnsibleDslParser.g:2181:6: ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 1);
            	    // InternalAnsibleDslParser.g:2184:9: ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) )
            	    // InternalAnsibleDslParser.g:2184:10: {...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2184:19: ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) )
            	    // InternalAnsibleDslParser.g:2184:20: (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation )
            	    {
            	    // InternalAnsibleDslParser.g:2184:20: (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation )
            	    // InternalAnsibleDslParser.g:2185:10: lv_privilege_escalation_6_0= ruleEPrivilegeEscalation
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getPrivilege_escalationEPrivilegeEscalationParserRuleCall_3_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_privilege_escalation_6_0=ruleEPrivilegeEscalation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"privilege_escalation",
            	      											lv_privilege_escalation_6_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EPrivilegeEscalation");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:2207:4: ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2207:4: ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2208:5: {...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:2208:102: ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) )
            	    // InternalAnsibleDslParser.g:2209:6: ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 2);
            	    // InternalAnsibleDslParser.g:2212:9: ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) )
            	    // InternalAnsibleDslParser.g:2212:10: {...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2212:19: ( (lv_validation_mode_7_0= ruleEValidationMode ) )
            	    // InternalAnsibleDslParser.g:2212:20: (lv_validation_mode_7_0= ruleEValidationMode )
            	    {
            	    // InternalAnsibleDslParser.g:2212:20: (lv_validation_mode_7_0= ruleEValidationMode )
            	    // InternalAnsibleDslParser.g:2213:10: lv_validation_mode_7_0= ruleEValidationMode
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getValidation_modeEValidationModeParserRuleCall_3_2_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_validation_mode_7_0=ruleEValidationMode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"validation_mode",
            	      											lv_validation_mode_7_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EValidationMode");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:2235:4: ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2235:4: ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2236:5: {...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:2236:102: ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) )
            	    // InternalAnsibleDslParser.g:2237:6: ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 3);
            	    // InternalAnsibleDslParser.g:2240:9: ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) )
            	    // InternalAnsibleDslParser.g:2240:10: {...}? => ( (lv_connection_8_0= ruleEConnection ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2240:19: ( (lv_connection_8_0= ruleEConnection ) )
            	    // InternalAnsibleDslParser.g:2240:20: (lv_connection_8_0= ruleEConnection )
            	    {
            	    // InternalAnsibleDslParser.g:2240:20: (lv_connection_8_0= ruleEConnection )
            	    // InternalAnsibleDslParser.g:2241:10: lv_connection_8_0= ruleEConnection
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getConnectionEConnectionParserRuleCall_3_3_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_connection_8_0=ruleEConnection();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"connection",
            	      											lv_connection_8_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EConnection");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:2263:4: ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2263:4: ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2264:5: {...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:2264:102: ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2265:6: ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 4);
            	    // InternalAnsibleDslParser.g:2268:9: ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2268:10: {...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2268:19: (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:2268:20: otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_9=(Token)match(input,No_log,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getETaskAccess().getNo_logKeyword_3_4_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2272:9: ( (lv_no_log_10_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:2273:10: (lv_no_log_10_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:2273:10: (lv_no_log_10_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:2274:11: lv_no_log_10_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getNo_logEBooleanPassedParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_no_log_10_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"no_log",
            	      												lv_no_log_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalAnsibleDslParser.g:2297:4: ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2297:4: ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2298:5: {...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalAnsibleDslParser.g:2298:102: ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2299:6: ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 5);
            	    // InternalAnsibleDslParser.g:2302:9: ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2302:10: {...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2302:19: (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:2302:20: otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) )
            	    {
            	    otherlv_11=(Token)match(input,Debugger,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getETaskAccess().getDebuggerKeyword_3_5_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2306:9: ( (lv_debugger_12_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:2307:10: (lv_debugger_12_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:2307:10: (lv_debugger_12_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:2308:11: lv_debugger_12_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getDebuggerEStringPassedParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_debugger_12_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"debugger",
            	      												lv_debugger_12_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalAnsibleDslParser.g:2331:4: ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2331:4: ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2332:5: {...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalAnsibleDslParser.g:2332:102: ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2333:6: ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 6);
            	    // InternalAnsibleDslParser.g:2336:9: ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2336:10: {...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2336:19: (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:2336:20: otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) )
            	    {
            	    otherlv_13=(Token)match(input,Module_defaults,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getETaskAccess().getModule_defaultsKeyword_3_6_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2340:9: ( (lv_module_defaults_14_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:2341:10: (lv_module_defaults_14_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:2341:10: (lv_module_defaults_14_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:2342:11: lv_module_defaults_14_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getModule_defaultsEValuePassedParserRuleCall_3_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_module_defaults_14_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"module_defaults",
            	      												lv_module_defaults_14_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalAnsibleDslParser.g:2365:4: ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2365:4: ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2366:5: {...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalAnsibleDslParser.g:2366:102: ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2367:6: ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 7);
            	    // InternalAnsibleDslParser.g:2370:9: ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2370:10: {...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2370:19: (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:2370:20: otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) )
            	    {
            	    otherlv_15=(Token)match(input,Environment,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getETaskAccess().getEnvironmentKeyword_3_7_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2374:9: ( (lv_environment_16_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:2375:10: (lv_environment_16_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:2375:10: (lv_environment_16_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:2376:11: lv_environment_16_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getEnvironmentEValuePassedParserRuleCall_3_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_environment_16_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"environment",
            	      												lv_environment_16_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalAnsibleDslParser.g:2399:4: ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2399:4: ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2400:5: {...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalAnsibleDslParser.g:2400:102: ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2401:6: ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 8);
            	    // InternalAnsibleDslParser.g:2404:9: ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2404:10: {...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2404:19: (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) )
            	    // InternalAnsibleDslParser.g:2404:20: otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) )
            	    {
            	    otherlv_17=(Token)match(input,Collections,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_17, grammarAccess.getETaskAccess().getCollectionsKeyword_3_8_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2408:9: ( (lv_collections_18_0= ruleECollectionListPassed ) )
            	    // InternalAnsibleDslParser.g:2409:10: (lv_collections_18_0= ruleECollectionListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:2409:10: (lv_collections_18_0= ruleECollectionListPassed )
            	    // InternalAnsibleDslParser.g:2410:11: lv_collections_18_0= ruleECollectionListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getCollectionsECollectionListPassedParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_collections_18_0=ruleECollectionListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"collections",
            	      												lv_collections_18_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalAnsibleDslParser.g:2433:4: ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2433:4: ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2434:5: {...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalAnsibleDslParser.g:2434:102: ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2435:6: ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 9);
            	    // InternalAnsibleDslParser.g:2438:9: ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2438:10: {...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2438:19: (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) )
            	    // InternalAnsibleDslParser.g:2438:20: otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) )
            	    {
            	    otherlv_19=(Token)match(input,Tags_attribute,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getETaskAccess().getTags_attributeKeyword_3_9_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2442:9: ( (lv_tags_20_0= ruleEListPassed ) )
            	    // InternalAnsibleDslParser.g:2443:10: (lv_tags_20_0= ruleEListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:2443:10: (lv_tags_20_0= ruleEListPassed )
            	    // InternalAnsibleDslParser.g:2444:11: lv_tags_20_0= ruleEListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getTagsEListPassedParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_tags_20_0=ruleEListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"tags",
            	      												lv_tags_20_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalAnsibleDslParser.g:2467:4: ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2467:4: ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:2468:5: {...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalAnsibleDslParser.g:2468:103: ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:2469:6: ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 10);
            	    // InternalAnsibleDslParser.g:2472:9: ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) )
            	    // InternalAnsibleDslParser.g:2472:10: {...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2472:19: (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END )
            	    // InternalAnsibleDslParser.g:2472:20: otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END
            	    {
            	    otherlv_21=(Token)match(input,Vars,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getETaskAccess().getVarsKeyword_3_10_0());
            	      								
            	    }
            	    this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_22, grammarAccess.getETaskAccess().getBEGINTerminalRuleCall_3_10_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2480:9: ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+
            	    int cnt19=0;
            	    loop19:
            	    do {
            	        int alt19=2;
            	        int LA19_0 = input.LA(1);

            	        if ( (LA19_0==RULE_ID) ) {
            	            alt19=1;
            	        }


            	        switch (alt19) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:2481:10: (lv_variable_declarations_23_0= ruleEVariableDeclaration )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:2481:10: (lv_variable_declarations_23_0= ruleEVariableDeclaration )
            	    	    // InternalAnsibleDslParser.g:2482:11: lv_variable_declarations_23_0= ruleEVariableDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getETaskAccess().getVariable_declarationsEVariableDeclarationParserRuleCall_3_10_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_21);
            	    	    lv_variable_declarations_23_0=ruleEVariableDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"variable_declarations",
            	    	      												lv_variable_declarations_23_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EVariableDeclaration");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt19 >= 1 ) break loop19;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(19, input);
            	                throw eee;
            	        }
            	        cnt19++;
            	    } while (true);

            	    this_END_24=(Token)match(input,RULE_END,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_24, grammarAccess.getETaskAccess().getENDTerminalRuleCall_3_10_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalAnsibleDslParser.g:2509:4: ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2509:4: ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2510:5: {...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalAnsibleDslParser.g:2510:103: ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:2511:6: ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 11);
            	    // InternalAnsibleDslParser.g:2514:9: ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) )
            	    // InternalAnsibleDslParser.g:2514:10: {...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2514:19: ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) )
            	    // InternalAnsibleDslParser.g:2514:20: (lv_exe_settings_25_0= ruleEExecutionExeSettings )
            	    {
            	    // InternalAnsibleDslParser.g:2514:20: (lv_exe_settings_25_0= ruleEExecutionExeSettings )
            	    // InternalAnsibleDslParser.g:2515:10: lv_exe_settings_25_0= ruleEExecutionExeSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getExe_settingsEExecutionExeSettingsParserRuleCall_3_11_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_exe_settings_25_0=ruleEExecutionExeSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"exe_settings",
            	      											lv_exe_settings_25_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EExecutionExeSettings");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalAnsibleDslParser.g:2537:4: ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2537:4: ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2538:5: {...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalAnsibleDslParser.g:2538:103: ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) )
            	    // InternalAnsibleDslParser.g:2539:6: ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 12);
            	    // InternalAnsibleDslParser.g:2542:9: ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) )
            	    // InternalAnsibleDslParser.g:2542:10: {...}? => ( (lv_delegation_26_0= ruleEDelegation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2542:19: ( (lv_delegation_26_0= ruleEDelegation ) )
            	    // InternalAnsibleDslParser.g:2542:20: (lv_delegation_26_0= ruleEDelegation )
            	    {
            	    // InternalAnsibleDslParser.g:2542:20: (lv_delegation_26_0= ruleEDelegation )
            	    // InternalAnsibleDslParser.g:2543:10: lv_delegation_26_0= ruleEDelegation
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getDelegationEDelegationParserRuleCall_3_12_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_delegation_26_0=ruleEDelegation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"delegation",
            	      											lv_delegation_26_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EDelegation");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalAnsibleDslParser.g:2565:4: ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2565:4: ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2566:5: {...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalAnsibleDslParser.g:2566:103: ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2567:6: ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 13);
            	    // InternalAnsibleDslParser.g:2570:9: ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) )
            	    // InternalAnsibleDslParser.g:2570:10: {...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2570:19: (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) )
            	    // InternalAnsibleDslParser.g:2570:20: otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) )
            	    {
            	    otherlv_27=(Token)match(input,When,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getETaskAccess().getWhenKeyword_3_13_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2574:9: ( (lv_when_expression_28_0= ruleECondition ) )
            	    // InternalAnsibleDslParser.g:2575:10: (lv_when_expression_28_0= ruleECondition )
            	    {
            	    // InternalAnsibleDslParser.g:2575:10: (lv_when_expression_28_0= ruleECondition )
            	    // InternalAnsibleDslParser.g:2576:11: lv_when_expression_28_0= ruleECondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getWhen_expressionEConditionParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_when_expression_28_0=ruleECondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"when_expression",
            	      												lv_when_expression_28_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECondition");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalAnsibleDslParser.g:2599:4: ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2599:4: ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2600:5: {...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalAnsibleDslParser.g:2600:103: ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) )
            	    // InternalAnsibleDslParser.g:2601:6: ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 14);
            	    // InternalAnsibleDslParser.g:2604:9: ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) )
            	    // InternalAnsibleDslParser.g:2604:10: {...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2604:19: ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) )
            	    // InternalAnsibleDslParser.g:2604:20: (lv_error_handling_29_0= ruleETaskHandlerErrorHandling )
            	    {
            	    // InternalAnsibleDslParser.g:2604:20: (lv_error_handling_29_0= ruleETaskHandlerErrorHandling )
            	    // InternalAnsibleDslParser.g:2605:10: lv_error_handling_29_0= ruleETaskHandlerErrorHandling
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getError_handlingETaskHandlerErrorHandlingParserRuleCall_3_14_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_error_handling_29_0=ruleETaskHandlerErrorHandling();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"error_handling",
            	      											lv_error_handling_29_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.ETaskHandlerErrorHandling");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalAnsibleDslParser.g:2627:4: ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2627:4: ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2628:5: {...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalAnsibleDslParser.g:2628:103: ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2629:6: ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 15);
            	    // InternalAnsibleDslParser.g:2632:9: ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2632:10: {...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2632:19: (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:2632:20: otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) )
            	    {
            	    otherlv_30=(Token)match(input,Action,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_30, grammarAccess.getETaskAccess().getActionKeyword_3_15_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2636:9: ( (lv_action_31_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:2637:10: (lv_action_31_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:2637:10: (lv_action_31_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:2638:11: lv_action_31_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getActionEStringPassedParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_action_31_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"action",
            	      												lv_action_31_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalAnsibleDslParser.g:2661:4: ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2661:4: ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2662:5: {...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalAnsibleDslParser.g:2662:103: ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:2663:6: ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 16);
            	    // InternalAnsibleDslParser.g:2666:9: ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) )
            	    // InternalAnsibleDslParser.g:2666:10: {...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2666:19: ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) )
            	    // InternalAnsibleDslParser.g:2666:20: (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings )
            	    {
            	    // InternalAnsibleDslParser.g:2666:20: (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings )
            	    // InternalAnsibleDslParser.g:2667:10: lv_asynchronous_settings_32_0= ruleEAsynchronousSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getAsynchronous_settingsEAsynchronousSettingsParserRuleCall_3_16_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_asynchronous_settings_32_0=ruleEAsynchronousSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"asynchronous_settings",
            	      											lv_asynchronous_settings_32_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EAsynchronousSettings");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalAnsibleDslParser.g:2689:4: ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2689:4: ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2690:5: {...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalAnsibleDslParser.g:2690:103: ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2691:6: ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 17);
            	    // InternalAnsibleDslParser.g:2694:9: ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:2694:10: {...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2694:19: (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) )
            	    // InternalAnsibleDslParser.g:2694:20: otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) )
            	    {
            	    otherlv_33=(Token)match(input,Args,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_33, grammarAccess.getETaskAccess().getArgsKeyword_3_17_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2698:9: ( (lv_args_34_0= ruleEDictionaryPassed ) )
            	    // InternalAnsibleDslParser.g:2699:10: (lv_args_34_0= ruleEDictionaryPassed )
            	    {
            	    // InternalAnsibleDslParser.g:2699:10: (lv_args_34_0= ruleEDictionaryPassed )
            	    // InternalAnsibleDslParser.g:2700:11: lv_args_34_0= ruleEDictionaryPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getArgsEDictionaryPassedParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_args_34_0=ruleEDictionaryPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											set(
            	      												current,
            	      												"args",
            	      												lv_args_34_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalAnsibleDslParser.g:2723:4: ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2723:4: ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2724:5: {...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalAnsibleDslParser.g:2724:103: ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) )
            	    // InternalAnsibleDslParser.g:2725:6: ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 18);
            	    // InternalAnsibleDslParser.g:2728:9: ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) )
            	    // InternalAnsibleDslParser.g:2728:10: {...}? => ( (lv_module_35_0= ruleEModuleCall ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2728:19: ( (lv_module_35_0= ruleEModuleCall ) )
            	    // InternalAnsibleDslParser.g:2728:20: (lv_module_35_0= ruleEModuleCall )
            	    {
            	    // InternalAnsibleDslParser.g:2728:20: (lv_module_35_0= ruleEModuleCall )
            	    // InternalAnsibleDslParser.g:2729:10: lv_module_35_0= ruleEModuleCall
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getModuleEModuleCallParserRuleCall_3_18_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_module_35_0=ruleEModuleCall();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"module",
            	      											lv_module_35_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EModuleCall");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalAnsibleDslParser.g:2751:4: ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2751:4: ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) )
            	    // InternalAnsibleDslParser.g:2752:5: {...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalAnsibleDslParser.g:2752:103: ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) )
            	    // InternalAnsibleDslParser.g:2753:6: ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 19);
            	    // InternalAnsibleDslParser.g:2756:9: ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) )
            	    // InternalAnsibleDslParser.g:2756:10: {...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2756:19: (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* )
            	    // InternalAnsibleDslParser.g:2756:20: otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )*
            	    {
            	    otherlv_36=(Token)match(input,Notify,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getETaskAccess().getNotifyKeyword_3_19_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2760:9: ( (lv_notifiables_37_0= ruleENotifiable ) )
            	    // InternalAnsibleDslParser.g:2761:10: (lv_notifiables_37_0= ruleENotifiable )
            	    {
            	    // InternalAnsibleDslParser.g:2761:10: (lv_notifiables_37_0= ruleENotifiable )
            	    // InternalAnsibleDslParser.g:2762:11: lv_notifiables_37_0= ruleENotifiable
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskAccess().getNotifiablesENotifiableParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_notifiables_37_0=ruleENotifiable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskRule());
            	      											}
            	      											add(
            	      												current,
            	      												"notifiables",
            	      												lv_notifiables_37_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENotifiable");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalAnsibleDslParser.g:2779:9: (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )*
            	    loop20:
            	    do {
            	        int alt20=2;
            	        int LA20_0 = input.LA(1);

            	        if ( (LA20_0==Comma) ) {
            	            alt20=1;
            	        }


            	        switch (alt20) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:2780:10: otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) )
            	    	    {
            	    	    otherlv_38=(Token)match(input,Comma,FOLLOW_32); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_38, grammarAccess.getETaskAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalAnsibleDslParser.g:2784:10: ( (lv_notifiables_39_0= ruleENotifiable ) )
            	    	    // InternalAnsibleDslParser.g:2785:11: (lv_notifiables_39_0= ruleENotifiable )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:2785:11: (lv_notifiables_39_0= ruleENotifiable )
            	    	    // InternalAnsibleDslParser.g:2786:12: lv_notifiables_39_0= ruleENotifiable
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getETaskAccess().getNotifiablesENotifiableParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_33);
            	    	    lv_notifiables_39_0=ruleENotifiable();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getETaskRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"notifiables",
            	    	      													lv_notifiables_39_0,
            	    	      													"org.sodalite.sdl.ansible.AnsibleDsl.ENotifiable");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop20;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalAnsibleDslParser.g:2810:4: ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2810:4: ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2811:5: {...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalAnsibleDslParser.g:2811:103: ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) )
            	    // InternalAnsibleDslParser.g:2812:6: ({...}? => ( (lv_loop_40_0= ruleELoop ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 20);
            	    // InternalAnsibleDslParser.g:2815:9: ({...}? => ( (lv_loop_40_0= ruleELoop ) ) )
            	    // InternalAnsibleDslParser.g:2815:10: {...}? => ( (lv_loop_40_0= ruleELoop ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2815:19: ( (lv_loop_40_0= ruleELoop ) )
            	    // InternalAnsibleDslParser.g:2815:20: (lv_loop_40_0= ruleELoop )
            	    {
            	    // InternalAnsibleDslParser.g:2815:20: (lv_loop_40_0= ruleELoop )
            	    // InternalAnsibleDslParser.g:2816:10: lv_loop_40_0= ruleELoop
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getLoopELoopParserRuleCall_3_20_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_loop_40_0=ruleELoop();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"loop",
            	      											lv_loop_40_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.ELoop");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalAnsibleDslParser.g:2838:4: ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2838:4: ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2839:5: {...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalAnsibleDslParser.g:2839:103: ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) )
            	    // InternalAnsibleDslParser.g:2840:6: ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 21);
            	    // InternalAnsibleDslParser.g:2843:9: ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) )
            	    // InternalAnsibleDslParser.g:2843:10: {...}? => ( (lv_register_41_0= ruleERegisterVariable ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETask", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2843:19: ( (lv_register_41_0= ruleERegisterVariable ) )
            	    // InternalAnsibleDslParser.g:2843:20: (lv_register_41_0= ruleERegisterVariable )
            	    {
            	    // InternalAnsibleDslParser.g:2843:20: (lv_register_41_0= ruleERegisterVariable )
            	    // InternalAnsibleDslParser.g:2844:10: lv_register_41_0= ruleERegisterVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getETaskAccess().getRegisterERegisterVariableParserRuleCall_3_21_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_register_41_0=ruleERegisterVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getETaskRule());
            	      										}
            	      										set(
            	      											current,
            	      											"register",
            	      											lv_register_41_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.ERegisterVariable");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt21 >= 1 ) break loop21;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(21, input);
                        throw eee;
                }
                cnt21++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getETaskAccess().getUnorderedGroup_3()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleETask", "getUnorderedGroupHelper().canLeave(grammarAccess.getETaskAccess().getUnorderedGroup_3())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getETaskAccess().getUnorderedGroup_3());

            }

            this_END_42=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_42, grammarAccess.getETaskAccess().getENDTerminalRuleCall_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleETask"


    // $ANTLR start "entryRuleEHandler"
    // InternalAnsibleDslParser.g:2882:1: entryRuleEHandler returns [EObject current=null] : iv_ruleEHandler= ruleEHandler EOF ;
    public final EObject entryRuleEHandler() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEHandler = null;


        try {
            // InternalAnsibleDslParser.g:2882:49: (iv_ruleEHandler= ruleEHandler EOF )
            // InternalAnsibleDslParser.g:2883:2: iv_ruleEHandler= ruleEHandler EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEHandlerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEHandler=ruleEHandler();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEHandler; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEHandler"


    // $ANTLR start "ruleEHandler"
    // InternalAnsibleDslParser.g:2889:1: ruleEHandler returns [EObject current=null] : ( () otherlv_1= Handler this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) ) ) this_END_46= RULE_END ) ;
    public final EObject ruleEHandler() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_4=null;
        Token lv_name_5_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_BEGIN_22=null;
        Token this_END_24=null;
        Token otherlv_27=null;
        Token otherlv_30=null;
        Token otherlv_33=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token this_END_46=null;
        EObject lv_privilege_escalation_6_0 = null;

        EObject lv_validation_mode_7_0 = null;

        EObject lv_connection_8_0 = null;

        EObject lv_no_log_10_0 = null;

        EObject lv_debugger_12_0 = null;

        EObject lv_module_defaults_14_0 = null;

        EObject lv_environment_16_0 = null;

        EObject lv_collections_18_0 = null;

        EObject lv_tags_20_0 = null;

        EObject lv_variable_declarations_23_0 = null;

        EObject lv_exe_settings_25_0 = null;

        EObject lv_delegation_26_0 = null;

        EObject lv_when_expression_28_0 = null;

        EObject lv_error_handling_29_0 = null;

        EObject lv_action_31_0 = null;

        EObject lv_asynchronous_settings_32_0 = null;

        EObject lv_args_34_0 = null;

        EObject lv_module_35_0 = null;

        EObject lv_notifiables_37_0 = null;

        EObject lv_notifiables_39_0 = null;

        EObject lv_loop_40_0 = null;

        EObject lv_register_41_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:2895:2: ( ( () otherlv_1= Handler this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) ) ) this_END_46= RULE_END ) )
            // InternalAnsibleDslParser.g:2896:2: ( () otherlv_1= Handler this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) ) ) this_END_46= RULE_END )
            {
            // InternalAnsibleDslParser.g:2896:2: ( () otherlv_1= Handler this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) ) ) this_END_46= RULE_END )
            // InternalAnsibleDslParser.g:2897:3: () otherlv_1= Handler this_BEGIN_2= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) ) ) this_END_46= RULE_END
            {
            // InternalAnsibleDslParser.g:2897:3: ()
            // InternalAnsibleDslParser.g:2898:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEHandlerAccess().getEHandlerAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Handler,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEHandlerAccess().getHandlerKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getEHandlerAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalAnsibleDslParser.g:2912:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) ) )
            // InternalAnsibleDslParser.g:2913:4: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) )
            {
            // InternalAnsibleDslParser.g:2913:4: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?) )
            // InternalAnsibleDslParser.g:2914:5: ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());
            // InternalAnsibleDslParser.g:2917:5: ( ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?)
            // InternalAnsibleDslParser.g:2918:6: ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+ {...}?
            {
            // InternalAnsibleDslParser.g:2918:6: ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+
            int cnt25=0;
            loop25:
            do {
                int alt25=24;
                alt25 = dfa25.predict(input);
                switch (alt25) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:2919:4: ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2919:4: ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2920:5: {...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:2920:105: ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2921:6: ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 0);
            	    // InternalAnsibleDslParser.g:2924:9: ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) )
            	    // InternalAnsibleDslParser.g:2924:10: {...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2924:19: (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) )
            	    // InternalAnsibleDslParser.g:2924:20: otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) )
            	    {
            	    otherlv_4=(Token)match(input,Handler_name,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getEHandlerAccess().getHandler_nameKeyword_3_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:2928:9: ( (lv_name_5_0= RULE_STRING ) )
            	    // InternalAnsibleDslParser.g:2929:10: (lv_name_5_0= RULE_STRING )
            	    {
            	    // InternalAnsibleDslParser.g:2929:10: (lv_name_5_0= RULE_STRING )
            	    // InternalAnsibleDslParser.g:2930:11: lv_name_5_0= RULE_STRING
            	    {
            	    lv_name_5_0=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_5_0, grammarAccess.getEHandlerAccess().getNameSTRINGTerminalRuleCall_3_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getEHandlerRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_5_0,
            	      												"org.eclipse.xtext.common.Terminals.STRING");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:2952:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2952:4: ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2953:5: {...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:2953:105: ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) )
            	    // InternalAnsibleDslParser.g:2954:6: ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 1);
            	    // InternalAnsibleDslParser.g:2957:9: ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) )
            	    // InternalAnsibleDslParser.g:2957:10: {...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2957:19: ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) )
            	    // InternalAnsibleDslParser.g:2957:20: (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation )
            	    {
            	    // InternalAnsibleDslParser.g:2957:20: (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation )
            	    // InternalAnsibleDslParser.g:2958:10: lv_privilege_escalation_6_0= ruleEPrivilegeEscalation
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getPrivilege_escalationEPrivilegeEscalationParserRuleCall_3_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_privilege_escalation_6_0=ruleEPrivilegeEscalation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"privilege_escalation",
            	      											lv_privilege_escalation_6_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EPrivilegeEscalation");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:2980:4: ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:2980:4: ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) )
            	    // InternalAnsibleDslParser.g:2981:5: {...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:2981:105: ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) )
            	    // InternalAnsibleDslParser.g:2982:6: ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 2);
            	    // InternalAnsibleDslParser.g:2985:9: ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) )
            	    // InternalAnsibleDslParser.g:2985:10: {...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:2985:19: ( (lv_validation_mode_7_0= ruleEValidationMode ) )
            	    // InternalAnsibleDslParser.g:2985:20: (lv_validation_mode_7_0= ruleEValidationMode )
            	    {
            	    // InternalAnsibleDslParser.g:2985:20: (lv_validation_mode_7_0= ruleEValidationMode )
            	    // InternalAnsibleDslParser.g:2986:10: lv_validation_mode_7_0= ruleEValidationMode
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getValidation_modeEValidationModeParserRuleCall_3_2_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_validation_mode_7_0=ruleEValidationMode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"validation_mode",
            	      											lv_validation_mode_7_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EValidationMode");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:3008:4: ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3008:4: ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3009:5: {...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:3009:105: ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) )
            	    // InternalAnsibleDslParser.g:3010:6: ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 3);
            	    // InternalAnsibleDslParser.g:3013:9: ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) )
            	    // InternalAnsibleDslParser.g:3013:10: {...}? => ( (lv_connection_8_0= ruleEConnection ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3013:19: ( (lv_connection_8_0= ruleEConnection ) )
            	    // InternalAnsibleDslParser.g:3013:20: (lv_connection_8_0= ruleEConnection )
            	    {
            	    // InternalAnsibleDslParser.g:3013:20: (lv_connection_8_0= ruleEConnection )
            	    // InternalAnsibleDslParser.g:3014:10: lv_connection_8_0= ruleEConnection
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getConnectionEConnectionParserRuleCall_3_3_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_connection_8_0=ruleEConnection();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"connection",
            	      											lv_connection_8_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EConnection");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:3036:4: ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3036:4: ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3037:5: {...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:3037:105: ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3038:6: ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 4);
            	    // InternalAnsibleDslParser.g:3041:9: ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3041:10: {...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3041:19: (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:3041:20: otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_9=(Token)match(input,No_log,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getEHandlerAccess().getNo_logKeyword_3_4_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3045:9: ( (lv_no_log_10_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:3046:10: (lv_no_log_10_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:3046:10: (lv_no_log_10_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:3047:11: lv_no_log_10_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getNo_logEBooleanPassedParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_no_log_10_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"no_log",
            	      												lv_no_log_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalAnsibleDslParser.g:3070:4: ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3070:4: ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3071:5: {...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalAnsibleDslParser.g:3071:105: ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3072:6: ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 5);
            	    // InternalAnsibleDslParser.g:3075:9: ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3075:10: {...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3075:19: (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:3075:20: otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) )
            	    {
            	    otherlv_11=(Token)match(input,Debugger,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getEHandlerAccess().getDebuggerKeyword_3_5_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3079:9: ( (lv_debugger_12_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:3080:10: (lv_debugger_12_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:3080:10: (lv_debugger_12_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:3081:11: lv_debugger_12_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getDebuggerEStringPassedParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_debugger_12_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"debugger",
            	      												lv_debugger_12_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalAnsibleDslParser.g:3104:4: ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3104:4: ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3105:5: {...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalAnsibleDslParser.g:3105:105: ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3106:6: ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 6);
            	    // InternalAnsibleDslParser.g:3109:9: ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3109:10: {...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3109:19: (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:3109:20: otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) )
            	    {
            	    otherlv_13=(Token)match(input,Module_defaults,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getEHandlerAccess().getModule_defaultsKeyword_3_6_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3113:9: ( (lv_module_defaults_14_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:3114:10: (lv_module_defaults_14_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:3114:10: (lv_module_defaults_14_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:3115:11: lv_module_defaults_14_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getModule_defaultsEValuePassedParserRuleCall_3_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_module_defaults_14_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"module_defaults",
            	      												lv_module_defaults_14_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalAnsibleDslParser.g:3138:4: ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3138:4: ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3139:5: {...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalAnsibleDslParser.g:3139:105: ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3140:6: ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 7);
            	    // InternalAnsibleDslParser.g:3143:9: ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3143:10: {...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3143:19: (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:3143:20: otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) )
            	    {
            	    otherlv_15=(Token)match(input,Environment,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getEHandlerAccess().getEnvironmentKeyword_3_7_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3147:9: ( (lv_environment_16_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:3148:10: (lv_environment_16_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:3148:10: (lv_environment_16_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:3149:11: lv_environment_16_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getEnvironmentEValuePassedParserRuleCall_3_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_environment_16_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"environment",
            	      												lv_environment_16_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalAnsibleDslParser.g:3172:4: ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3172:4: ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3173:5: {...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalAnsibleDslParser.g:3173:105: ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3174:6: ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 8);
            	    // InternalAnsibleDslParser.g:3177:9: ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3177:10: {...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3177:19: (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) )
            	    // InternalAnsibleDslParser.g:3177:20: otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) )
            	    {
            	    otherlv_17=(Token)match(input,Collections,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_17, grammarAccess.getEHandlerAccess().getCollectionsKeyword_3_8_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3181:9: ( (lv_collections_18_0= ruleECollectionListPassed ) )
            	    // InternalAnsibleDslParser.g:3182:10: (lv_collections_18_0= ruleECollectionListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:3182:10: (lv_collections_18_0= ruleECollectionListPassed )
            	    // InternalAnsibleDslParser.g:3183:11: lv_collections_18_0= ruleECollectionListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getCollectionsECollectionListPassedParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_collections_18_0=ruleECollectionListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"collections",
            	      												lv_collections_18_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalAnsibleDslParser.g:3206:4: ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3206:4: ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3207:5: {...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalAnsibleDslParser.g:3207:105: ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3208:6: ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 9);
            	    // InternalAnsibleDslParser.g:3211:9: ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3211:10: {...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3211:19: (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) )
            	    // InternalAnsibleDslParser.g:3211:20: otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) )
            	    {
            	    otherlv_19=(Token)match(input,Tags_attribute,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getEHandlerAccess().getTags_attributeKeyword_3_9_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3215:9: ( (lv_tags_20_0= ruleEListPassed ) )
            	    // InternalAnsibleDslParser.g:3216:10: (lv_tags_20_0= ruleEListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:3216:10: (lv_tags_20_0= ruleEListPassed )
            	    // InternalAnsibleDslParser.g:3217:11: lv_tags_20_0= ruleEListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getTagsEListPassedParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_tags_20_0=ruleEListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"tags",
            	      												lv_tags_20_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EListPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalAnsibleDslParser.g:3240:4: ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3240:4: ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:3241:5: {...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalAnsibleDslParser.g:3241:106: ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:3242:6: ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 10);
            	    // InternalAnsibleDslParser.g:3245:9: ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) )
            	    // InternalAnsibleDslParser.g:3245:10: {...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3245:19: (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END )
            	    // InternalAnsibleDslParser.g:3245:20: otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END
            	    {
            	    otherlv_21=(Token)match(input,Vars,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getEHandlerAccess().getVarsKeyword_3_10_0());
            	      								
            	    }
            	    this_BEGIN_22=(Token)match(input,RULE_BEGIN,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_BEGIN_22, grammarAccess.getEHandlerAccess().getBEGINTerminalRuleCall_3_10_1());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3253:9: ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+
            	    int cnt22=0;
            	    loop22:
            	    do {
            	        int alt22=2;
            	        int LA22_0 = input.LA(1);

            	        if ( (LA22_0==RULE_ID) ) {
            	            alt22=1;
            	        }


            	        switch (alt22) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:3254:10: (lv_variable_declarations_23_0= ruleEVariableDeclaration )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:3254:10: (lv_variable_declarations_23_0= ruleEVariableDeclaration )
            	    	    // InternalAnsibleDslParser.g:3255:11: lv_variable_declarations_23_0= ruleEVariableDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getEHandlerAccess().getVariable_declarationsEVariableDeclarationParserRuleCall_3_10_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_21);
            	    	    lv_variable_declarations_23_0=ruleEVariableDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"variable_declarations",
            	    	      												lv_variable_declarations_23_0,
            	    	      												"org.sodalite.sdl.ansible.AnsibleDsl.EVariableDeclaration");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt22 >= 1 ) break loop22;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(22, input);
            	                throw eee;
            	        }
            	        cnt22++;
            	    } while (true);

            	    this_END_24=(Token)match(input,RULE_END,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(this_END_24, grammarAccess.getEHandlerAccess().getENDTerminalRuleCall_3_10_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalAnsibleDslParser.g:3282:4: ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3282:4: ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3283:5: {...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalAnsibleDslParser.g:3283:106: ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:3284:6: ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 11);
            	    // InternalAnsibleDslParser.g:3287:9: ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) )
            	    // InternalAnsibleDslParser.g:3287:10: {...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3287:19: ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) )
            	    // InternalAnsibleDslParser.g:3287:20: (lv_exe_settings_25_0= ruleEExecutionExeSettings )
            	    {
            	    // InternalAnsibleDslParser.g:3287:20: (lv_exe_settings_25_0= ruleEExecutionExeSettings )
            	    // InternalAnsibleDslParser.g:3288:10: lv_exe_settings_25_0= ruleEExecutionExeSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getExe_settingsEExecutionExeSettingsParserRuleCall_3_11_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_exe_settings_25_0=ruleEExecutionExeSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"exe_settings",
            	      											lv_exe_settings_25_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EExecutionExeSettings");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalAnsibleDslParser.g:3310:4: ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3310:4: ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3311:5: {...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalAnsibleDslParser.g:3311:106: ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) )
            	    // InternalAnsibleDslParser.g:3312:6: ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 12);
            	    // InternalAnsibleDslParser.g:3315:9: ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) )
            	    // InternalAnsibleDslParser.g:3315:10: {...}? => ( (lv_delegation_26_0= ruleEDelegation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3315:19: ( (lv_delegation_26_0= ruleEDelegation ) )
            	    // InternalAnsibleDslParser.g:3315:20: (lv_delegation_26_0= ruleEDelegation )
            	    {
            	    // InternalAnsibleDslParser.g:3315:20: (lv_delegation_26_0= ruleEDelegation )
            	    // InternalAnsibleDslParser.g:3316:10: lv_delegation_26_0= ruleEDelegation
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getDelegationEDelegationParserRuleCall_3_12_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_delegation_26_0=ruleEDelegation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"delegation",
            	      											lv_delegation_26_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EDelegation");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalAnsibleDslParser.g:3338:4: ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3338:4: ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3339:5: {...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalAnsibleDslParser.g:3339:106: ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3340:6: ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 13);
            	    // InternalAnsibleDslParser.g:3343:9: ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) )
            	    // InternalAnsibleDslParser.g:3343:10: {...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3343:19: (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) )
            	    // InternalAnsibleDslParser.g:3343:20: otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) )
            	    {
            	    otherlv_27=(Token)match(input,When,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getEHandlerAccess().getWhenKeyword_3_13_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3347:9: ( (lv_when_expression_28_0= ruleECondition ) )
            	    // InternalAnsibleDslParser.g:3348:10: (lv_when_expression_28_0= ruleECondition )
            	    {
            	    // InternalAnsibleDslParser.g:3348:10: (lv_when_expression_28_0= ruleECondition )
            	    // InternalAnsibleDslParser.g:3349:11: lv_when_expression_28_0= ruleECondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getWhen_expressionEConditionParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_when_expression_28_0=ruleECondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"when_expression",
            	      												lv_when_expression_28_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECondition");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalAnsibleDslParser.g:3372:4: ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3372:4: ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3373:5: {...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalAnsibleDslParser.g:3373:106: ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) )
            	    // InternalAnsibleDslParser.g:3374:6: ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 14);
            	    // InternalAnsibleDslParser.g:3377:9: ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) )
            	    // InternalAnsibleDslParser.g:3377:10: {...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3377:19: ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) )
            	    // InternalAnsibleDslParser.g:3377:20: (lv_error_handling_29_0= ruleETaskHandlerErrorHandling )
            	    {
            	    // InternalAnsibleDslParser.g:3377:20: (lv_error_handling_29_0= ruleETaskHandlerErrorHandling )
            	    // InternalAnsibleDslParser.g:3378:10: lv_error_handling_29_0= ruleETaskHandlerErrorHandling
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getError_handlingETaskHandlerErrorHandlingParserRuleCall_3_14_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_error_handling_29_0=ruleETaskHandlerErrorHandling();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"error_handling",
            	      											lv_error_handling_29_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.ETaskHandlerErrorHandling");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalAnsibleDslParser.g:3400:4: ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3400:4: ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3401:5: {...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalAnsibleDslParser.g:3401:106: ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3402:6: ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 15);
            	    // InternalAnsibleDslParser.g:3405:9: ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3405:10: {...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3405:19: (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:3405:20: otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) )
            	    {
            	    otherlv_30=(Token)match(input,Action,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_30, grammarAccess.getEHandlerAccess().getActionKeyword_3_15_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3409:9: ( (lv_action_31_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:3410:10: (lv_action_31_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:3410:10: (lv_action_31_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:3411:11: lv_action_31_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getActionEStringPassedParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_action_31_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"action",
            	      												lv_action_31_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalAnsibleDslParser.g:3434:4: ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3434:4: ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3435:5: {...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalAnsibleDslParser.g:3435:106: ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:3436:6: ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 16);
            	    // InternalAnsibleDslParser.g:3439:9: ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) )
            	    // InternalAnsibleDslParser.g:3439:10: {...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3439:19: ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) )
            	    // InternalAnsibleDslParser.g:3439:20: (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings )
            	    {
            	    // InternalAnsibleDslParser.g:3439:20: (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings )
            	    // InternalAnsibleDslParser.g:3440:10: lv_asynchronous_settings_32_0= ruleEAsynchronousSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getAsynchronous_settingsEAsynchronousSettingsParserRuleCall_3_16_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_asynchronous_settings_32_0=ruleEAsynchronousSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"asynchronous_settings",
            	      											lv_asynchronous_settings_32_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EAsynchronousSettings");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalAnsibleDslParser.g:3462:4: ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3462:4: ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3463:5: {...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalAnsibleDslParser.g:3463:106: ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3464:6: ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 17);
            	    // InternalAnsibleDslParser.g:3467:9: ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:3467:10: {...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3467:19: (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) )
            	    // InternalAnsibleDslParser.g:3467:20: otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) )
            	    {
            	    otherlv_33=(Token)match(input,Args,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_33, grammarAccess.getEHandlerAccess().getArgsKeyword_3_17_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3471:9: ( (lv_args_34_0= ruleEDictionaryPassed ) )
            	    // InternalAnsibleDslParser.g:3472:10: (lv_args_34_0= ruleEDictionaryPassed )
            	    {
            	    // InternalAnsibleDslParser.g:3472:10: (lv_args_34_0= ruleEDictionaryPassed )
            	    // InternalAnsibleDslParser.g:3473:11: lv_args_34_0= ruleEDictionaryPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getArgsEDictionaryPassedParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_args_34_0=ruleEDictionaryPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											set(
            	      												current,
            	      												"args",
            	      												lv_args_34_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalAnsibleDslParser.g:3496:4: ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3496:4: ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3497:5: {...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalAnsibleDslParser.g:3497:106: ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) )
            	    // InternalAnsibleDslParser.g:3498:6: ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 18);
            	    // InternalAnsibleDslParser.g:3501:9: ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) )
            	    // InternalAnsibleDslParser.g:3501:10: {...}? => ( (lv_module_35_0= ruleEModuleCall ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3501:19: ( (lv_module_35_0= ruleEModuleCall ) )
            	    // InternalAnsibleDslParser.g:3501:20: (lv_module_35_0= ruleEModuleCall )
            	    {
            	    // InternalAnsibleDslParser.g:3501:20: (lv_module_35_0= ruleEModuleCall )
            	    // InternalAnsibleDslParser.g:3502:10: lv_module_35_0= ruleEModuleCall
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getModuleEModuleCallParserRuleCall_3_18_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_module_35_0=ruleEModuleCall();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"module",
            	      											lv_module_35_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.EModuleCall");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalAnsibleDslParser.g:3524:4: ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3524:4: ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) )
            	    // InternalAnsibleDslParser.g:3525:5: {...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalAnsibleDslParser.g:3525:106: ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) )
            	    // InternalAnsibleDslParser.g:3526:6: ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 19);
            	    // InternalAnsibleDslParser.g:3529:9: ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) )
            	    // InternalAnsibleDslParser.g:3529:10: {...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3529:19: (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* )
            	    // InternalAnsibleDslParser.g:3529:20: otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )*
            	    {
            	    otherlv_36=(Token)match(input,Notify,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getEHandlerAccess().getNotifyKeyword_3_19_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3533:9: ( (lv_notifiables_37_0= ruleENotifiable ) )
            	    // InternalAnsibleDslParser.g:3534:10: (lv_notifiables_37_0= ruleENotifiable )
            	    {
            	    // InternalAnsibleDslParser.g:3534:10: (lv_notifiables_37_0= ruleENotifiable )
            	    // InternalAnsibleDslParser.g:3535:11: lv_notifiables_37_0= ruleENotifiable
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEHandlerAccess().getNotifiablesENotifiableParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_notifiables_37_0=ruleENotifiable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      											}
            	      											add(
            	      												current,
            	      												"notifiables",
            	      												lv_notifiables_37_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENotifiable");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalAnsibleDslParser.g:3552:9: (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )*
            	    loop23:
            	    do {
            	        int alt23=2;
            	        int LA23_0 = input.LA(1);

            	        if ( (LA23_0==Comma) ) {
            	            alt23=1;
            	        }


            	        switch (alt23) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:3553:10: otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) )
            	    	    {
            	    	    otherlv_38=(Token)match(input,Comma,FOLLOW_32); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_38, grammarAccess.getEHandlerAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalAnsibleDslParser.g:3557:10: ( (lv_notifiables_39_0= ruleENotifiable ) )
            	    	    // InternalAnsibleDslParser.g:3558:11: (lv_notifiables_39_0= ruleENotifiable )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:3558:11: (lv_notifiables_39_0= ruleENotifiable )
            	    	    // InternalAnsibleDslParser.g:3559:12: lv_notifiables_39_0= ruleENotifiable
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getEHandlerAccess().getNotifiablesENotifiableParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_36);
            	    	    lv_notifiables_39_0=ruleENotifiable();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"notifiables",
            	    	      													lv_notifiables_39_0,
            	    	      													"org.sodalite.sdl.ansible.AnsibleDsl.ENotifiable");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop23;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalAnsibleDslParser.g:3583:4: ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3583:4: ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3584:5: {...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalAnsibleDslParser.g:3584:106: ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) )
            	    // InternalAnsibleDslParser.g:3585:6: ({...}? => ( (lv_loop_40_0= ruleELoop ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 20);
            	    // InternalAnsibleDslParser.g:3588:9: ({...}? => ( (lv_loop_40_0= ruleELoop ) ) )
            	    // InternalAnsibleDslParser.g:3588:10: {...}? => ( (lv_loop_40_0= ruleELoop ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3588:19: ( (lv_loop_40_0= ruleELoop ) )
            	    // InternalAnsibleDslParser.g:3588:20: (lv_loop_40_0= ruleELoop )
            	    {
            	    // InternalAnsibleDslParser.g:3588:20: (lv_loop_40_0= ruleELoop )
            	    // InternalAnsibleDslParser.g:3589:10: lv_loop_40_0= ruleELoop
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getLoopELoopParserRuleCall_3_20_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_loop_40_0=ruleELoop();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"loop",
            	      											lv_loop_40_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.ELoop");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalAnsibleDslParser.g:3611:4: ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3611:4: ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) )
            	    // InternalAnsibleDslParser.g:3612:5: {...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalAnsibleDslParser.g:3612:106: ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) )
            	    // InternalAnsibleDslParser.g:3613:6: ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 21);
            	    // InternalAnsibleDslParser.g:3616:9: ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) )
            	    // InternalAnsibleDslParser.g:3616:10: {...}? => ( (lv_register_41_0= ruleERegisterVariable ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3616:19: ( (lv_register_41_0= ruleERegisterVariable ) )
            	    // InternalAnsibleDslParser.g:3616:20: (lv_register_41_0= ruleERegisterVariable )
            	    {
            	    // InternalAnsibleDslParser.g:3616:20: (lv_register_41_0= ruleERegisterVariable )
            	    // InternalAnsibleDslParser.g:3617:10: lv_register_41_0= ruleERegisterVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getEHandlerAccess().getRegisterERegisterVariableParserRuleCall_3_21_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_register_41_0=ruleERegisterVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getEHandlerRule());
            	      										}
            	      										set(
            	      											current,
            	      											"register",
            	      											lv_register_41_0,
            	      											"org.sodalite.sdl.ansible.AnsibleDsl.ERegisterVariable");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalAnsibleDslParser.g:3639:4: ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:3639:4: ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) )
            	    // InternalAnsibleDslParser.g:3640:5: {...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalAnsibleDslParser.g:3640:106: ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) )
            	    // InternalAnsibleDslParser.g:3641:6: ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 22);
            	    // InternalAnsibleDslParser.g:3644:9: ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) )
            	    // InternalAnsibleDslParser.g:3644:10: {...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEHandler", "true");
            	    }
            	    // InternalAnsibleDslParser.g:3644:19: (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* )
            	    // InternalAnsibleDslParser.g:3644:20: otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )*
            	    {
            	    otherlv_42=(Token)match(input,Listen,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_42, grammarAccess.getEHandlerAccess().getListenKeyword_3_22_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:3648:9: ( (otherlv_43= RULE_STRING ) )
            	    // InternalAnsibleDslParser.g:3649:10: (otherlv_43= RULE_STRING )
            	    {
            	    // InternalAnsibleDslParser.g:3649:10: (otherlv_43= RULE_STRING )
            	    // InternalAnsibleDslParser.g:3650:11: otherlv_43= RULE_STRING
            	    {
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getEHandlerRule());
            	      											}
            	      										
            	    }
            	    otherlv_43=(Token)match(input,RULE_STRING,FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(otherlv_43, grammarAccess.getEHandlerAccess().getListen_toENotifiedTopicCrossReference_3_22_1_0());
            	      										
            	    }

            	    }


            	    }

            	    // InternalAnsibleDslParser.g:3661:9: (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )*
            	    loop24:
            	    do {
            	        int alt24=2;
            	        int LA24_0 = input.LA(1);

            	        if ( (LA24_0==Comma) ) {
            	            alt24=1;
            	        }


            	        switch (alt24) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:3662:10: otherlv_44= Comma ( (otherlv_45= RULE_STRING ) )
            	    	    {
            	    	    otherlv_44=(Token)match(input,Comma,FOLLOW_3); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_44, grammarAccess.getEHandlerAccess().getCommaKeyword_3_22_2_0());
            	    	      									
            	    	    }
            	    	    // InternalAnsibleDslParser.g:3666:10: ( (otherlv_45= RULE_STRING ) )
            	    	    // InternalAnsibleDslParser.g:3667:11: (otherlv_45= RULE_STRING )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:3667:11: (otherlv_45= RULE_STRING )
            	    	    // InternalAnsibleDslParser.g:3668:12: otherlv_45= RULE_STRING
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElement(grammarAccess.getEHandlerRule());
            	    	      												}
            	    	      											
            	    	    }
            	    	    otherlv_45=(Token)match(input,RULE_STRING,FOLLOW_36); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												newLeafNode(otherlv_45, grammarAccess.getEHandlerAccess().getListen_toENotifiedTopicCrossReference_3_22_2_1_0());
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop24;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt25 >= 1 ) break loop25;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(25, input);
                        throw eee;
                }
                cnt25++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getEHandlerAccess().getUnorderedGroup_3()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleEHandler", "getUnorderedGroupHelper().canLeave(grammarAccess.getEHandlerAccess().getUnorderedGroup_3())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEHandlerAccess().getUnorderedGroup_3());

            }

            this_END_46=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_46, grammarAccess.getEHandlerAccess().getENDTerminalRuleCall_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEHandler"


    // $ANTLR start "entryRuleEModuleCall"
    // InternalAnsibleDslParser.g:3702:1: entryRuleEModuleCall returns [EObject current=null] : iv_ruleEModuleCall= ruleEModuleCall EOF ;
    public final EObject entryRuleEModuleCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEModuleCall = null;


        try {
            // InternalAnsibleDslParser.g:3702:52: (iv_ruleEModuleCall= ruleEModuleCall EOF )
            // InternalAnsibleDslParser.g:3703:2: iv_ruleEModuleCall= ruleEModuleCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEModuleCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEModuleCall=ruleEModuleCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEModuleCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEModuleCall"


    // $ANTLR start "ruleEModuleCall"
    // InternalAnsibleDslParser.g:3709:1: ruleEModuleCall returns [EObject current=null] : (otherlv_0= Module ( (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_2= FullStop ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )? )? (this_BEGIN_6= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) ) this_END_14= RULE_END )? ) ;
    public final EObject ruleEModuleCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token this_BEGIN_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token this_BEGIN_11=null;
        Token this_END_13=null;
        Token this_END_14=null;
        EObject lv_firstPart_1_0 = null;

        EObject lv_secondPart_3_0 = null;

        EObject lv_thirdPart_5_0 = null;

        EObject lv_direct_parameter_9_0 = null;

        EObject lv_parameters_12_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:3715:2: ( (otherlv_0= Module ( (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_2= FullStop ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )? )? (this_BEGIN_6= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) ) this_END_14= RULE_END )? ) )
            // InternalAnsibleDslParser.g:3716:2: (otherlv_0= Module ( (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_2= FullStop ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )? )? (this_BEGIN_6= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) ) this_END_14= RULE_END )? )
            {
            // InternalAnsibleDslParser.g:3716:2: (otherlv_0= Module ( (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_2= FullStop ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )? )? (this_BEGIN_6= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) ) this_END_14= RULE_END )? )
            // InternalAnsibleDslParser.g:3717:3: otherlv_0= Module ( (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_2= FullStop ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )? )? (this_BEGIN_6= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) ) this_END_14= RULE_END )?
            {
            otherlv_0=(Token)match(input,Module,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEModuleCallAccess().getModuleKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:3721:3: ( (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed ) )
            // InternalAnsibleDslParser.g:3722:4: (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed )
            {
            // InternalAnsibleDslParser.g:3722:4: (lv_firstPart_1_0= ruleEStringWithoutQuotesPassed )
            // InternalAnsibleDslParser.g:3723:5: lv_firstPart_1_0= ruleEStringWithoutQuotesPassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEModuleCallAccess().getFirstPartEStringWithoutQuotesPassedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_firstPart_1_0=ruleEStringWithoutQuotesPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEModuleCallRule());
              					}
              					set(
              						current,
              						"firstPart",
              						lv_firstPart_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EStringWithoutQuotesPassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:3740:3: (otherlv_2= FullStop ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )? )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==FullStop) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalAnsibleDslParser.g:3741:4: otherlv_2= FullStop ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )?
                    {
                    otherlv_2=(Token)match(input,FullStop,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEModuleCallAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:3745:4: ( (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed ) )
                    // InternalAnsibleDslParser.g:3746:5: (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed )
                    {
                    // InternalAnsibleDslParser.g:3746:5: (lv_secondPart_3_0= ruleEStringWithoutQuotesPassed )
                    // InternalAnsibleDslParser.g:3747:6: lv_secondPart_3_0= ruleEStringWithoutQuotesPassed
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEModuleCallAccess().getSecondPartEStringWithoutQuotesPassedParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_secondPart_3_0=ruleEStringWithoutQuotesPassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEModuleCallRule());
                      						}
                      						set(
                      							current,
                      							"secondPart",
                      							lv_secondPart_3_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EStringWithoutQuotesPassed");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:3764:4: (otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) ) )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==FullStop) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalAnsibleDslParser.g:3765:5: otherlv_4= FullStop ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) )
                            {
                            otherlv_4=(Token)match(input,FullStop,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getEModuleCallAccess().getFullStopKeyword_2_2_0());
                              				
                            }
                            // InternalAnsibleDslParser.g:3769:5: ( (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed ) )
                            // InternalAnsibleDslParser.g:3770:6: (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed )
                            {
                            // InternalAnsibleDslParser.g:3770:6: (lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed )
                            // InternalAnsibleDslParser.g:3771:7: lv_thirdPart_5_0= ruleEStringWithoutQuotesPassed
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getEModuleCallAccess().getThirdPartEStringWithoutQuotesPassedParserRuleCall_2_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_39);
                            lv_thirdPart_5_0=ruleEStringWithoutQuotesPassed();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getEModuleCallRule());
                              							}
                              							set(
                              								current,
                              								"thirdPart",
                              								lv_thirdPart_5_0,
                              								"org.sodalite.sdl.ansible.AnsibleDsl.EStringWithoutQuotesPassed");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalAnsibleDslParser.g:3790:3: (this_BEGIN_6= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) ) this_END_14= RULE_END )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_BEGIN) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalAnsibleDslParser.g:3791:4: this_BEGIN_6= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) ) this_END_14= RULE_END
                    {
                    this_BEGIN_6=(Token)match(input,RULE_BEGIN,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BEGIN_6, grammarAccess.getEModuleCallAccess().getBEGINTerminalRuleCall_3_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:3795:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) ) )
                    // InternalAnsibleDslParser.g:3796:5: ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) )
                    {
                    // InternalAnsibleDslParser.g:3796:5: ( ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* ) )
                    // InternalAnsibleDslParser.g:3797:6: ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1());
                    // InternalAnsibleDslParser.g:3800:6: ( ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )* )
                    // InternalAnsibleDslParser.g:3801:7: ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )*
                    {
                    // InternalAnsibleDslParser.g:3801:7: ( ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) ) )*
                    loop29:
                    do {
                        int alt29=3;
                        int LA29_0 = input.LA(1);

                        if ( LA29_0 == Direct_parameter && getUnorderedGroupHelper().canSelect(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 0) ) {
                            alt29=1;
                        }
                        else if ( LA29_0 == Parameters && getUnorderedGroupHelper().canSelect(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 1) ) {
                            alt29=2;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalAnsibleDslParser.g:3802:5: ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) )
                    	    {
                    	    // InternalAnsibleDslParser.g:3802:5: ({...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) ) )
                    	    // InternalAnsibleDslParser.g:3803:6: {...}? => ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleEModuleCall", "getUnorderedGroupHelper().canSelect(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 0)");
                    	    }
                    	    // InternalAnsibleDslParser.g:3803:111: ( ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) ) )
                    	    // InternalAnsibleDslParser.g:3804:7: ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 0);
                    	    // InternalAnsibleDslParser.g:3807:10: ({...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) ) )
                    	    // InternalAnsibleDslParser.g:3807:11: {...}? => (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleEModuleCall", "true");
                    	    }
                    	    // InternalAnsibleDslParser.g:3807:20: (otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) ) )
                    	    // InternalAnsibleDslParser.g:3807:21: otherlv_8= Direct_parameter ( (lv_direct_parameter_9_0= ruleEValuePassed ) )
                    	    {
                    	    otherlv_8=(Token)match(input,Direct_parameter,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_8, grammarAccess.getEModuleCallAccess().getDirect_parameterKeyword_3_1_0_0());
                    	      									
                    	    }
                    	    // InternalAnsibleDslParser.g:3811:10: ( (lv_direct_parameter_9_0= ruleEValuePassed ) )
                    	    // InternalAnsibleDslParser.g:3812:11: (lv_direct_parameter_9_0= ruleEValuePassed )
                    	    {
                    	    // InternalAnsibleDslParser.g:3812:11: (lv_direct_parameter_9_0= ruleEValuePassed )
                    	    // InternalAnsibleDslParser.g:3813:12: lv_direct_parameter_9_0= ruleEValuePassed
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getEModuleCallAccess().getDirect_parameterEValuePassedParserRuleCall_3_1_0_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_direct_parameter_9_0=ruleEValuePassed();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getEModuleCallRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"direct_parameter",
                    	      													lv_direct_parameter_9_0,
                    	      													"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalAnsibleDslParser.g:3836:5: ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) )
                    	    {
                    	    // InternalAnsibleDslParser.g:3836:5: ({...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) ) )
                    	    // InternalAnsibleDslParser.g:3837:6: {...}? => ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleEModuleCall", "getUnorderedGroupHelper().canSelect(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 1)");
                    	    }
                    	    // InternalAnsibleDslParser.g:3837:111: ( ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) ) )
                    	    // InternalAnsibleDslParser.g:3838:7: ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1(), 1);
                    	    // InternalAnsibleDslParser.g:3841:10: ({...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END ) )
                    	    // InternalAnsibleDslParser.g:3841:11: {...}? => (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleEModuleCall", "true");
                    	    }
                    	    // InternalAnsibleDslParser.g:3841:20: (otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END )
                    	    // InternalAnsibleDslParser.g:3841:21: otherlv_10= Parameters this_BEGIN_11= RULE_BEGIN ( (lv_parameters_12_0= ruleEParameter ) )+ this_END_13= RULE_END
                    	    {
                    	    otherlv_10=(Token)match(input,Parameters,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_10, grammarAccess.getEModuleCallAccess().getParametersKeyword_3_1_1_0());
                    	      									
                    	    }
                    	    this_BEGIN_11=(Token)match(input,RULE_BEGIN,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(this_BEGIN_11, grammarAccess.getEModuleCallAccess().getBEGINTerminalRuleCall_3_1_1_1());
                    	      									
                    	    }
                    	    // InternalAnsibleDslParser.g:3849:10: ( (lv_parameters_12_0= ruleEParameter ) )+
                    	    int cnt28=0;
                    	    loop28:
                    	    do {
                    	        int alt28=2;
                    	        int LA28_0 = input.LA(1);

                    	        if ( (LA28_0==RULE_ID) ) {
                    	            alt28=1;
                    	        }


                    	        switch (alt28) {
                    	    	case 1 :
                    	    	    // InternalAnsibleDslParser.g:3850:11: (lv_parameters_12_0= ruleEParameter )
                    	    	    {
                    	    	    // InternalAnsibleDslParser.g:3850:11: (lv_parameters_12_0= ruleEParameter )
                    	    	    // InternalAnsibleDslParser.g:3851:12: lv_parameters_12_0= ruleEParameter
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      												newCompositeNode(grammarAccess.getEModuleCallAccess().getParametersEParameterParserRuleCall_3_1_1_2_0());
                    	    	      											
                    	    	    }
                    	    	    pushFollow(FOLLOW_21);
                    	    	    lv_parameters_12_0=ruleEParameter();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      												if (current==null) {
                    	    	      													current = createModelElementForParent(grammarAccess.getEModuleCallRule());
                    	    	      												}
                    	    	      												add(
                    	    	      													current,
                    	    	      													"parameters",
                    	    	      													lv_parameters_12_0,
                    	    	      													"org.sodalite.sdl.ansible.AnsibleDsl.EParameter");
                    	    	      												afterParserOrEnumRuleCall();
                    	    	      											
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    if ( cnt28 >= 1 ) break loop28;
                    	    	    if (state.backtracking>0) {state.failed=true; return current;}
                    	                EarlyExitException eee =
                    	                    new EarlyExitException(28, input);
                    	                throw eee;
                    	        }
                    	        cnt28++;
                    	    } while (true);

                    	    this_END_13=(Token)match(input,RULE_END,FOLLOW_40); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(this_END_13, grammarAccess.getEModuleCallAccess().getENDTerminalRuleCall_3_1_1_3());
                    	      									
                    	    }

                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getEModuleCallAccess().getUnorderedGroup_3_1());

                    }

                    this_END_14=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_END_14, grammarAccess.getEModuleCallAccess().getENDTerminalRuleCall_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEModuleCall"


    // $ANTLR start "entryRuleEParameter"
    // InternalAnsibleDslParser.g:3894:1: entryRuleEParameter returns [EObject current=null] : iv_ruleEParameter= ruleEParameter EOF ;
    public final EObject entryRuleEParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEParameter = null;


        try {
            // InternalAnsibleDslParser.g:3894:51: (iv_ruleEParameter= ruleEParameter EOF )
            // InternalAnsibleDslParser.g:3895:2: iv_ruleEParameter= ruleEParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEParameter=ruleEParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEParameter"


    // $ANTLR start "ruleEParameter"
    // InternalAnsibleDslParser.g:3901:1: ruleEParameter returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) ) ;
    public final EObject ruleEParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:3907:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) ) )
            // InternalAnsibleDslParser.g:3908:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) )
            {
            // InternalAnsibleDslParser.g:3908:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) )
            // InternalAnsibleDslParser.g:3909:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) )
            {
            // InternalAnsibleDslParser.g:3909:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:3910:4: (lv_name_0_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:3910:4: (lv_name_0_0= RULE_ID )
            // InternalAnsibleDslParser.g:3911:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getEParameterAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEParameterAccess().getColonKeyword_1());
              		
            }
            // InternalAnsibleDslParser.g:3931:3: ( (lv_value_2_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:3932:4: (lv_value_2_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:3932:4: (lv_value_2_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:3933:5: lv_value_2_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEParameterAccess().getValueEValuePassedParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEParameterRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEParameter"


    // $ANTLR start "entryRuleERoleInclusion"
    // InternalAnsibleDslParser.g:3954:1: entryRuleERoleInclusion returns [EObject current=null] : iv_ruleERoleInclusion= ruleERoleInclusion EOF ;
    public final EObject entryRuleERoleInclusion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleERoleInclusion = null;


        try {
            // InternalAnsibleDslParser.g:3954:55: (iv_ruleERoleInclusion= ruleERoleInclusion EOF )
            // InternalAnsibleDslParser.g:3955:2: iv_ruleERoleInclusion= ruleERoleInclusion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getERoleInclusionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleERoleInclusion=ruleERoleInclusion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleERoleInclusion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleERoleInclusion"


    // $ANTLR start "ruleERoleInclusion"
    // InternalAnsibleDslParser.g:3961:1: ruleERoleInclusion returns [EObject current=null] : (otherlv_0= Role this_BEGIN_1= RULE_BEGIN (otherlv_2= Role_name ( (lv_name_3_0= ruleERoleName ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) ) ) this_END_29= RULE_END ) ;
    public final EObject ruleERoleInclusion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token this_BEGIN_21=null;
        Token this_END_23=null;
        Token otherlv_26=null;
        Token this_END_29=null;
        EObject lv_name_3_0 = null;

        EObject lv_privilege_escalation_5_0 = null;

        EObject lv_validation_mode_6_0 = null;

        EObject lv_connection_7_0 = null;

        EObject lv_no_log_9_0 = null;

        EObject lv_debugger_11_0 = null;

        EObject lv_module_defaults_13_0 = null;

        EObject lv_environment_15_0 = null;

        EObject lv_collections_17_0 = null;

        EObject lv_tags_19_0 = null;

        EObject lv_variable_declarations_22_0 = null;

        EObject lv_exe_settings_24_0 = null;

        EObject lv_delegation_25_0 = null;

        EObject lv_when_expression_27_0 = null;

        EObject lv_error_handling_28_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:3967:2: ( (otherlv_0= Role this_BEGIN_1= RULE_BEGIN (otherlv_2= Role_name ( (lv_name_3_0= ruleERoleName ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) ) ) this_END_29= RULE_END ) )
            // InternalAnsibleDslParser.g:3968:2: (otherlv_0= Role this_BEGIN_1= RULE_BEGIN (otherlv_2= Role_name ( (lv_name_3_0= ruleERoleName ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) ) ) this_END_29= RULE_END )
            {
            // InternalAnsibleDslParser.g:3968:2: (otherlv_0= Role this_BEGIN_1= RULE_BEGIN (otherlv_2= Role_name ( (lv_name_3_0= ruleERoleName ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) ) ) this_END_29= RULE_END )
            // InternalAnsibleDslParser.g:3969:3: otherlv_0= Role this_BEGIN_1= RULE_BEGIN (otherlv_2= Role_name ( (lv_name_3_0= ruleERoleName ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) ) ) this_END_29= RULE_END
            {
            otherlv_0=(Token)match(input,Role,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getERoleInclusionAccess().getRoleKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getERoleInclusionAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:3977:3: (otherlv_2= Role_name ( (lv_name_3_0= ruleERoleName ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) ) )
            // InternalAnsibleDslParser.g:3978:4: otherlv_2= Role_name ( (lv_name_3_0= ruleERoleName ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) )
            {
            otherlv_2=(Token)match(input,Role_name,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getERoleInclusionAccess().getRole_nameKeyword_2_0());
              			
            }
            // InternalAnsibleDslParser.g:3982:4: ( (lv_name_3_0= ruleERoleName ) )
            // InternalAnsibleDslParser.g:3983:5: (lv_name_3_0= ruleERoleName )
            {
            // InternalAnsibleDslParser.g:3983:5: (lv_name_3_0= ruleERoleName )
            // InternalAnsibleDslParser.g:3984:6: lv_name_3_0= ruleERoleName
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getERoleInclusionAccess().getNameERoleNameParserRuleCall_2_1_0());
              					
            }
            pushFollow(FOLLOW_44);
            lv_name_3_0=ruleERoleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
              						}
              						set(
              							current,
              							"name",
              							lv_name_3_0,
              							"org.sodalite.sdl.ansible.AnsibleDsl.ERoleName");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalAnsibleDslParser.g:4001:4: ( ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:4002:5: ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:4002:5: ( ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:4003:6: ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());
            // InternalAnsibleDslParser.g:4006:6: ( ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:4007:7: ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:4007:7: ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )*
            loop32:
            do {
                int alt32=15;
                alt32 = dfa32.predict(input);
                switch (alt32) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:4008:5: ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4008:5: ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4009:6: {...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:4009:114: ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) )
            	    // InternalAnsibleDslParser.g:4010:7: ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 0);
            	    // InternalAnsibleDslParser.g:4013:10: ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) )
            	    // InternalAnsibleDslParser.g:4013:11: {...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4013:20: ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) )
            	    // InternalAnsibleDslParser.g:4013:21: (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation )
            	    {
            	    // InternalAnsibleDslParser.g:4013:21: (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation )
            	    // InternalAnsibleDslParser.g:4014:11: lv_privilege_escalation_5_0= ruleEPrivilegeEscalation
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getERoleInclusionAccess().getPrivilege_escalationEPrivilegeEscalationParserRuleCall_2_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_privilege_escalation_5_0=ruleEPrivilegeEscalation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"privilege_escalation",
            	      												lv_privilege_escalation_5_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EPrivilegeEscalation");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:4036:5: ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4036:5: ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4037:6: {...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:4037:114: ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) )
            	    // InternalAnsibleDslParser.g:4038:7: ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 1);
            	    // InternalAnsibleDslParser.g:4041:10: ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) )
            	    // InternalAnsibleDslParser.g:4041:11: {...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4041:20: ( (lv_validation_mode_6_0= ruleEValidationMode ) )
            	    // InternalAnsibleDslParser.g:4041:21: (lv_validation_mode_6_0= ruleEValidationMode )
            	    {
            	    // InternalAnsibleDslParser.g:4041:21: (lv_validation_mode_6_0= ruleEValidationMode )
            	    // InternalAnsibleDslParser.g:4042:11: lv_validation_mode_6_0= ruleEValidationMode
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getERoleInclusionAccess().getValidation_modeEValidationModeParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_validation_mode_6_0=ruleEValidationMode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"validation_mode",
            	      												lv_validation_mode_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValidationMode");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:4064:5: ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4064:5: ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4065:6: {...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:4065:114: ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) )
            	    // InternalAnsibleDslParser.g:4066:7: ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 2);
            	    // InternalAnsibleDslParser.g:4069:10: ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) )
            	    // InternalAnsibleDslParser.g:4069:11: {...}? => ( (lv_connection_7_0= ruleEConnection ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4069:20: ( (lv_connection_7_0= ruleEConnection ) )
            	    // InternalAnsibleDslParser.g:4069:21: (lv_connection_7_0= ruleEConnection )
            	    {
            	    // InternalAnsibleDslParser.g:4069:21: (lv_connection_7_0= ruleEConnection )
            	    // InternalAnsibleDslParser.g:4070:11: lv_connection_7_0= ruleEConnection
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getERoleInclusionAccess().getConnectionEConnectionParserRuleCall_2_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_connection_7_0=ruleEConnection();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"connection",
            	      												lv_connection_7_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EConnection");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:4092:5: ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4092:5: ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4093:6: {...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:4093:114: ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4094:7: ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 3);
            	    // InternalAnsibleDslParser.g:4097:10: ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4097:11: {...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4097:20: (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:4097:21: otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_8=(Token)match(input,No_log,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_8, grammarAccess.getERoleInclusionAccess().getNo_logKeyword_2_2_3_0());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4101:10: ( (lv_no_log_9_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:4102:11: (lv_no_log_9_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:4102:11: (lv_no_log_9_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:4103:12: lv_no_log_9_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getNo_logEBooleanPassedParserRuleCall_2_2_3_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_no_log_9_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      												}
            	      												set(
            	      													current,
            	      													"no_log",
            	      													lv_no_log_9_0,
            	      													"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:4126:5: ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4126:5: ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4127:6: {...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:4127:114: ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4128:7: ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 4);
            	    // InternalAnsibleDslParser.g:4131:10: ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4131:11: {...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4131:20: (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:4131:21: otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) )
            	    {
            	    otherlv_10=(Token)match(input,Debugger,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_10, grammarAccess.getERoleInclusionAccess().getDebuggerKeyword_2_2_4_0());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4135:10: ( (lv_debugger_11_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:4136:11: (lv_debugger_11_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:4136:11: (lv_debugger_11_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:4137:12: lv_debugger_11_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getDebuggerEStringPassedParserRuleCall_2_2_4_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_debugger_11_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      												}
            	      												set(
            	      													current,
            	      													"debugger",
            	      													lv_debugger_11_0,
            	      													"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalAnsibleDslParser.g:4160:5: ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4160:5: ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4161:6: {...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 5)");
            	    }
            	    // InternalAnsibleDslParser.g:4161:114: ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4162:7: ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 5);
            	    // InternalAnsibleDslParser.g:4165:10: ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4165:11: {...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4165:20: (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:4165:21: otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) )
            	    {
            	    otherlv_12=(Token)match(input,Module_defaults,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_12, grammarAccess.getERoleInclusionAccess().getModule_defaultsKeyword_2_2_5_0());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4169:10: ( (lv_module_defaults_13_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:4170:11: (lv_module_defaults_13_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:4170:11: (lv_module_defaults_13_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:4171:12: lv_module_defaults_13_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getModule_defaultsEValuePassedParserRuleCall_2_2_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_module_defaults_13_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      												}
            	      												set(
            	      													current,
            	      													"module_defaults",
            	      													lv_module_defaults_13_0,
            	      													"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalAnsibleDslParser.g:4194:5: ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4194:5: ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4195:6: {...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 6)");
            	    }
            	    // InternalAnsibleDslParser.g:4195:114: ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4196:7: ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 6);
            	    // InternalAnsibleDslParser.g:4199:10: ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4199:11: {...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4199:20: (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:4199:21: otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) )
            	    {
            	    otherlv_14=(Token)match(input,Environment,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_14, grammarAccess.getERoleInclusionAccess().getEnvironmentKeyword_2_2_6_0());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4203:10: ( (lv_environment_15_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:4204:11: (lv_environment_15_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:4204:11: (lv_environment_15_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:4205:12: lv_environment_15_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getEnvironmentEValuePassedParserRuleCall_2_2_6_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_environment_15_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      												}
            	      												set(
            	      													current,
            	      													"environment",
            	      													lv_environment_15_0,
            	      													"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalAnsibleDslParser.g:4228:5: ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4228:5: ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4229:6: {...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 7)");
            	    }
            	    // InternalAnsibleDslParser.g:4229:114: ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4230:7: ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 7);
            	    // InternalAnsibleDslParser.g:4233:10: ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4233:11: {...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4233:20: (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) )
            	    // InternalAnsibleDslParser.g:4233:21: otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) )
            	    {
            	    otherlv_16=(Token)match(input,Collections,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_16, grammarAccess.getERoleInclusionAccess().getCollectionsKeyword_2_2_7_0());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4237:10: ( (lv_collections_17_0= ruleECollectionListPassed ) )
            	    // InternalAnsibleDslParser.g:4238:11: (lv_collections_17_0= ruleECollectionListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:4238:11: (lv_collections_17_0= ruleECollectionListPassed )
            	    // InternalAnsibleDslParser.g:4239:12: lv_collections_17_0= ruleECollectionListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getCollectionsECollectionListPassedParserRuleCall_2_2_7_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_collections_17_0=ruleECollectionListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      												}
            	      												set(
            	      													current,
            	      													"collections",
            	      													lv_collections_17_0,
            	      													"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionListPassed");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalAnsibleDslParser.g:4262:5: ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4262:5: ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4263:6: {...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 8)");
            	    }
            	    // InternalAnsibleDslParser.g:4263:114: ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4264:7: ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 8);
            	    // InternalAnsibleDslParser.g:4267:10: ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4267:11: {...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4267:20: (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) )
            	    // InternalAnsibleDslParser.g:4267:21: otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) )
            	    {
            	    otherlv_18=(Token)match(input,Tags_attribute,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_18, grammarAccess.getERoleInclusionAccess().getTags_attributeKeyword_2_2_8_0());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4271:10: ( (lv_tags_19_0= ruleEListPassed ) )
            	    // InternalAnsibleDslParser.g:4272:11: (lv_tags_19_0= ruleEListPassed )
            	    {
            	    // InternalAnsibleDslParser.g:4272:11: (lv_tags_19_0= ruleEListPassed )
            	    // InternalAnsibleDslParser.g:4273:12: lv_tags_19_0= ruleEListPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getTagsEListPassedParserRuleCall_2_2_8_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_tags_19_0=ruleEListPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      												}
            	      												set(
            	      													current,
            	      													"tags",
            	      													lv_tags_19_0,
            	      													"org.sodalite.sdl.ansible.AnsibleDsl.EListPassed");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalAnsibleDslParser.g:4296:5: ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4296:5: ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) )
            	    // InternalAnsibleDslParser.g:4297:6: {...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 9)");
            	    }
            	    // InternalAnsibleDslParser.g:4297:114: ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) )
            	    // InternalAnsibleDslParser.g:4298:7: ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 9);
            	    // InternalAnsibleDslParser.g:4301:10: ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) )
            	    // InternalAnsibleDslParser.g:4301:11: {...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4301:20: (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END )
            	    // InternalAnsibleDslParser.g:4301:21: otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END
            	    {
            	    otherlv_20=(Token)match(input,Vars,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_20, grammarAccess.getERoleInclusionAccess().getVarsKeyword_2_2_9_0());
            	      									
            	    }
            	    this_BEGIN_21=(Token)match(input,RULE_BEGIN,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(this_BEGIN_21, grammarAccess.getERoleInclusionAccess().getBEGINTerminalRuleCall_2_2_9_1());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4309:10: ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+
            	    int cnt31=0;
            	    loop31:
            	    do {
            	        int alt31=2;
            	        int LA31_0 = input.LA(1);

            	        if ( (LA31_0==RULE_ID) ) {
            	            alt31=1;
            	        }


            	        switch (alt31) {
            	    	case 1 :
            	    	    // InternalAnsibleDslParser.g:4310:11: (lv_variable_declarations_22_0= ruleEVariableDeclaration )
            	    	    {
            	    	    // InternalAnsibleDslParser.g:4310:11: (lv_variable_declarations_22_0= ruleEVariableDeclaration )
            	    	    // InternalAnsibleDslParser.g:4311:12: lv_variable_declarations_22_0= ruleEVariableDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getVariable_declarationsEVariableDeclarationParserRuleCall_2_2_9_2_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_21);
            	    	    lv_variable_declarations_22_0=ruleEVariableDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"variable_declarations",
            	    	      													lv_variable_declarations_22_0,
            	    	      													"org.sodalite.sdl.ansible.AnsibleDsl.EVariableDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt31 >= 1 ) break loop31;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(31, input);
            	                throw eee;
            	        }
            	        cnt31++;
            	    } while (true);

            	    this_END_23=(Token)match(input,RULE_END,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(this_END_23, grammarAccess.getERoleInclusionAccess().getENDTerminalRuleCall_2_2_9_3());
            	      									
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalAnsibleDslParser.g:4338:5: ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4338:5: ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4339:6: {...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 10)");
            	    }
            	    // InternalAnsibleDslParser.g:4339:115: ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) )
            	    // InternalAnsibleDslParser.g:4340:7: ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 10);
            	    // InternalAnsibleDslParser.g:4343:10: ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) )
            	    // InternalAnsibleDslParser.g:4343:11: {...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4343:20: ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) )
            	    // InternalAnsibleDslParser.g:4343:21: (lv_exe_settings_24_0= ruleEExecutionExeSettings )
            	    {
            	    // InternalAnsibleDslParser.g:4343:21: (lv_exe_settings_24_0= ruleEExecutionExeSettings )
            	    // InternalAnsibleDslParser.g:4344:11: lv_exe_settings_24_0= ruleEExecutionExeSettings
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getERoleInclusionAccess().getExe_settingsEExecutionExeSettingsParserRuleCall_2_2_10_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_exe_settings_24_0=ruleEExecutionExeSettings();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"exe_settings",
            	      												lv_exe_settings_24_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EExecutionExeSettings");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalAnsibleDslParser.g:4366:5: ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4366:5: ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4367:6: {...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 11)");
            	    }
            	    // InternalAnsibleDslParser.g:4367:115: ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) )
            	    // InternalAnsibleDslParser.g:4368:7: ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 11);
            	    // InternalAnsibleDslParser.g:4371:10: ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) )
            	    // InternalAnsibleDslParser.g:4371:11: {...}? => ( (lv_delegation_25_0= ruleEDelegation ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4371:20: ( (lv_delegation_25_0= ruleEDelegation ) )
            	    // InternalAnsibleDslParser.g:4371:21: (lv_delegation_25_0= ruleEDelegation )
            	    {
            	    // InternalAnsibleDslParser.g:4371:21: (lv_delegation_25_0= ruleEDelegation )
            	    // InternalAnsibleDslParser.g:4372:11: lv_delegation_25_0= ruleEDelegation
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getERoleInclusionAccess().getDelegationEDelegationParserRuleCall_2_2_11_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_delegation_25_0=ruleEDelegation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"delegation",
            	      												lv_delegation_25_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EDelegation");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalAnsibleDslParser.g:4394:5: ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4394:5: ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4395:6: {...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 12)");
            	    }
            	    // InternalAnsibleDslParser.g:4395:115: ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4396:7: ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 12);
            	    // InternalAnsibleDslParser.g:4399:10: ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) )
            	    // InternalAnsibleDslParser.g:4399:11: {...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4399:20: (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) )
            	    // InternalAnsibleDslParser.g:4399:21: otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) )
            	    {
            	    otherlv_26=(Token)match(input,When,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_26, grammarAccess.getERoleInclusionAccess().getWhenKeyword_2_2_12_0());
            	      									
            	    }
            	    // InternalAnsibleDslParser.g:4403:10: ( (lv_when_expression_27_0= ruleECondition ) )
            	    // InternalAnsibleDslParser.g:4404:11: (lv_when_expression_27_0= ruleECondition )
            	    {
            	    // InternalAnsibleDslParser.g:4404:11: (lv_when_expression_27_0= ruleECondition )
            	    // InternalAnsibleDslParser.g:4405:12: lv_when_expression_27_0= ruleECondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getERoleInclusionAccess().getWhen_expressionEConditionParserRuleCall_2_2_12_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_when_expression_27_0=ruleECondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      												}
            	      												set(
            	      													current,
            	      													"when_expression",
            	      													lv_when_expression_27_0,
            	      													"org.sodalite.sdl.ansible.AnsibleDsl.ECondition");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalAnsibleDslParser.g:4428:5: ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4428:5: ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4429:6: {...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 13)");
            	    }
            	    // InternalAnsibleDslParser.g:4429:115: ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) )
            	    // InternalAnsibleDslParser.g:4430:7: ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 13);
            	    // InternalAnsibleDslParser.g:4433:10: ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) )
            	    // InternalAnsibleDslParser.g:4433:11: {...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleERoleInclusion", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4433:20: ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) )
            	    // InternalAnsibleDslParser.g:4433:21: (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling )
            	    {
            	    // InternalAnsibleDslParser.g:4433:21: (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling )
            	    // InternalAnsibleDslParser.g:4434:11: lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getERoleInclusionAccess().getError_handlingEBlockAndRoleErrorHandlingParserRuleCall_2_2_13_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_error_handling_28_0=ruleEBlockAndRoleErrorHandling();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getERoleInclusionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"error_handling",
            	      												lv_error_handling_28_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBlockAndRoleErrorHandling");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2());

            }


            }

            this_END_29=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_29, grammarAccess.getERoleInclusionAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleERoleInclusion"


    // $ANTLR start "entryRuleERoleName"
    // InternalAnsibleDslParser.g:4472:1: entryRuleERoleName returns [EObject current=null] : iv_ruleERoleName= ruleERoleName EOF ;
    public final EObject entryRuleERoleName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleERoleName = null;


        try {
            // InternalAnsibleDslParser.g:4472:50: (iv_ruleERoleName= ruleERoleName EOF )
            // InternalAnsibleDslParser.g:4473:2: iv_ruleERoleName= ruleERoleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getERoleNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleERoleName=ruleERoleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleERoleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleERoleName"


    // $ANTLR start "ruleERoleName"
    // InternalAnsibleDslParser.g:4479:1: ruleERoleName returns [EObject current=null] : ( ( (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )? )? ) ;
    public final EObject ruleERoleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_firstPart_0_0 = null;

        EObject lv_secondPart_2_0 = null;

        EObject lv_thirdPart_4_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:4485:2: ( ( ( (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )? )? ) )
            // InternalAnsibleDslParser.g:4486:2: ( ( (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )? )? )
            {
            // InternalAnsibleDslParser.g:4486:2: ( ( (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )? )? )
            // InternalAnsibleDslParser.g:4487:3: ( (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )? )?
            {
            // InternalAnsibleDslParser.g:4487:3: ( (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed ) )
            // InternalAnsibleDslParser.g:4488:4: (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed )
            {
            // InternalAnsibleDslParser.g:4488:4: (lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed )
            // InternalAnsibleDslParser.g:4489:5: lv_firstPart_0_0= ruleENumberOrStringWithoutQuotesPassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getERoleNameAccess().getFirstPartENumberOrStringWithoutQuotesPassedParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_firstPart_0_0=ruleENumberOrStringWithoutQuotesPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getERoleNameRule());
              					}
              					set(
              						current,
              						"firstPart",
              						lv_firstPart_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ENumberOrStringWithoutQuotesPassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:4506:3: (otherlv_1= FullStop ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )? )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==FullStop) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalAnsibleDslParser.g:4507:4: otherlv_1= FullStop ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )?
                    {
                    otherlv_1=(Token)match(input,FullStop,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getERoleNameAccess().getFullStopKeyword_1_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:4511:4: ( (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed ) )
                    // InternalAnsibleDslParser.g:4512:5: (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed )
                    {
                    // InternalAnsibleDslParser.g:4512:5: (lv_secondPart_2_0= ruleEStringWithoutQuotesPassed )
                    // InternalAnsibleDslParser.g:4513:6: lv_secondPart_2_0= ruleEStringWithoutQuotesPassed
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getERoleNameAccess().getSecondPartEStringWithoutQuotesPassedParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_secondPart_2_0=ruleEStringWithoutQuotesPassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getERoleNameRule());
                      						}
                      						set(
                      							current,
                      							"secondPart",
                      							lv_secondPart_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EStringWithoutQuotesPassed");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:4530:4: (otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) ) )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==FullStop) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalAnsibleDslParser.g:4531:5: otherlv_3= FullStop ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) )
                            {
                            otherlv_3=(Token)match(input,FullStop,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getERoleNameAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            // InternalAnsibleDslParser.g:4535:5: ( (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed ) )
                            // InternalAnsibleDslParser.g:4536:6: (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed )
                            {
                            // InternalAnsibleDslParser.g:4536:6: (lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed )
                            // InternalAnsibleDslParser.g:4537:7: lv_thirdPart_4_0= ruleEStringWithoutQuotesPassed
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getERoleNameAccess().getThirdPartEStringWithoutQuotesPassedParserRuleCall_1_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_thirdPart_4_0=ruleEStringWithoutQuotesPassed();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getERoleNameRule());
                              							}
                              							set(
                              								current,
                              								"thirdPart",
                              								lv_thirdPart_4_0,
                              								"org.sodalite.sdl.ansible.AnsibleDsl.EStringWithoutQuotesPassed");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleERoleName"


    // $ANTLR start "entryRuleENumberOrStringWithoutQuotesPassed"
    // InternalAnsibleDslParser.g:4560:1: entryRuleENumberOrStringWithoutQuotesPassed returns [EObject current=null] : iv_ruleENumberOrStringWithoutQuotesPassed= ruleENumberOrStringWithoutQuotesPassed EOF ;
    public final EObject entryRuleENumberOrStringWithoutQuotesPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleENumberOrStringWithoutQuotesPassed = null;


        try {
            // InternalAnsibleDslParser.g:4560:75: (iv_ruleENumberOrStringWithoutQuotesPassed= ruleENumberOrStringWithoutQuotesPassed EOF )
            // InternalAnsibleDslParser.g:4561:2: iv_ruleENumberOrStringWithoutQuotesPassed= ruleENumberOrStringWithoutQuotesPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getENumberOrStringWithoutQuotesPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleENumberOrStringWithoutQuotesPassed=ruleENumberOrStringWithoutQuotesPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleENumberOrStringWithoutQuotesPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleENumberOrStringWithoutQuotesPassed"


    // $ANTLR start "ruleENumberOrStringWithoutQuotesPassed"
    // InternalAnsibleDslParser.g:4567:1: ruleENumberOrStringWithoutQuotesPassed returns [EObject current=null] : (this_EStringWithoutQuotesPassed_0= ruleEStringWithoutQuotesPassed | this_ENumber_1= ruleENumber ) ;
    public final EObject ruleENumberOrStringWithoutQuotesPassed() throws RecognitionException {
        EObject current = null;

        EObject this_EStringWithoutQuotesPassed_0 = null;

        EObject this_ENumber_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:4573:2: ( (this_EStringWithoutQuotesPassed_0= ruleEStringWithoutQuotesPassed | this_ENumber_1= ruleENumber ) )
            // InternalAnsibleDslParser.g:4574:2: (this_EStringWithoutQuotesPassed_0= ruleEStringWithoutQuotesPassed | this_ENumber_1= ruleENumber )
            {
            // InternalAnsibleDslParser.g:4574:2: (this_EStringWithoutQuotesPassed_0= ruleEStringWithoutQuotesPassed | this_ENumber_1= ruleENumber )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=LeftCurlyBracketPercentSign && LA35_0<=LeftCurlyBracketLeftCurlyBracket)||LA35_0==GreaterThanSign||LA35_0==VerticalLine||LA35_0==RULE_ID) ) {
                alt35=1;
            }
            else if ( ((LA35_0>=RULE_OCTAL_NUMBER && LA35_0<=RULE_EXPONENTIAL_NUMBER)||LA35_0==RULE_INTEGER) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalAnsibleDslParser.g:4575:3: this_EStringWithoutQuotesPassed_0= ruleEStringWithoutQuotesPassed
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getENumberOrStringWithoutQuotesPassedAccess().getEStringWithoutQuotesPassedParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EStringWithoutQuotesPassed_0=ruleEStringWithoutQuotesPassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EStringWithoutQuotesPassed_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:4584:3: this_ENumber_1= ruleENumber
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getENumberOrStringWithoutQuotesPassedAccess().getENumberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ENumber_1=ruleENumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ENumber_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleENumberOrStringWithoutQuotesPassed"


    // $ANTLR start "entryRuleERoleInclusions"
    // InternalAnsibleDslParser.g:4596:1: entryRuleERoleInclusions returns [EObject current=null] : iv_ruleERoleInclusions= ruleERoleInclusions EOF ;
    public final EObject entryRuleERoleInclusions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleERoleInclusions = null;


        try {
            // InternalAnsibleDslParser.g:4596:56: (iv_ruleERoleInclusions= ruleERoleInclusions EOF )
            // InternalAnsibleDslParser.g:4597:2: iv_ruleERoleInclusions= ruleERoleInclusions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getERoleInclusionsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleERoleInclusions=ruleERoleInclusions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleERoleInclusions; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleERoleInclusions"


    // $ANTLR start "ruleERoleInclusions"
    // InternalAnsibleDslParser.g:4603:1: ruleERoleInclusions returns [EObject current=null] : (otherlv_0= Roles_inclusions this_BEGIN_1= RULE_BEGIN ( (lv_roles_2_0= ruleERoleInclusion ) )+ this_END_3= RULE_END ) ;
    public final EObject ruleERoleInclusions() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token this_END_3=null;
        EObject lv_roles_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:4609:2: ( (otherlv_0= Roles_inclusions this_BEGIN_1= RULE_BEGIN ( (lv_roles_2_0= ruleERoleInclusion ) )+ this_END_3= RULE_END ) )
            // InternalAnsibleDslParser.g:4610:2: (otherlv_0= Roles_inclusions this_BEGIN_1= RULE_BEGIN ( (lv_roles_2_0= ruleERoleInclusion ) )+ this_END_3= RULE_END )
            {
            // InternalAnsibleDslParser.g:4610:2: (otherlv_0= Roles_inclusions this_BEGIN_1= RULE_BEGIN ( (lv_roles_2_0= ruleERoleInclusion ) )+ this_END_3= RULE_END )
            // InternalAnsibleDslParser.g:4611:3: otherlv_0= Roles_inclusions this_BEGIN_1= RULE_BEGIN ( (lv_roles_2_0= ruleERoleInclusion ) )+ this_END_3= RULE_END
            {
            otherlv_0=(Token)match(input,Roles_inclusions,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getERoleInclusionsAccess().getRoles_inclusionsKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getERoleInclusionsAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:4619:3: ( (lv_roles_2_0= ruleERoleInclusion ) )+
            int cnt36=0;
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==Role) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:4620:4: (lv_roles_2_0= ruleERoleInclusion )
            	    {
            	    // InternalAnsibleDslParser.g:4620:4: (lv_roles_2_0= ruleERoleInclusion )
            	    // InternalAnsibleDslParser.g:4621:5: lv_roles_2_0= ruleERoleInclusion
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getERoleInclusionsAccess().getRolesERoleInclusionParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_roles_2_0=ruleERoleInclusion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getERoleInclusionsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"roles",
            	      						lv_roles_2_0,
            	      						"org.sodalite.sdl.ansible.AnsibleDsl.ERoleInclusion");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt36 >= 1 ) break loop36;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(36, input);
                        throw eee;
                }
                cnt36++;
            } while (true);

            this_END_3=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_3, grammarAccess.getERoleInclusionsAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleERoleInclusions"


    // $ANTLR start "entryRuleEExternalFileInclusion"
    // InternalAnsibleDslParser.g:4646:1: entryRuleEExternalFileInclusion returns [EObject current=null] : iv_ruleEExternalFileInclusion= ruleEExternalFileInclusion EOF ;
    public final EObject entryRuleEExternalFileInclusion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEExternalFileInclusion = null;


        try {
            // InternalAnsibleDslParser.g:4646:63: (iv_ruleEExternalFileInclusion= ruleEExternalFileInclusion EOF )
            // InternalAnsibleDslParser.g:4647:2: iv_ruleEExternalFileInclusion= ruleEExternalFileInclusion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEExternalFileInclusionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEExternalFileInclusion=ruleEExternalFileInclusion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEExternalFileInclusion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEExternalFileInclusion"


    // $ANTLR start "ruleEExternalFileInclusion"
    // InternalAnsibleDslParser.g:4653:1: ruleEExternalFileInclusion returns [EObject current=null] : (otherlv_0= External_file_inclusion this_BEGIN_1= RULE_BEGIN ( ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) ) (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )? ) this_END_8= RULE_END ) ;
    public final EObject ruleEExternalFileInclusion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_2=null;
        Token lv_import_playbook_3_0=null;
        Token otherlv_4=null;
        Token lv_include_5_0=null;
        Token otherlv_6=null;
        Token this_END_8=null;
        EObject lv_when_expression_7_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:4659:2: ( (otherlv_0= External_file_inclusion this_BEGIN_1= RULE_BEGIN ( ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) ) (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )? ) this_END_8= RULE_END ) )
            // InternalAnsibleDslParser.g:4660:2: (otherlv_0= External_file_inclusion this_BEGIN_1= RULE_BEGIN ( ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) ) (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )? ) this_END_8= RULE_END )
            {
            // InternalAnsibleDslParser.g:4660:2: (otherlv_0= External_file_inclusion this_BEGIN_1= RULE_BEGIN ( ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) ) (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )? ) this_END_8= RULE_END )
            // InternalAnsibleDslParser.g:4661:3: otherlv_0= External_file_inclusion this_BEGIN_1= RULE_BEGIN ( ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) ) (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )? ) this_END_8= RULE_END
            {
            otherlv_0=(Token)match(input,External_file_inclusion,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEExternalFileInclusionAccess().getExternal_file_inclusionKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEExternalFileInclusionAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:4669:3: ( ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) ) (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )? )
            // InternalAnsibleDslParser.g:4670:4: ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) ) (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )?
            {
            // InternalAnsibleDslParser.g:4670:4: ( (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) ) | (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==Import_playbook) ) {
                alt37=1;
            }
            else if ( (LA37_0==Include) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalAnsibleDslParser.g:4671:5: (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) )
                    {
                    // InternalAnsibleDslParser.g:4671:5: (otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) ) )
                    // InternalAnsibleDslParser.g:4672:6: otherlv_2= Import_playbook ( (lv_import_playbook_3_0= RULE_STRING ) )
                    {
                    otherlv_2=(Token)match(input,Import_playbook,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getEExternalFileInclusionAccess().getImport_playbookKeyword_2_0_0_0());
                      					
                    }
                    // InternalAnsibleDslParser.g:4676:6: ( (lv_import_playbook_3_0= RULE_STRING ) )
                    // InternalAnsibleDslParser.g:4677:7: (lv_import_playbook_3_0= RULE_STRING )
                    {
                    // InternalAnsibleDslParser.g:4677:7: (lv_import_playbook_3_0= RULE_STRING )
                    // InternalAnsibleDslParser.g:4678:8: lv_import_playbook_3_0= RULE_STRING
                    {
                    lv_import_playbook_3_0=(Token)match(input,RULE_STRING,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								newLeafNode(lv_import_playbook_3_0, grammarAccess.getEExternalFileInclusionAccess().getImport_playbookSTRINGTerminalRuleCall_2_0_0_1_0());
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getEExternalFileInclusionRule());
                      								}
                      								setWithLastConsumed(
                      									current,
                      									"import_playbook",
                      									lv_import_playbook_3_0,
                      									"org.eclipse.xtext.common.Terminals.STRING");
                      							
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:4696:5: (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) )
                    {
                    // InternalAnsibleDslParser.g:4696:5: (otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) ) )
                    // InternalAnsibleDslParser.g:4697:6: otherlv_4= Include ( (lv_include_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,Include,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getEExternalFileInclusionAccess().getIncludeKeyword_2_0_1_0());
                      					
                    }
                    // InternalAnsibleDslParser.g:4701:6: ( (lv_include_5_0= RULE_STRING ) )
                    // InternalAnsibleDslParser.g:4702:7: (lv_include_5_0= RULE_STRING )
                    {
                    // InternalAnsibleDslParser.g:4702:7: (lv_include_5_0= RULE_STRING )
                    // InternalAnsibleDslParser.g:4703:8: lv_include_5_0= RULE_STRING
                    {
                    lv_include_5_0=(Token)match(input,RULE_STRING,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								newLeafNode(lv_include_5_0, grammarAccess.getEExternalFileInclusionAccess().getIncludeSTRINGTerminalRuleCall_2_0_1_1_0());
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getEExternalFileInclusionRule());
                      								}
                      								setWithLastConsumed(
                      									current,
                      									"include",
                      									lv_include_5_0,
                      									"org.eclipse.xtext.common.Terminals.STRING");
                      							
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalAnsibleDslParser.g:4721:4: (otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==When) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalAnsibleDslParser.g:4722:5: otherlv_6= When ( (lv_when_expression_7_0= ruleECondition ) )
                    {
                    otherlv_6=(Token)match(input,When,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getEExternalFileInclusionAccess().getWhenKeyword_2_1_0());
                      				
                    }
                    // InternalAnsibleDslParser.g:4726:5: ( (lv_when_expression_7_0= ruleECondition ) )
                    // InternalAnsibleDslParser.g:4727:6: (lv_when_expression_7_0= ruleECondition )
                    {
                    // InternalAnsibleDslParser.g:4727:6: (lv_when_expression_7_0= ruleECondition )
                    // InternalAnsibleDslParser.g:4728:7: lv_when_expression_7_0= ruleECondition
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEExternalFileInclusionAccess().getWhen_expressionEConditionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_10);
                    lv_when_expression_7_0=ruleECondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEExternalFileInclusionRule());
                      							}
                      							set(
                      								current,
                      								"when_expression",
                      								lv_when_expression_7_0,
                      								"org.sodalite.sdl.ansible.AnsibleDsl.ECondition");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }
                    break;

            }


            }

            this_END_8=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_8, grammarAccess.getEExternalFileInclusionAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEExternalFileInclusion"


    // $ANTLR start "entryRuleELoop"
    // InternalAnsibleDslParser.g:4755:1: entryRuleELoop returns [EObject current=null] : iv_ruleELoop= ruleELoop EOF ;
    public final EObject entryRuleELoop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleELoop = null;


        try {
            // InternalAnsibleDslParser.g:4755:46: (iv_ruleELoop= ruleELoop EOF )
            // InternalAnsibleDslParser.g:4756:2: iv_ruleELoop= ruleELoop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getELoopRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleELoop=ruleELoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleELoop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleELoop"


    // $ANTLR start "ruleELoop"
    // InternalAnsibleDslParser.g:4762:1: ruleELoop returns [EObject current=null] : (otherlv_0= Loop this_BEGIN_1= RULE_BEGIN (this_ELoopOverList_2= ruleELoopOverList | this_EWithLookup_3= ruleEWithLookup | this_EUntil_4= ruleEUntil ) this_END_5= RULE_END ) ;
    public final EObject ruleELoop() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token this_END_5=null;
        EObject this_ELoopOverList_2 = null;

        EObject this_EWithLookup_3 = null;

        EObject this_EUntil_4 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:4768:2: ( (otherlv_0= Loop this_BEGIN_1= RULE_BEGIN (this_ELoopOverList_2= ruleELoopOverList | this_EWithLookup_3= ruleEWithLookup | this_EUntil_4= ruleEUntil ) this_END_5= RULE_END ) )
            // InternalAnsibleDslParser.g:4769:2: (otherlv_0= Loop this_BEGIN_1= RULE_BEGIN (this_ELoopOverList_2= ruleELoopOverList | this_EWithLookup_3= ruleEWithLookup | this_EUntil_4= ruleEUntil ) this_END_5= RULE_END )
            {
            // InternalAnsibleDslParser.g:4769:2: (otherlv_0= Loop this_BEGIN_1= RULE_BEGIN (this_ELoopOverList_2= ruleELoopOverList | this_EWithLookup_3= ruleEWithLookup | this_EUntil_4= ruleEUntil ) this_END_5= RULE_END )
            // InternalAnsibleDslParser.g:4770:3: otherlv_0= Loop this_BEGIN_1= RULE_BEGIN (this_ELoopOverList_2= ruleELoopOverList | this_EWithLookup_3= ruleEWithLookup | this_EUntil_4= ruleEUntil ) this_END_5= RULE_END
            {
            otherlv_0=(Token)match(input,Loop,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getELoopAccess().getLoopKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getELoopAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:4778:3: (this_ELoopOverList_2= ruleELoopOverList | this_EWithLookup_3= ruleEWithLookup | this_EUntil_4= ruleEUntil )
            int alt39=3;
            switch ( input.LA(1) ) {
            case Loop_over:
                {
                alt39=1;
                }
                break;
            case With:
                {
                alt39=2;
                }
                break;
            case Until:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalAnsibleDslParser.g:4779:4: this_ELoopOverList_2= ruleELoopOverList
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getELoopAccess().getELoopOverListParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_10);
                    this_ELoopOverList_2=ruleELoopOverList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ELoopOverList_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:4788:4: this_EWithLookup_3= ruleEWithLookup
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getELoopAccess().getEWithLookupParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_10);
                    this_EWithLookup_3=ruleEWithLookup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EWithLookup_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:4797:4: this_EUntil_4= ruleEUntil
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getELoopAccess().getEUntilParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FOLLOW_10);
                    this_EUntil_4=ruleEUntil();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EUntil_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            this_END_5=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_5, grammarAccess.getELoopAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleELoop"


    // $ANTLR start "entryRuleELoopOverList"
    // InternalAnsibleDslParser.g:4814:1: entryRuleELoopOverList returns [EObject current=null] : iv_ruleELoopOverList= ruleELoopOverList EOF ;
    public final EObject entryRuleELoopOverList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleELoopOverList = null;


        try {
            // InternalAnsibleDslParser.g:4814:54: (iv_ruleELoopOverList= ruleELoopOverList EOF )
            // InternalAnsibleDslParser.g:4815:2: iv_ruleELoopOverList= ruleELoopOverList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getELoopOverListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleELoopOverList=ruleELoopOverList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleELoopOverList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleELoopOverList"


    // $ANTLR start "ruleELoopOverList"
    // InternalAnsibleDslParser.g:4821:1: ruleELoopOverList returns [EObject current=null] : (otherlv_0= Loop_over ( (lv_loop_list_1_0= ruleEValuePassed ) ) ( (lv_loop_control_2_0= ruleELoopControl ) )? ) ;
    public final EObject ruleELoopOverList() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_loop_list_1_0 = null;

        EObject lv_loop_control_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:4827:2: ( (otherlv_0= Loop_over ( (lv_loop_list_1_0= ruleEValuePassed ) ) ( (lv_loop_control_2_0= ruleELoopControl ) )? ) )
            // InternalAnsibleDslParser.g:4828:2: (otherlv_0= Loop_over ( (lv_loop_list_1_0= ruleEValuePassed ) ) ( (lv_loop_control_2_0= ruleELoopControl ) )? )
            {
            // InternalAnsibleDslParser.g:4828:2: (otherlv_0= Loop_over ( (lv_loop_list_1_0= ruleEValuePassed ) ) ( (lv_loop_control_2_0= ruleELoopControl ) )? )
            // InternalAnsibleDslParser.g:4829:3: otherlv_0= Loop_over ( (lv_loop_list_1_0= ruleEValuePassed ) ) ( (lv_loop_control_2_0= ruleELoopControl ) )?
            {
            otherlv_0=(Token)match(input,Loop_over,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getELoopOverListAccess().getLoop_overKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:4833:3: ( (lv_loop_list_1_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:4834:4: (lv_loop_list_1_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:4834:4: (lv_loop_list_1_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:4835:5: lv_loop_list_1_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getELoopOverListAccess().getLoop_listEValuePassedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_loop_list_1_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getELoopOverListRule());
              					}
              					set(
              						current,
              						"loop_list",
              						lv_loop_list_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:4852:3: ( (lv_loop_control_2_0= ruleELoopControl ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( LA40_0 == Loop_control ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalAnsibleDslParser.g:4853:4: (lv_loop_control_2_0= ruleELoopControl )
                    {
                    // InternalAnsibleDslParser.g:4853:4: (lv_loop_control_2_0= ruleELoopControl )
                    // InternalAnsibleDslParser.g:4854:5: lv_loop_control_2_0= ruleELoopControl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getELoopOverListAccess().getLoop_controlELoopControlParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_loop_control_2_0=ruleELoopControl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getELoopOverListRule());
                      					}
                      					set(
                      						current,
                      						"loop_control",
                      						lv_loop_control_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.ELoopControl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleELoopOverList"


    // $ANTLR start "entryRuleELoopControl"
    // InternalAnsibleDslParser.g:4875:1: entryRuleELoopControl returns [EObject current=null] : iv_ruleELoopControl= ruleELoopControl EOF ;
    public final EObject entryRuleELoopControl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleELoopControl = null;


        try {
            // InternalAnsibleDslParser.g:4875:53: (iv_ruleELoopControl= ruleELoopControl EOF )
            // InternalAnsibleDslParser.g:4876:2: iv_ruleELoopControl= ruleELoopControl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getELoopControlRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleELoopControl=ruleELoopControl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleELoopControl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleELoopControl"


    // $ANTLR start "ruleELoopControl"
    // InternalAnsibleDslParser.g:4882:1: ruleELoopControl returns [EObject current=null] : (otherlv_0= Loop_control this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) ;
    public final EObject ruleELoopControl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token this_END_13=null;
        EObject lv_label_4_0 = null;

        EObject lv_pause_6_0 = null;

        EObject lv_index_var_8_0 = null;

        EObject lv_loop_var_10_0 = null;

        EObject lv_extended_12_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:4888:2: ( (otherlv_0= Loop_control this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) )
            // InternalAnsibleDslParser.g:4889:2: (otherlv_0= Loop_control this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            {
            // InternalAnsibleDslParser.g:4889:2: (otherlv_0= Loop_control this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            // InternalAnsibleDslParser.g:4890:3: otherlv_0= Loop_control this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END
            {
            otherlv_0=(Token)match(input,Loop_control,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getELoopControlAccess().getLoop_controlKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getELoopControlAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:4898:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:4899:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:4899:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:4900:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getELoopControlAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:4903:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:4904:6: ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:4904:6: ( ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop41:
            do {
                int alt41=6;
                int LA41_0 = input.LA(1);

                if ( LA41_0 == Label && getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 0) ) {
                    alt41=1;
                }
                else if ( LA41_0 == Pause && getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 1) ) {
                    alt41=2;
                }
                else if ( LA41_0 == Index_var && getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 2) ) {
                    alt41=3;
                }
                else if ( LA41_0 == Loop_var && getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 3) ) {
                    alt41=4;
                }
                else if ( LA41_0 == Extended && getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 4) ) {
                    alt41=5;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:4905:4: ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4905:4: ({...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4906:5: {...}? => ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:4906:109: ( ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4907:6: ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:4910:9: ({...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4910:10: {...}? => (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4910:19: (otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:4910:20: otherlv_3= Label ( (lv_label_4_0= ruleEValuePassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Label,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getELoopControlAccess().getLabelKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:4914:9: ( (lv_label_4_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:4915:10: (lv_label_4_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:4915:10: (lv_label_4_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:4916:11: lv_label_4_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getELoopControlAccess().getLabelEValuePassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_label_4_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getELoopControlRule());
            	      											}
            	      											set(
            	      												current,
            	      												"label",
            	      												lv_label_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getELoopControlAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:4939:4: ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4939:4: ({...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4940:5: {...}? => ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:4940:109: ( ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4941:6: ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:4944:9: ({...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:4944:10: {...}? => (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4944:19: (otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:4944:20: otherlv_5= Pause ( (lv_pause_6_0= ruleENumberPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Pause,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getELoopControlAccess().getPauseKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:4948:9: ( (lv_pause_6_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:4949:10: (lv_pause_6_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:4949:10: (lv_pause_6_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:4950:11: lv_pause_6_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getELoopControlAccess().getPauseENumberPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_pause_6_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getELoopControlRule());
            	      											}
            	      											set(
            	      												current,
            	      												"pause",
            	      												lv_pause_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getELoopControlAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:4973:4: ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:4973:4: ({...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4974:5: {...}? => ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:4974:109: ( ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) ) )
            	    // InternalAnsibleDslParser.g:4975:6: ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:4978:9: ({...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) ) )
            	    // InternalAnsibleDslParser.g:4978:10: {...}? => (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "true");
            	    }
            	    // InternalAnsibleDslParser.g:4978:19: (otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) ) )
            	    // InternalAnsibleDslParser.g:4978:20: otherlv_7= Index_var ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) )
            	    {
            	    otherlv_7=(Token)match(input,Index_var,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getELoopControlAccess().getIndex_varKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:4982:9: ( (lv_index_var_8_0= ruleEIndexOrLoopVariable ) )
            	    // InternalAnsibleDslParser.g:4983:10: (lv_index_var_8_0= ruleEIndexOrLoopVariable )
            	    {
            	    // InternalAnsibleDslParser.g:4983:10: (lv_index_var_8_0= ruleEIndexOrLoopVariable )
            	    // InternalAnsibleDslParser.g:4984:11: lv_index_var_8_0= ruleEIndexOrLoopVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getELoopControlAccess().getIndex_varEIndexOrLoopVariableParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_index_var_8_0=ruleEIndexOrLoopVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getELoopControlRule());
            	      											}
            	      											set(
            	      												current,
            	      												"index_var",
            	      												lv_index_var_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EIndexOrLoopVariable");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getELoopControlAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:5007:4: ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5007:4: ({...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5008:5: {...}? => ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:5008:109: ( ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5009:6: ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 3);
            	    // InternalAnsibleDslParser.g:5012:9: ({...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) ) )
            	    // InternalAnsibleDslParser.g:5012:10: {...}? => (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5012:19: (otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) ) )
            	    // InternalAnsibleDslParser.g:5012:20: otherlv_9= Loop_var ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) )
            	    {
            	    otherlv_9=(Token)match(input,Loop_var,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getELoopControlAccess().getLoop_varKeyword_2_3_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5016:9: ( (lv_loop_var_10_0= ruleEIndexOrLoopVariable ) )
            	    // InternalAnsibleDslParser.g:5017:10: (lv_loop_var_10_0= ruleEIndexOrLoopVariable )
            	    {
            	    // InternalAnsibleDslParser.g:5017:10: (lv_loop_var_10_0= ruleEIndexOrLoopVariable )
            	    // InternalAnsibleDslParser.g:5018:11: lv_loop_var_10_0= ruleEIndexOrLoopVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getELoopControlAccess().getLoop_varEIndexOrLoopVariableParserRuleCall_2_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_loop_var_10_0=ruleEIndexOrLoopVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getELoopControlRule());
            	      											}
            	      											set(
            	      												current,
            	      												"loop_var",
            	      												lv_loop_var_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EIndexOrLoopVariable");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getELoopControlAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:5041:4: ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5041:4: ({...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5042:5: {...}? => ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "getUnorderedGroupHelper().canSelect(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:5042:109: ( ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5043:6: ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getELoopControlAccess().getUnorderedGroup_2(), 4);
            	    // InternalAnsibleDslParser.g:5046:9: ({...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5046:10: {...}? => (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleELoopControl", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5046:19: (otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:5046:20: otherlv_11= Extended ( (lv_extended_12_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_11=(Token)match(input,Extended,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getELoopControlAccess().getExtendedKeyword_2_4_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5050:9: ( (lv_extended_12_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:5051:10: (lv_extended_12_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5051:10: (lv_extended_12_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:5052:11: lv_extended_12_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getELoopControlAccess().getExtendedEBooleanPassedParserRuleCall_2_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_extended_12_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getELoopControlRule());
            	      											}
            	      											set(
            	      												current,
            	      												"extended",
            	      												lv_extended_12_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getELoopControlAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getELoopControlAccess().getUnorderedGroup_2());

            }

            this_END_13=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_13, grammarAccess.getELoopControlAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleELoopControl"


    // $ANTLR start "entryRuleEWithLookup"
    // InternalAnsibleDslParser.g:5090:1: entryRuleEWithLookup returns [EObject current=null] : iv_ruleEWithLookup= ruleEWithLookup EOF ;
    public final EObject entryRuleEWithLookup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEWithLookup = null;


        try {
            // InternalAnsibleDslParser.g:5090:52: (iv_ruleEWithLookup= ruleEWithLookup EOF )
            // InternalAnsibleDslParser.g:5091:2: iv_ruleEWithLookup= ruleEWithLookup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEWithLookupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEWithLookup=ruleEWithLookup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEWithLookup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEWithLookup"


    // $ANTLR start "ruleEWithLookup"
    // InternalAnsibleDslParser.g:5097:1: ruleEWithLookup returns [EObject current=null] : (otherlv_0= With ( (lv_lookup_1_0= RULE_ID ) ) otherlv_2= Colon ( (lv_with_list_3_0= ruleEValuePassed ) ) ) ;
    public final EObject ruleEWithLookup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_lookup_1_0=null;
        Token otherlv_2=null;
        EObject lv_with_list_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:5103:2: ( (otherlv_0= With ( (lv_lookup_1_0= RULE_ID ) ) otherlv_2= Colon ( (lv_with_list_3_0= ruleEValuePassed ) ) ) )
            // InternalAnsibleDslParser.g:5104:2: (otherlv_0= With ( (lv_lookup_1_0= RULE_ID ) ) otherlv_2= Colon ( (lv_with_list_3_0= ruleEValuePassed ) ) )
            {
            // InternalAnsibleDslParser.g:5104:2: (otherlv_0= With ( (lv_lookup_1_0= RULE_ID ) ) otherlv_2= Colon ( (lv_with_list_3_0= ruleEValuePassed ) ) )
            // InternalAnsibleDslParser.g:5105:3: otherlv_0= With ( (lv_lookup_1_0= RULE_ID ) ) otherlv_2= Colon ( (lv_with_list_3_0= ruleEValuePassed ) )
            {
            otherlv_0=(Token)match(input,With,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEWithLookupAccess().getWithKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:5109:3: ( (lv_lookup_1_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:5110:4: (lv_lookup_1_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:5110:4: (lv_lookup_1_0= RULE_ID )
            // InternalAnsibleDslParser.g:5111:5: lv_lookup_1_0= RULE_ID
            {
            lv_lookup_1_0=(Token)match(input,RULE_ID,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_lookup_1_0, grammarAccess.getEWithLookupAccess().getLookupIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEWithLookupRule());
              					}
              					setWithLastConsumed(
              						current,
              						"lookup",
              						lv_lookup_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEWithLookupAccess().getColonKeyword_2());
              		
            }
            // InternalAnsibleDslParser.g:5131:3: ( (lv_with_list_3_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:5132:4: (lv_with_list_3_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:5132:4: (lv_with_list_3_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:5133:5: lv_with_list_3_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEWithLookupAccess().getWith_listEValuePassedParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_with_list_3_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEWithLookupRule());
              					}
              					set(
              						current,
              						"with_list",
              						lv_with_list_3_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEWithLookup"


    // $ANTLR start "entryRuleEUntil"
    // InternalAnsibleDslParser.g:5154:1: entryRuleEUntil returns [EObject current=null] : iv_ruleEUntil= ruleEUntil EOF ;
    public final EObject entryRuleEUntil() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEUntil = null;


        try {
            // InternalAnsibleDslParser.g:5154:47: (iv_ruleEUntil= ruleEUntil EOF )
            // InternalAnsibleDslParser.g:5155:2: iv_ruleEUntil= ruleEUntil EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEUntilRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEUntil=ruleEUntil();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEUntil; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEUntil"


    // $ANTLR start "ruleEUntil"
    // InternalAnsibleDslParser.g:5161:1: ruleEUntil returns [EObject current=null] : (otherlv_0= Until this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END ) ;
    public final EObject ruleEUntil() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token this_END_9=null;
        EObject lv_until_4_0 = null;

        EObject lv_retries_6_0 = null;

        EObject lv_delay_8_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:5167:2: ( (otherlv_0= Until this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END ) )
            // InternalAnsibleDslParser.g:5168:2: (otherlv_0= Until this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END )
            {
            // InternalAnsibleDslParser.g:5168:2: (otherlv_0= Until this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END )
            // InternalAnsibleDslParser.g:5169:3: otherlv_0= Until this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END
            {
            otherlv_0=(Token)match(input,Until,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEUntilAccess().getUntilKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEUntilAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:5177:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:5178:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:5178:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:5179:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEUntilAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:5182:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:5183:6: ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:5183:6: ( ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) ) )*
            loop42:
            do {
                int alt42=4;
                int LA42_0 = input.LA(1);

                if ( LA42_0 == Until_condition && getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 0) ) {
                    alt42=1;
                }
                else if ( LA42_0 == Retries && getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 1) ) {
                    alt42=2;
                }
                else if ( LA42_0 == Delay_attribute && getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 2) ) {
                    alt42=3;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:5184:4: ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5184:4: ({...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5185:5: {...}? => ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEUntil", "getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:5185:103: ( ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5186:6: ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:5189:9: ({...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) )
            	    // InternalAnsibleDslParser.g:5189:10: {...}? => (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEUntil", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5189:19: (otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )
            	    // InternalAnsibleDslParser.g:5189:20: otherlv_3= Until_condition ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            	    {
            	    otherlv_3=(Token)match(input,Until_condition,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEUntilAccess().getUntil_conditionKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5193:9: ( (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            	    // InternalAnsibleDslParser.g:5194:10: (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            	    {
            	    // InternalAnsibleDslParser.g:5194:10: (lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            	    // InternalAnsibleDslParser.g:5195:11: lv_until_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEUntilAccess().getUntilEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_until_4_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEUntilRule());
            	      											}
            	      											set(
            	      												current,
            	      												"until",
            	      												lv_until_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEUntilAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:5218:4: ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5218:4: ({...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5219:5: {...}? => ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEUntil", "getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:5219:103: ( ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5220:6: ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:5223:9: ({...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5223:10: {...}? => (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEUntil", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5223:19: (otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:5223:20: otherlv_5= Retries ( (lv_retries_6_0= ruleENumberPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Retries,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEUntilAccess().getRetriesKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5227:9: ( (lv_retries_6_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:5228:10: (lv_retries_6_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5228:10: (lv_retries_6_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:5229:11: lv_retries_6_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEUntilAccess().getRetriesENumberPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_retries_6_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEUntilRule());
            	      											}
            	      											set(
            	      												current,
            	      												"retries",
            	      												lv_retries_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEUntilAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:5252:4: ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5252:4: ({...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5253:5: {...}? => ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEUntil", "getUnorderedGroupHelper().canSelect(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:5253:103: ( ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5254:6: ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEUntilAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:5257:9: ({...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5257:10: {...}? => (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEUntil", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5257:19: (otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:5257:20: otherlv_7= Delay_attribute ( (lv_delay_8_0= ruleENumberPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Delay_attribute,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEUntilAccess().getDelay_attributeKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5261:9: ( (lv_delay_8_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:5262:10: (lv_delay_8_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5262:10: (lv_delay_8_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:5263:11: lv_delay_8_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEUntilAccess().getDelayENumberPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_delay_8_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEUntilRule());
            	      											}
            	      											set(
            	      												current,
            	      												"delay",
            	      												lv_delay_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEUntilAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEUntilAccess().getUnorderedGroup_2());

            }

            this_END_9=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_9, grammarAccess.getEUntilAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEUntil"


    // $ANTLR start "entryRuleEPrivilegeEscalation"
    // InternalAnsibleDslParser.g:5301:1: entryRuleEPrivilegeEscalation returns [EObject current=null] : iv_ruleEPrivilegeEscalation= ruleEPrivilegeEscalation EOF ;
    public final EObject entryRuleEPrivilegeEscalation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEPrivilegeEscalation = null;


        try {
            // InternalAnsibleDslParser.g:5301:61: (iv_ruleEPrivilegeEscalation= ruleEPrivilegeEscalation EOF )
            // InternalAnsibleDslParser.g:5302:2: iv_ruleEPrivilegeEscalation= ruleEPrivilegeEscalation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEPrivilegeEscalationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEPrivilegeEscalation=ruleEPrivilegeEscalation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEPrivilegeEscalation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEPrivilegeEscalation"


    // $ANTLR start "ruleEPrivilegeEscalation"
    // InternalAnsibleDslParser.g:5308:1: ruleEPrivilegeEscalation returns [EObject current=null] : (otherlv_0= Privilege_escalation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) ;
    public final EObject ruleEPrivilegeEscalation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token this_END_13=null;
        EObject lv_become_4_0 = null;

        EObject lv_become_exe_6_0 = null;

        EObject lv_become_flags_8_0 = null;

        EObject lv_become_method_10_0 = null;

        EObject lv_become_user_12_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:5314:2: ( (otherlv_0= Privilege_escalation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) )
            // InternalAnsibleDslParser.g:5315:2: (otherlv_0= Privilege_escalation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            {
            // InternalAnsibleDslParser.g:5315:2: (otherlv_0= Privilege_escalation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            // InternalAnsibleDslParser.g:5316:3: otherlv_0= Privilege_escalation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END
            {
            otherlv_0=(Token)match(input,Privilege_escalation,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEPrivilegeEscalationAccess().getPrivilege_escalationKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEPrivilegeEscalationAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:5324:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:5325:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:5325:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:5326:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:5329:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:5330:6: ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:5330:6: ( ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) ) )*
            loop43:
            do {
                int alt43=6;
                int LA43_0 = input.LA(1);

                if ( LA43_0 == Become && getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 0) ) {
                    alt43=1;
                }
                else if ( LA43_0 == Become_exe && getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 1) ) {
                    alt43=2;
                }
                else if ( LA43_0 == Become_flags && getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 2) ) {
                    alt43=3;
                }
                else if ( LA43_0 == Become_method && getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 3) ) {
                    alt43=4;
                }
                else if ( LA43_0 == Become_user && getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 4) ) {
                    alt43=5;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:5331:4: ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5331:4: ({...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5332:5: {...}? => ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:5332:117: ( ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5333:6: ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:5336:9: ({...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5336:10: {...}? => (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5336:19: (otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:5336:20: otherlv_3= Become ( (lv_become_4_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Become,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEPrivilegeEscalationAccess().getBecomeKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5340:9: ( (lv_become_4_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:5341:10: (lv_become_4_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5341:10: (lv_become_4_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:5342:11: lv_become_4_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPrivilegeEscalationAccess().getBecomeEBooleanPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_become_4_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPrivilegeEscalationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"become",
            	      												lv_become_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:5365:4: ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5365:4: ({...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5366:5: {...}? => ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:5366:117: ( ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5367:6: ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:5370:9: ({...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5370:10: {...}? => (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5370:19: (otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5370:20: otherlv_5= Become_exe ( (lv_become_exe_6_0= ruleEStringPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Become_exe,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEPrivilegeEscalationAccess().getBecome_exeKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5374:9: ( (lv_become_exe_6_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5375:10: (lv_become_exe_6_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5375:10: (lv_become_exe_6_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5376:11: lv_become_exe_6_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPrivilegeEscalationAccess().getBecome_exeEStringPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_become_exe_6_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPrivilegeEscalationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"become_exe",
            	      												lv_become_exe_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:5399:4: ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5399:4: ({...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5400:5: {...}? => ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:5400:117: ( ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5401:6: ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:5404:9: ({...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5404:10: {...}? => (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5404:19: (otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5404:20: otherlv_7= Become_flags ( (lv_become_flags_8_0= ruleEStringPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Become_flags,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEPrivilegeEscalationAccess().getBecome_flagsKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5408:9: ( (lv_become_flags_8_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5409:10: (lv_become_flags_8_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5409:10: (lv_become_flags_8_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5410:11: lv_become_flags_8_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPrivilegeEscalationAccess().getBecome_flagsEStringPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_become_flags_8_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPrivilegeEscalationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"become_flags",
            	      												lv_become_flags_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:5433:4: ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5433:4: ({...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5434:5: {...}? => ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:5434:117: ( ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5435:6: ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 3);
            	    // InternalAnsibleDslParser.g:5438:9: ({...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5438:10: {...}? => (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5438:19: (otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5438:20: otherlv_9= Become_method ( (lv_become_method_10_0= ruleEStringPassed ) )
            	    {
            	    otherlv_9=(Token)match(input,Become_method,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getEPrivilegeEscalationAccess().getBecome_methodKeyword_2_3_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5442:9: ( (lv_become_method_10_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5443:10: (lv_become_method_10_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5443:10: (lv_become_method_10_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5444:11: lv_become_method_10_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPrivilegeEscalationAccess().getBecome_methodEStringPassedParserRuleCall_2_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_become_method_10_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPrivilegeEscalationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"become_method",
            	      												lv_become_method_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:5467:4: ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5467:4: ({...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5468:5: {...}? => ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:5468:117: ( ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5469:6: ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2(), 4);
            	    // InternalAnsibleDslParser.g:5472:9: ({...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5472:10: {...}? => (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPrivilegeEscalation", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5472:19: (otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5472:20: otherlv_11= Become_user ( (lv_become_user_12_0= ruleEStringPassed ) )
            	    {
            	    otherlv_11=(Token)match(input,Become_user,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getEPrivilegeEscalationAccess().getBecome_userKeyword_2_4_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5476:9: ( (lv_become_user_12_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5477:10: (lv_become_user_12_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5477:10: (lv_become_user_12_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5478:11: lv_become_user_12_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPrivilegeEscalationAccess().getBecome_userEStringPassedParserRuleCall_2_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_become_user_12_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPrivilegeEscalationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"become_user",
            	      												lv_become_user_12_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEPrivilegeEscalationAccess().getUnorderedGroup_2());

            }

            this_END_13=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_13, grammarAccess.getEPrivilegeEscalationAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEPrivilegeEscalation"


    // $ANTLR start "entryRuleEValidationMode"
    // InternalAnsibleDslParser.g:5516:1: entryRuleEValidationMode returns [EObject current=null] : iv_ruleEValidationMode= ruleEValidationMode EOF ;
    public final EObject entryRuleEValidationMode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEValidationMode = null;


        try {
            // InternalAnsibleDslParser.g:5516:56: (iv_ruleEValidationMode= ruleEValidationMode EOF )
            // InternalAnsibleDslParser.g:5517:2: iv_ruleEValidationMode= ruleEValidationMode EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEValidationModeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEValidationMode=ruleEValidationMode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEValidationMode; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEValidationMode"


    // $ANTLR start "ruleEValidationMode"
    // InternalAnsibleDslParser.g:5523:1: ruleEValidationMode returns [EObject current=null] : (otherlv_0= Validation_mode this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) ;
    public final EObject ruleEValidationMode() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token this_END_7=null;
        EObject lv_check_mode_4_0 = null;

        EObject lv_diff_6_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:5529:2: ( (otherlv_0= Validation_mode this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) )
            // InternalAnsibleDslParser.g:5530:2: (otherlv_0= Validation_mode this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            {
            // InternalAnsibleDslParser.g:5530:2: (otherlv_0= Validation_mode this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            // InternalAnsibleDslParser.g:5531:3: otherlv_0= Validation_mode this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END
            {
            otherlv_0=(Token)match(input,Validation_mode,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEValidationModeAccess().getValidation_modeKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEValidationModeAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:5539:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:5540:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:5540:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:5541:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:5544:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:5545:6: ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:5545:6: ( ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop44:
            do {
                int alt44=3;
                int LA44_0 = input.LA(1);

                if ( LA44_0 == Check_mode && getUnorderedGroupHelper().canSelect(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 0) ) {
                    alt44=1;
                }
                else if ( LA44_0 == Diff && getUnorderedGroupHelper().canSelect(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 1) ) {
                    alt44=2;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:5546:4: ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5546:4: ({...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5547:5: {...}? => ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEValidationMode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:5547:112: ( ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5548:6: ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:5551:9: ({...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5551:10: {...}? => (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEValidationMode", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5551:19: (otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:5551:20: otherlv_3= Check_mode ( (lv_check_mode_4_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Check_mode,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEValidationModeAccess().getCheck_modeKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5555:9: ( (lv_check_mode_4_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:5556:10: (lv_check_mode_4_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5556:10: (lv_check_mode_4_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:5557:11: lv_check_mode_4_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEValidationModeAccess().getCheck_modeEBooleanPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_check_mode_4_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEValidationModeRule());
            	      											}
            	      											set(
            	      												current,
            	      												"check_mode",
            	      												lv_check_mode_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:5580:4: ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5580:4: ({...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5581:5: {...}? => ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEValidationMode", "getUnorderedGroupHelper().canSelect(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:5581:112: ( ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5582:6: ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:5585:9: ({...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5585:10: {...}? => (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEValidationMode", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5585:19: (otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:5585:20: otherlv_5= Diff ( (lv_diff_6_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Diff,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEValidationModeAccess().getDiffKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5589:9: ( (lv_diff_6_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:5590:10: (lv_diff_6_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5590:10: (lv_diff_6_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:5591:11: lv_diff_6_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEValidationModeAccess().getDiffEBooleanPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_diff_6_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEValidationModeRule());
            	      											}
            	      											set(
            	      												current,
            	      												"diff",
            	      												lv_diff_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEValidationModeAccess().getUnorderedGroup_2());

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getEValidationModeAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEValidationMode"


    // $ANTLR start "entryRuleEConnection"
    // InternalAnsibleDslParser.g:5629:1: entryRuleEConnection returns [EObject current=null] : iv_ruleEConnection= ruleEConnection EOF ;
    public final EObject entryRuleEConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEConnection = null;


        try {
            // InternalAnsibleDslParser.g:5629:52: (iv_ruleEConnection= ruleEConnection EOF )
            // InternalAnsibleDslParser.g:5630:2: iv_ruleEConnection= ruleEConnection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEConnectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEConnection=ruleEConnection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEConnection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEConnection"


    // $ANTLR start "ruleEConnection"
    // InternalAnsibleDslParser.g:5636:1: ruleEConnection returns [EObject current=null] : (otherlv_0= Connection_info this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END ) ;
    public final EObject ruleEConnection() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token this_END_9=null;
        EObject lv_connection_4_0 = null;

        EObject lv_port_6_0 = null;

        EObject lv_remote_user_8_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:5642:2: ( (otherlv_0= Connection_info this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END ) )
            // InternalAnsibleDslParser.g:5643:2: (otherlv_0= Connection_info this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END )
            {
            // InternalAnsibleDslParser.g:5643:2: (otherlv_0= Connection_info this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END )
            // InternalAnsibleDslParser.g:5644:3: otherlv_0= Connection_info this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END
            {
            otherlv_0=(Token)match(input,Connection_info,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEConnectionAccess().getConnection_infoKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEConnectionAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:5652:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:5653:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:5653:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:5654:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEConnectionAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:5657:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:5658:6: ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:5658:6: ( ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) ) )*
            loop45:
            do {
                int alt45=4;
                int LA45_0 = input.LA(1);

                if ( LA45_0 == Connection && getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 0) ) {
                    alt45=1;
                }
                else if ( LA45_0 == Port_attribute && getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 1) ) {
                    alt45=2;
                }
                else if ( LA45_0 == Remote_user && getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 2) ) {
                    alt45=3;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:5659:4: ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5659:4: ({...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5660:5: {...}? => ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEConnection", "getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:5660:108: ( ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5661:6: ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:5664:9: ({...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5664:10: {...}? => (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEConnection", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5664:19: (otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5664:20: otherlv_3= Connection ( (lv_connection_4_0= ruleEStringPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Connection,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEConnectionAccess().getConnectionKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5668:9: ( (lv_connection_4_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5669:10: (lv_connection_4_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5669:10: (lv_connection_4_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5670:11: lv_connection_4_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEConnectionAccess().getConnectionEStringPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_connection_4_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEConnectionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"connection",
            	      												lv_connection_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEConnectionAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:5693:4: ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5693:4: ({...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5694:5: {...}? => ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEConnection", "getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:5694:108: ( ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5695:6: ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:5698:9: ({...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5698:10: {...}? => (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEConnection", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5698:19: (otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:5698:20: otherlv_5= Port_attribute ( (lv_port_6_0= ruleENumberPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Port_attribute,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEConnectionAccess().getPort_attributeKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5702:9: ( (lv_port_6_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:5703:10: (lv_port_6_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5703:10: (lv_port_6_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:5704:11: lv_port_6_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEConnectionAccess().getPortENumberPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_port_6_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEConnectionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"port",
            	      												lv_port_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEConnectionAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:5727:4: ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5727:4: ({...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5728:5: {...}? => ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEConnection", "getUnorderedGroupHelper().canSelect(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:5728:108: ( ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5729:6: ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEConnectionAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:5732:9: ({...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5732:10: {...}? => (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEConnection", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5732:19: (otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5732:20: otherlv_7= Remote_user ( (lv_remote_user_8_0= ruleEStringPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Remote_user,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEConnectionAccess().getRemote_userKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5736:9: ( (lv_remote_user_8_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5737:10: (lv_remote_user_8_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5737:10: (lv_remote_user_8_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5738:11: lv_remote_user_8_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEConnectionAccess().getRemote_userEStringPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_remote_user_8_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEConnectionRule());
            	      											}
            	      											set(
            	      												current,
            	      												"remote_user",
            	      												lv_remote_user_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEConnectionAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEConnectionAccess().getUnorderedGroup_2());

            }

            this_END_9=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_9, grammarAccess.getEConnectionAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEConnection"


    // $ANTLR start "entryRuleEPlayExeSettings"
    // InternalAnsibleDslParser.g:5776:1: entryRuleEPlayExeSettings returns [EObject current=null] : iv_ruleEPlayExeSettings= ruleEPlayExeSettings EOF ;
    public final EObject entryRuleEPlayExeSettings() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEPlayExeSettings = null;


        try {
            // InternalAnsibleDslParser.g:5776:57: (iv_ruleEPlayExeSettings= ruleEPlayExeSettings EOF )
            // InternalAnsibleDslParser.g:5777:2: iv_ruleEPlayExeSettings= ruleEPlayExeSettings EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEPlayExeSettingsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEPlayExeSettings=ruleEPlayExeSettings();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEPlayExeSettings; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEPlayExeSettings"


    // $ANTLR start "ruleEPlayExeSettings"
    // InternalAnsibleDslParser.g:5783:1: ruleEPlayExeSettings returns [EObject current=null] : (otherlv_0= Play_exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) ;
    public final EObject ruleEPlayExeSettings() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token this_END_13=null;
        EObject lv_strategy_4_0 = null;

        EObject lv_serial_list_6_0 = null;

        EObject lv_order_8_0 = null;

        EObject lv_throttle_10_0 = null;

        EObject lv_run_once_12_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:5789:2: ( (otherlv_0= Play_exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) )
            // InternalAnsibleDslParser.g:5790:2: (otherlv_0= Play_exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            {
            // InternalAnsibleDslParser.g:5790:2: (otherlv_0= Play_exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            // InternalAnsibleDslParser.g:5791:3: otherlv_0= Play_exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END
            {
            otherlv_0=(Token)match(input,Play_exe_settings,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEPlayExeSettingsAccess().getPlay_exe_settingsKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEPlayExeSettingsAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:5799:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:5800:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:5800:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:5801:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:5804:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:5805:6: ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:5805:6: ( ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop46:
            do {
                int alt46=6;
                int LA46_0 = input.LA(1);

                if ( LA46_0 == Strategy && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 0) ) {
                    alt46=1;
                }
                else if ( LA46_0 == Serial && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 1) ) {
                    alt46=2;
                }
                else if ( LA46_0 == Order && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 2) ) {
                    alt46=3;
                }
                else if ( LA46_0 == Throttle && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 3) ) {
                    alt46=4;
                }
                else if ( LA46_0 == Run_once && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 4) ) {
                    alt46=5;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:5806:4: ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5806:4: ({...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5807:5: {...}? => ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:5807:113: ( ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5808:6: ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:5811:9: ({...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5811:10: {...}? => (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5811:19: (otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5811:20: otherlv_3= Strategy ( (lv_strategy_4_0= ruleEStringPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Strategy,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEPlayExeSettingsAccess().getStrategyKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5815:9: ( (lv_strategy_4_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5816:10: (lv_strategy_4_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5816:10: (lv_strategy_4_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5817:11: lv_strategy_4_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayExeSettingsAccess().getStrategyEStringPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_strategy_4_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayExeSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"strategy",
            	      												lv_strategy_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:5840:4: ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5840:4: ({...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5841:5: {...}? => ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:5841:113: ( ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5842:6: ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:5845:9: ({...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5845:10: {...}? => (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5845:19: (otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:5845:20: otherlv_5= Serial ( (lv_serial_list_6_0= ruleEValuePassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Serial,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEPlayExeSettingsAccess().getSerialKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5849:9: ( (lv_serial_list_6_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:5850:10: (lv_serial_list_6_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:5850:10: (lv_serial_list_6_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:5851:11: lv_serial_list_6_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayExeSettingsAccess().getSerial_listEValuePassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_serial_list_6_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayExeSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"serial_list",
            	      												lv_serial_list_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:5874:4: ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5874:4: ({...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5875:5: {...}? => ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:5875:113: ( ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5876:6: ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:5879:9: ({...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5879:10: {...}? => (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5879:19: (otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:5879:20: otherlv_7= Order ( (lv_order_8_0= ruleEStringPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Order,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEPlayExeSettingsAccess().getOrderKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5883:9: ( (lv_order_8_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:5884:10: (lv_order_8_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5884:10: (lv_order_8_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:5885:11: lv_order_8_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayExeSettingsAccess().getOrderEStringPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_order_8_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayExeSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"order",
            	      												lv_order_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:5908:4: ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5908:4: ({...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5909:5: {...}? => ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:5909:113: ( ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5910:6: ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 3);
            	    // InternalAnsibleDslParser.g:5913:9: ({...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5913:10: {...}? => (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5913:19: (otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:5913:20: otherlv_9= Throttle ( (lv_throttle_10_0= ruleENumberPassed ) )
            	    {
            	    otherlv_9=(Token)match(input,Throttle,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getEPlayExeSettingsAccess().getThrottleKeyword_2_3_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5917:9: ( (lv_throttle_10_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:5918:10: (lv_throttle_10_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5918:10: (lv_throttle_10_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:5919:11: lv_throttle_10_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayExeSettingsAccess().getThrottleENumberPassedParserRuleCall_2_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_throttle_10_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayExeSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"throttle",
            	      												lv_throttle_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:5942:4: ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:5942:4: ({...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5943:5: {...}? => ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:5943:113: ( ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:5944:6: ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2(), 4);
            	    // InternalAnsibleDslParser.g:5947:9: ({...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:5947:10: {...}? => (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayExeSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:5947:19: (otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:5947:20: otherlv_11= Run_once ( (lv_run_once_12_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_11=(Token)match(input,Run_once,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getEPlayExeSettingsAccess().getRun_onceKeyword_2_4_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:5951:9: ( (lv_run_once_12_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:5952:10: (lv_run_once_12_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:5952:10: (lv_run_once_12_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:5953:11: lv_run_once_12_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayExeSettingsAccess().getRun_onceEBooleanPassedParserRuleCall_2_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_run_once_12_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayExeSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"run_once",
            	      												lv_run_once_12_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEPlayExeSettingsAccess().getUnorderedGroup_2());

            }

            this_END_13=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_13, grammarAccess.getEPlayExeSettingsAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEPlayExeSettings"


    // $ANTLR start "entryRuleEExecutionExeSettings"
    // InternalAnsibleDslParser.g:5991:1: entryRuleEExecutionExeSettings returns [EObject current=null] : iv_ruleEExecutionExeSettings= ruleEExecutionExeSettings EOF ;
    public final EObject entryRuleEExecutionExeSettings() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEExecutionExeSettings = null;


        try {
            // InternalAnsibleDslParser.g:5991:62: (iv_ruleEExecutionExeSettings= ruleEExecutionExeSettings EOF )
            // InternalAnsibleDslParser.g:5992:2: iv_ruleEExecutionExeSettings= ruleEExecutionExeSettings EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEExecutionExeSettingsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEExecutionExeSettings=ruleEExecutionExeSettings();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEExecutionExeSettings; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEExecutionExeSettings"


    // $ANTLR start "ruleEExecutionExeSettings"
    // InternalAnsibleDslParser.g:5998:1: ruleEExecutionExeSettings returns [EObject current=null] : (otherlv_0= Exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) ;
    public final EObject ruleEExecutionExeSettings() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token this_END_7=null;
        EObject lv_throttle_4_0 = null;

        EObject lv_run_once_6_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:6004:2: ( (otherlv_0= Exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) )
            // InternalAnsibleDslParser.g:6005:2: (otherlv_0= Exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            {
            // InternalAnsibleDslParser.g:6005:2: (otherlv_0= Exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            // InternalAnsibleDslParser.g:6006:3: otherlv_0= Exe_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END
            {
            otherlv_0=(Token)match(input,Exe_settings,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEExecutionExeSettingsAccess().getExe_settingsKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEExecutionExeSettingsAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:6014:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:6015:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:6015:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:6016:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:6019:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:6020:6: ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:6020:6: ( ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop47:
            do {
                int alt47=3;
                int LA47_0 = input.LA(1);

                if ( LA47_0 == Throttle && getUnorderedGroupHelper().canSelect(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 0) ) {
                    alt47=1;
                }
                else if ( LA47_0 == Run_once && getUnorderedGroupHelper().canSelect(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 1) ) {
                    alt47=2;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:6021:4: ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6021:4: ({...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6022:5: {...}? => ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEExecutionExeSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:6022:118: ( ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6023:6: ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:6026:9: ({...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6026:10: {...}? => (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEExecutionExeSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6026:19: (otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:6026:20: otherlv_3= Throttle ( (lv_throttle_4_0= ruleENumberPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Throttle,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEExecutionExeSettingsAccess().getThrottleKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6030:9: ( (lv_throttle_4_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:6031:10: (lv_throttle_4_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6031:10: (lv_throttle_4_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:6032:11: lv_throttle_4_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEExecutionExeSettingsAccess().getThrottleENumberPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_throttle_4_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEExecutionExeSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"throttle",
            	      												lv_throttle_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:6055:4: ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6055:4: ({...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6056:5: {...}? => ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEExecutionExeSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:6056:118: ( ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6057:6: ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:6060:9: ({...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6060:10: {...}? => (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEExecutionExeSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6060:19: (otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6060:20: otherlv_5= Run_once ( (lv_run_once_6_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Run_once,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEExecutionExeSettingsAccess().getRun_onceKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6064:9: ( (lv_run_once_6_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6065:10: (lv_run_once_6_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6065:10: (lv_run_once_6_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6066:11: lv_run_once_6_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEExecutionExeSettingsAccess().getRun_onceEBooleanPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_run_once_6_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEExecutionExeSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"run_once",
            	      												lv_run_once_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEExecutionExeSettingsAccess().getUnorderedGroup_2());

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getEExecutionExeSettingsAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEExecutionExeSettings"


    // $ANTLR start "entryRuleEBlockAndRoleErrorHandling"
    // InternalAnsibleDslParser.g:6104:1: entryRuleEBlockAndRoleErrorHandling returns [EObject current=null] : iv_ruleEBlockAndRoleErrorHandling= ruleEBlockAndRoleErrorHandling EOF ;
    public final EObject entryRuleEBlockAndRoleErrorHandling() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEBlockAndRoleErrorHandling = null;


        try {
            // InternalAnsibleDslParser.g:6104:67: (iv_ruleEBlockAndRoleErrorHandling= ruleEBlockAndRoleErrorHandling EOF )
            // InternalAnsibleDslParser.g:6105:2: iv_ruleEBlockAndRoleErrorHandling= ruleEBlockAndRoleErrorHandling EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEBlockAndRoleErrorHandlingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEBlockAndRoleErrorHandling=ruleEBlockAndRoleErrorHandling();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEBlockAndRoleErrorHandling; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEBlockAndRoleErrorHandling"


    // $ANTLR start "ruleEBlockAndRoleErrorHandling"
    // InternalAnsibleDslParser.g:6111:1: ruleEBlockAndRoleErrorHandling returns [EObject current=null] : (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END ) ;
    public final EObject ruleEBlockAndRoleErrorHandling() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token this_END_9=null;
        EObject lv_any_errors_fatal_4_0 = null;

        EObject lv_ignore_errors_6_0 = null;

        EObject lv_ignore_unreachable_8_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:6117:2: ( (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END ) )
            // InternalAnsibleDslParser.g:6118:2: (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END )
            {
            // InternalAnsibleDslParser.g:6118:2: (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END )
            // InternalAnsibleDslParser.g:6119:3: otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_9= RULE_END
            {
            otherlv_0=(Token)match(input,Error_handling,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEBlockAndRoleErrorHandlingAccess().getError_handlingKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEBlockAndRoleErrorHandlingAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:6127:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:6128:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:6128:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:6129:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:6132:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:6133:6: ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:6133:6: ( ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop48:
            do {
                int alt48=4;
                int LA48_0 = input.LA(1);

                if ( LA48_0 == Any_errors_fatal && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 0) ) {
                    alt48=1;
                }
                else if ( LA48_0 == Ignore_errors && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 1) ) {
                    alt48=2;
                }
                else if ( LA48_0 == Ignore_unreachable && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 2) ) {
                    alt48=3;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:6134:4: ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6134:4: ({...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6135:5: {...}? => ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlockAndRoleErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:6135:123: ( ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6136:6: ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:6139:9: ({...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6139:10: {...}? => (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlockAndRoleErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6139:19: (otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6139:20: otherlv_3= Any_errors_fatal ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Any_errors_fatal,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEBlockAndRoleErrorHandlingAccess().getAny_errors_fatalKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6143:9: ( (lv_any_errors_fatal_4_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6144:10: (lv_any_errors_fatal_4_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6144:10: (lv_any_errors_fatal_4_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6145:11: lv_any_errors_fatal_4_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getAny_errors_fatalEBooleanPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_any_errors_fatal_4_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockAndRoleErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"any_errors_fatal",
            	      												lv_any_errors_fatal_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:6168:4: ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6168:4: ({...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6169:5: {...}? => ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlockAndRoleErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:6169:123: ( ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6170:6: ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:6173:9: ({...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6173:10: {...}? => (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlockAndRoleErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6173:19: (otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6173:20: otherlv_5= Ignore_errors ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Ignore_errors,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEBlockAndRoleErrorHandlingAccess().getIgnore_errorsKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6177:9: ( (lv_ignore_errors_6_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6178:10: (lv_ignore_errors_6_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6178:10: (lv_ignore_errors_6_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6179:11: lv_ignore_errors_6_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getIgnore_errorsEBooleanPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_ignore_errors_6_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockAndRoleErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"ignore_errors",
            	      												lv_ignore_errors_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:6202:4: ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6202:4: ({...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6203:5: {...}? => ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlockAndRoleErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:6203:123: ( ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6204:6: ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:6207:9: ({...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6207:10: {...}? => (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEBlockAndRoleErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6207:19: (otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6207:20: otherlv_7= Ignore_unreachable ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Ignore_unreachable,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEBlockAndRoleErrorHandlingAccess().getIgnore_unreachableKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6211:9: ( (lv_ignore_unreachable_8_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6212:10: (lv_ignore_unreachable_8_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6212:10: (lv_ignore_unreachable_8_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6213:11: lv_ignore_unreachable_8_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getIgnore_unreachableEBooleanPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_ignore_unreachable_8_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEBlockAndRoleErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"ignore_unreachable",
            	      												lv_ignore_unreachable_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEBlockAndRoleErrorHandlingAccess().getUnorderedGroup_2());

            }

            this_END_9=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_9, grammarAccess.getEBlockAndRoleErrorHandlingAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEBlockAndRoleErrorHandling"


    // $ANTLR start "entryRuleEPlayErrorHandling"
    // InternalAnsibleDslParser.g:6251:1: entryRuleEPlayErrorHandling returns [EObject current=null] : iv_ruleEPlayErrorHandling= ruleEPlayErrorHandling EOF ;
    public final EObject entryRuleEPlayErrorHandling() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEPlayErrorHandling = null;


        try {
            // InternalAnsibleDslParser.g:6251:59: (iv_ruleEPlayErrorHandling= ruleEPlayErrorHandling EOF )
            // InternalAnsibleDslParser.g:6252:2: iv_ruleEPlayErrorHandling= ruleEPlayErrorHandling EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEPlayErrorHandlingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEPlayErrorHandling=ruleEPlayErrorHandling();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEPlayErrorHandling; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEPlayErrorHandling"


    // $ANTLR start "ruleEPlayErrorHandling"
    // InternalAnsibleDslParser.g:6258:1: ruleEPlayErrorHandling returns [EObject current=null] : (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END ) ;
    public final EObject ruleEPlayErrorHandling() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token this_END_11=null;
        EObject lv_max_fail_percentage_4_0 = null;

        EObject lv_any_errors_fatal_6_0 = null;

        EObject lv_ignore_errors_8_0 = null;

        EObject lv_ignore_unreachable_10_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:6264:2: ( (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END ) )
            // InternalAnsibleDslParser.g:6265:2: (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END )
            {
            // InternalAnsibleDslParser.g:6265:2: (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END )
            // InternalAnsibleDslParser.g:6266:3: otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END
            {
            otherlv_0=(Token)match(input,Error_handling,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEPlayErrorHandlingAccess().getError_handlingKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEPlayErrorHandlingAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:6274:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:6275:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:6275:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:6276:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:6279:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:6280:6: ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:6280:6: ( ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop49:
            do {
                int alt49=5;
                int LA49_0 = input.LA(1);

                if ( LA49_0 == Max_fail_percentage && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 0) ) {
                    alt49=1;
                }
                else if ( LA49_0 == Any_errors_fatal && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 1) ) {
                    alt49=2;
                }
                else if ( LA49_0 == Ignore_errors && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 2) ) {
                    alt49=3;
                }
                else if ( LA49_0 == Ignore_unreachable && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 3) ) {
                    alt49=4;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:6281:4: ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6281:4: ({...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6282:5: {...}? => ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:6282:115: ( ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6283:6: ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:6286:9: ({...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6286:10: {...}? => (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6286:19: (otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:6286:20: otherlv_3= Max_fail_percentage ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Max_fail_percentage,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEPlayErrorHandlingAccess().getMax_fail_percentageKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6290:9: ( (lv_max_fail_percentage_4_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:6291:10: (lv_max_fail_percentage_4_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6291:10: (lv_max_fail_percentage_4_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:6292:11: lv_max_fail_percentage_4_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayErrorHandlingAccess().getMax_fail_percentageENumberPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_max_fail_percentage_4_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"max_fail_percentage",
            	      												lv_max_fail_percentage_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:6315:4: ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6315:4: ({...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6316:5: {...}? => ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:6316:115: ( ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6317:6: ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:6320:9: ({...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6320:10: {...}? => (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6320:19: (otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6320:20: otherlv_5= Any_errors_fatal ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Any_errors_fatal,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEPlayErrorHandlingAccess().getAny_errors_fatalKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6324:9: ( (lv_any_errors_fatal_6_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6325:10: (lv_any_errors_fatal_6_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6325:10: (lv_any_errors_fatal_6_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6326:11: lv_any_errors_fatal_6_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayErrorHandlingAccess().getAny_errors_fatalEBooleanPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_any_errors_fatal_6_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"any_errors_fatal",
            	      												lv_any_errors_fatal_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:6349:4: ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6349:4: ({...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6350:5: {...}? => ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:6350:115: ( ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6351:6: ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:6354:9: ({...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6354:10: {...}? => (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6354:19: (otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6354:20: otherlv_7= Ignore_errors ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Ignore_errors,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEPlayErrorHandlingAccess().getIgnore_errorsKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6358:9: ( (lv_ignore_errors_8_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6359:10: (lv_ignore_errors_8_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6359:10: (lv_ignore_errors_8_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6360:11: lv_ignore_errors_8_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayErrorHandlingAccess().getIgnore_errorsEBooleanPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_ignore_errors_8_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"ignore_errors",
            	      												lv_ignore_errors_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:6383:4: ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6383:4: ({...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6384:5: {...}? => ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:6384:115: ( ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6385:6: ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2(), 3);
            	    // InternalAnsibleDslParser.g:6388:9: ({...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6388:10: {...}? => (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEPlayErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6388:19: (otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6388:20: otherlv_9= Ignore_unreachable ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_9=(Token)match(input,Ignore_unreachable,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getEPlayErrorHandlingAccess().getIgnore_unreachableKeyword_2_3_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6392:9: ( (lv_ignore_unreachable_10_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6393:10: (lv_ignore_unreachable_10_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6393:10: (lv_ignore_unreachable_10_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6394:11: lv_ignore_unreachable_10_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEPlayErrorHandlingAccess().getIgnore_unreachableEBooleanPassedParserRuleCall_2_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_ignore_unreachable_10_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEPlayErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"ignore_unreachable",
            	      												lv_ignore_unreachable_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEPlayErrorHandlingAccess().getUnorderedGroup_2());

            }

            this_END_11=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_11, grammarAccess.getEPlayErrorHandlingAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEPlayErrorHandling"


    // $ANTLR start "entryRuleETaskHandlerErrorHandling"
    // InternalAnsibleDslParser.g:6432:1: entryRuleETaskHandlerErrorHandling returns [EObject current=null] : iv_ruleETaskHandlerErrorHandling= ruleETaskHandlerErrorHandling EOF ;
    public final EObject entryRuleETaskHandlerErrorHandling() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleETaskHandlerErrorHandling = null;


        try {
            // InternalAnsibleDslParser.g:6432:66: (iv_ruleETaskHandlerErrorHandling= ruleETaskHandlerErrorHandling EOF )
            // InternalAnsibleDslParser.g:6433:2: iv_ruleETaskHandlerErrorHandling= ruleETaskHandlerErrorHandling EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getETaskHandlerErrorHandlingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleETaskHandlerErrorHandling=ruleETaskHandlerErrorHandling();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleETaskHandlerErrorHandling; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleETaskHandlerErrorHandling"


    // $ANTLR start "ruleETaskHandlerErrorHandling"
    // InternalAnsibleDslParser.g:6439:1: ruleETaskHandlerErrorHandling returns [EObject current=null] : (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) ;
    public final EObject ruleETaskHandlerErrorHandling() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token this_END_13=null;
        EObject lv_changed_when_4_0 = null;

        EObject lv_failed_when_6_0 = null;

        EObject lv_any_errors_fatal_8_0 = null;

        EObject lv_ignore_errors_10_0 = null;

        EObject lv_ignore_unreachable_12_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:6445:2: ( (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END ) )
            // InternalAnsibleDslParser.g:6446:2: (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            {
            // InternalAnsibleDslParser.g:6446:2: (otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END )
            // InternalAnsibleDslParser.g:6447:3: otherlv_0= Error_handling this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_13= RULE_END
            {
            otherlv_0=(Token)match(input,Error_handling,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getETaskHandlerErrorHandlingAccess().getError_handlingKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getETaskHandlerErrorHandlingAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:6455:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:6456:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:6456:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:6457:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:6460:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:6461:6: ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:6461:6: ( ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop50:
            do {
                int alt50=6;
                int LA50_0 = input.LA(1);

                if ( LA50_0 == Changed_when && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 0) ) {
                    alt50=1;
                }
                else if ( LA50_0 == Failed_when && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 1) ) {
                    alt50=2;
                }
                else if ( LA50_0 == Any_errors_fatal && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 2) ) {
                    alt50=3;
                }
                else if ( LA50_0 == Ignore_errors && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 3) ) {
                    alt50=4;
                }
                else if ( LA50_0 == Ignore_unreachable && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 4) ) {
                    alt50=5;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:6462:4: ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6462:4: ({...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6463:5: {...}? => ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:6463:122: ( ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6464:6: ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:6467:9: ({...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) ) )
            	    // InternalAnsibleDslParser.g:6467:10: {...}? => (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6467:19: (otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) ) )
            	    // InternalAnsibleDslParser.g:6467:20: otherlv_3= Changed_when ( (lv_changed_when_4_0= ruleECondition ) )
            	    {
            	    otherlv_3=(Token)match(input,Changed_when,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getETaskHandlerErrorHandlingAccess().getChanged_whenKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6471:9: ( (lv_changed_when_4_0= ruleECondition ) )
            	    // InternalAnsibleDslParser.g:6472:10: (lv_changed_when_4_0= ruleECondition )
            	    {
            	    // InternalAnsibleDslParser.g:6472:10: (lv_changed_when_4_0= ruleECondition )
            	    // InternalAnsibleDslParser.g:6473:11: lv_changed_when_4_0= ruleECondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskHandlerErrorHandlingAccess().getChanged_whenEConditionParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_changed_when_4_0=ruleECondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskHandlerErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"changed_when",
            	      												lv_changed_when_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECondition");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:6496:4: ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6496:4: ({...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6497:5: {...}? => ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:6497:122: ( ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6498:6: ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:6501:9: ({...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) ) )
            	    // InternalAnsibleDslParser.g:6501:10: {...}? => (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6501:19: (otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) ) )
            	    // InternalAnsibleDslParser.g:6501:20: otherlv_5= Failed_when ( (lv_failed_when_6_0= ruleECondition ) )
            	    {
            	    otherlv_5=(Token)match(input,Failed_when,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getETaskHandlerErrorHandlingAccess().getFailed_whenKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6505:9: ( (lv_failed_when_6_0= ruleECondition ) )
            	    // InternalAnsibleDslParser.g:6506:10: (lv_failed_when_6_0= ruleECondition )
            	    {
            	    // InternalAnsibleDslParser.g:6506:10: (lv_failed_when_6_0= ruleECondition )
            	    // InternalAnsibleDslParser.g:6507:11: lv_failed_when_6_0= ruleECondition
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskHandlerErrorHandlingAccess().getFailed_whenEConditionParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_failed_when_6_0=ruleECondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskHandlerErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"failed_when",
            	      												lv_failed_when_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ECondition");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:6530:4: ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6530:4: ({...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6531:5: {...}? => ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:6531:122: ( ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6532:6: ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:6535:9: ({...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6535:10: {...}? => (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6535:19: (otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6535:20: otherlv_7= Any_errors_fatal ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Any_errors_fatal,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getETaskHandlerErrorHandlingAccess().getAny_errors_fatalKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6539:9: ( (lv_any_errors_fatal_8_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6540:10: (lv_any_errors_fatal_8_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6540:10: (lv_any_errors_fatal_8_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6541:11: lv_any_errors_fatal_8_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskHandlerErrorHandlingAccess().getAny_errors_fatalEBooleanPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_any_errors_fatal_8_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskHandlerErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"any_errors_fatal",
            	      												lv_any_errors_fatal_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:6564:4: ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6564:4: ({...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6565:5: {...}? => ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:6565:122: ( ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6566:6: ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 3);
            	    // InternalAnsibleDslParser.g:6569:9: ({...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6569:10: {...}? => (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6569:19: (otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6569:20: otherlv_9= Ignore_errors ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_9=(Token)match(input,Ignore_errors,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getETaskHandlerErrorHandlingAccess().getIgnore_errorsKeyword_2_3_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6573:9: ( (lv_ignore_errors_10_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6574:10: (lv_ignore_errors_10_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6574:10: (lv_ignore_errors_10_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6575:11: lv_ignore_errors_10_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskHandlerErrorHandlingAccess().getIgnore_errorsEBooleanPassedParserRuleCall_2_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_ignore_errors_10_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskHandlerErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"ignore_errors",
            	      												lv_ignore_errors_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalAnsibleDslParser.g:6598:4: ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6598:4: ({...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6599:5: {...}? => ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "getUnorderedGroupHelper().canSelect(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalAnsibleDslParser.g:6599:122: ( ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6600:6: ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2(), 4);
            	    // InternalAnsibleDslParser.g:6603:9: ({...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6603:10: {...}? => (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleETaskHandlerErrorHandling", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6603:19: (otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6603:20: otherlv_11= Ignore_unreachable ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_11=(Token)match(input,Ignore_unreachable,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getETaskHandlerErrorHandlingAccess().getIgnore_unreachableKeyword_2_4_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6607:9: ( (lv_ignore_unreachable_12_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6608:10: (lv_ignore_unreachable_12_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6608:10: (lv_ignore_unreachable_12_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6609:11: lv_ignore_unreachable_12_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getETaskHandlerErrorHandlingAccess().getIgnore_unreachableEBooleanPassedParserRuleCall_2_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_ignore_unreachable_12_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getETaskHandlerErrorHandlingRule());
            	      											}
            	      											set(
            	      												current,
            	      												"ignore_unreachable",
            	      												lv_ignore_unreachable_12_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getETaskHandlerErrorHandlingAccess().getUnorderedGroup_2());

            }

            this_END_13=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_13, grammarAccess.getETaskHandlerErrorHandlingAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleETaskHandlerErrorHandling"


    // $ANTLR start "entryRuleEFactsSettings"
    // InternalAnsibleDslParser.g:6647:1: entryRuleEFactsSettings returns [EObject current=null] : iv_ruleEFactsSettings= ruleEFactsSettings EOF ;
    public final EObject entryRuleEFactsSettings() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEFactsSettings = null;


        try {
            // InternalAnsibleDslParser.g:6647:55: (iv_ruleEFactsSettings= ruleEFactsSettings EOF )
            // InternalAnsibleDslParser.g:6648:2: iv_ruleEFactsSettings= ruleEFactsSettings EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEFactsSettingsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEFactsSettings=ruleEFactsSettings();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEFactsSettings; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEFactsSettings"


    // $ANTLR start "ruleEFactsSettings"
    // InternalAnsibleDslParser.g:6654:1: ruleEFactsSettings returns [EObject current=null] : (otherlv_0= Facts_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END ) ;
    public final EObject ruleEFactsSettings() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token this_END_11=null;
        EObject lv_gather_facts_4_0 = null;

        EObject lv_gather_subset_6_0 = null;

        EObject lv_gather_timeout_8_0 = null;

        EObject lv_fact_path_10_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:6660:2: ( (otherlv_0= Facts_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END ) )
            // InternalAnsibleDslParser.g:6661:2: (otherlv_0= Facts_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END )
            {
            // InternalAnsibleDslParser.g:6661:2: (otherlv_0= Facts_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END )
            // InternalAnsibleDslParser.g:6662:3: otherlv_0= Facts_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) ) this_END_11= RULE_END
            {
            otherlv_0=(Token)match(input,Facts_settings,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEFactsSettingsAccess().getFacts_settingsKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEFactsSettingsAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:6670:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:6671:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:6671:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:6672:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:6675:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:6676:6: ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:6676:6: ( ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) ) )*
            loop51:
            do {
                int alt51=5;
                int LA51_0 = input.LA(1);

                if ( LA51_0 == Gather_facts && getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 0) ) {
                    alt51=1;
                }
                else if ( LA51_0 == Gather_subset && getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 1) ) {
                    alt51=2;
                }
                else if ( LA51_0 == Gather_timeout && getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 2) ) {
                    alt51=3;
                }
                else if ( LA51_0 == Fact_path && getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 3) ) {
                    alt51=4;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:6677:4: ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6677:4: ({...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6678:5: {...}? => ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:6678:111: ( ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6679:6: ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:6682:9: ({...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6682:10: {...}? => (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6682:19: (otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6682:20: otherlv_3= Gather_facts ( (lv_gather_facts_4_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Gather_facts,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEFactsSettingsAccess().getGather_factsKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6686:9: ( (lv_gather_facts_4_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6687:10: (lv_gather_facts_4_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6687:10: (lv_gather_facts_4_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6688:11: lv_gather_facts_4_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEFactsSettingsAccess().getGather_factsEBooleanPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_gather_facts_4_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEFactsSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"gather_facts",
            	      												lv_gather_facts_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:6711:4: ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6711:4: ({...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6712:5: {...}? => ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:6712:111: ( ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6713:6: ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:6716:9: ({...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6716:10: {...}? => (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6716:19: (otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) ) )
            	    // InternalAnsibleDslParser.g:6716:20: otherlv_5= Gather_subset ( (lv_gather_subset_6_0= ruleEValuePassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Gather_subset,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEFactsSettingsAccess().getGather_subsetKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6720:9: ( (lv_gather_subset_6_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:6721:10: (lv_gather_subset_6_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:6721:10: (lv_gather_subset_6_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:6722:11: lv_gather_subset_6_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEFactsSettingsAccess().getGather_subsetEValuePassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_gather_subset_6_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEFactsSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"gather_subset",
            	      												lv_gather_subset_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalAnsibleDslParser.g:6745:4: ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6745:4: ({...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6746:5: {...}? => ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalAnsibleDslParser.g:6746:111: ( ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6747:6: ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 2);
            	    // InternalAnsibleDslParser.g:6750:9: ({...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6750:10: {...}? => (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6750:19: (otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:6750:20: otherlv_7= Gather_timeout ( (lv_gather_timeout_8_0= ruleENumberPassed ) )
            	    {
            	    otherlv_7=(Token)match(input,Gather_timeout,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getEFactsSettingsAccess().getGather_timeoutKeyword_2_2_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6754:9: ( (lv_gather_timeout_8_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:6755:10: (lv_gather_timeout_8_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6755:10: (lv_gather_timeout_8_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:6756:11: lv_gather_timeout_8_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEFactsSettingsAccess().getGather_timeoutENumberPassedParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_gather_timeout_8_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEFactsSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"gather_timeout",
            	      												lv_gather_timeout_8_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalAnsibleDslParser.g:6779:4: ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6779:4: ({...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6780:5: {...}? => ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalAnsibleDslParser.g:6780:111: ( ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6781:6: ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2(), 3);
            	    // InternalAnsibleDslParser.g:6784:9: ({...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6784:10: {...}? => (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEFactsSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6784:19: (otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:6784:20: otherlv_9= Fact_path ( (lv_fact_path_10_0= ruleEStringPassed ) )
            	    {
            	    otherlv_9=(Token)match(input,Fact_path,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getEFactsSettingsAccess().getFact_pathKeyword_2_3_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6788:9: ( (lv_fact_path_10_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:6789:10: (lv_fact_path_10_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6789:10: (lv_fact_path_10_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:6790:11: lv_fact_path_10_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEFactsSettingsAccess().getFact_pathEStringPassedParserRuleCall_2_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_fact_path_10_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEFactsSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"fact_path",
            	      												lv_fact_path_10_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEFactsSettingsAccess().getUnorderedGroup_2());

            }

            this_END_11=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_11, grammarAccess.getEFactsSettingsAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEFactsSettings"


    // $ANTLR start "entryRuleEDelegation"
    // InternalAnsibleDslParser.g:6828:1: entryRuleEDelegation returns [EObject current=null] : iv_ruleEDelegation= ruleEDelegation EOF ;
    public final EObject entryRuleEDelegation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDelegation = null;


        try {
            // InternalAnsibleDslParser.g:6828:52: (iv_ruleEDelegation= ruleEDelegation EOF )
            // InternalAnsibleDslParser.g:6829:2: iv_ruleEDelegation= ruleEDelegation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDelegationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDelegation=ruleEDelegation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDelegation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDelegation"


    // $ANTLR start "ruleEDelegation"
    // InternalAnsibleDslParser.g:6835:1: ruleEDelegation returns [EObject current=null] : (otherlv_0= Delegation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) ;
    public final EObject ruleEDelegation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token this_END_7=null;
        EObject lv_delegate_to_4_0 = null;

        EObject lv_delegate_facts_6_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:6841:2: ( (otherlv_0= Delegation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) )
            // InternalAnsibleDslParser.g:6842:2: (otherlv_0= Delegation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            {
            // InternalAnsibleDslParser.g:6842:2: (otherlv_0= Delegation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            // InternalAnsibleDslParser.g:6843:3: otherlv_0= Delegation this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END
            {
            otherlv_0=(Token)match(input,Delegation,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEDelegationAccess().getDelegationKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEDelegationAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:6851:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:6852:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:6852:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:6853:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEDelegationAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:6856:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:6857:6: ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:6857:6: ( ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) ) )*
            loop52:
            do {
                int alt52=3;
                int LA52_0 = input.LA(1);

                if ( LA52_0 == Delegate_to && getUnorderedGroupHelper().canSelect(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 0) ) {
                    alt52=1;
                }
                else if ( LA52_0 == Delegate_facts && getUnorderedGroupHelper().canSelect(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 1) ) {
                    alt52=2;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:6858:4: ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6858:4: ({...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6859:5: {...}? => ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEDelegation", "getUnorderedGroupHelper().canSelect(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:6859:108: ( ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6860:6: ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:6863:9: ({...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6863:10: {...}? => (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEDelegation", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6863:19: (otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) ) )
            	    // InternalAnsibleDslParser.g:6863:20: otherlv_3= Delegate_to ( (lv_delegate_to_4_0= ruleEStringPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Delegate_to,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEDelegationAccess().getDelegate_toKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6867:9: ( (lv_delegate_to_4_0= ruleEStringPassed ) )
            	    // InternalAnsibleDslParser.g:6868:10: (lv_delegate_to_4_0= ruleEStringPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6868:10: (lv_delegate_to_4_0= ruleEStringPassed )
            	    // InternalAnsibleDslParser.g:6869:11: lv_delegate_to_4_0= ruleEStringPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEDelegationAccess().getDelegate_toEStringPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_delegate_to_4_0=ruleEStringPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEDelegationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"delegate_to",
            	      												lv_delegate_to_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EStringPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEDelegationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:6892:4: ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6892:4: ({...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6893:5: {...}? => ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEDelegation", "getUnorderedGroupHelper().canSelect(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:6893:108: ( ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6894:6: ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEDelegationAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:6897:9: ({...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6897:10: {...}? => (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEDelegation", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6897:19: (otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) ) )
            	    // InternalAnsibleDslParser.g:6897:20: otherlv_5= Delegate_facts ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Delegate_facts,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEDelegationAccess().getDelegate_factsKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6901:9: ( (lv_delegate_facts_6_0= ruleEBooleanPassed ) )
            	    // InternalAnsibleDslParser.g:6902:10: (lv_delegate_facts_6_0= ruleEBooleanPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6902:10: (lv_delegate_facts_6_0= ruleEBooleanPassed )
            	    // InternalAnsibleDslParser.g:6903:11: lv_delegate_facts_6_0= ruleEBooleanPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEDelegationAccess().getDelegate_factsEBooleanPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_delegate_facts_6_0=ruleEBooleanPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEDelegationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"delegate_facts",
            	      												lv_delegate_facts_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEDelegationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEDelegationAccess().getUnorderedGroup_2());

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getEDelegationAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDelegation"


    // $ANTLR start "entryRuleEAsynchronousSettings"
    // InternalAnsibleDslParser.g:6941:1: entryRuleEAsynchronousSettings returns [EObject current=null] : iv_ruleEAsynchronousSettings= ruleEAsynchronousSettings EOF ;
    public final EObject entryRuleEAsynchronousSettings() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEAsynchronousSettings = null;


        try {
            // InternalAnsibleDslParser.g:6941:62: (iv_ruleEAsynchronousSettings= ruleEAsynchronousSettings EOF )
            // InternalAnsibleDslParser.g:6942:2: iv_ruleEAsynchronousSettings= ruleEAsynchronousSettings EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEAsynchronousSettingsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEAsynchronousSettings=ruleEAsynchronousSettings();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEAsynchronousSettings; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEAsynchronousSettings"


    // $ANTLR start "ruleEAsynchronousSettings"
    // InternalAnsibleDslParser.g:6948:1: ruleEAsynchronousSettings returns [EObject current=null] : (otherlv_0= Asynchronous_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) ;
    public final EObject ruleEAsynchronousSettings() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token this_END_7=null;
        EObject lv_async_4_0 = null;

        EObject lv_poll_6_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:6954:2: ( (otherlv_0= Asynchronous_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END ) )
            // InternalAnsibleDslParser.g:6955:2: (otherlv_0= Asynchronous_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            {
            // InternalAnsibleDslParser.g:6955:2: (otherlv_0= Asynchronous_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END )
            // InternalAnsibleDslParser.g:6956:3: otherlv_0= Asynchronous_settings this_BEGIN_1= RULE_BEGIN ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) ) this_END_7= RULE_END
            {
            otherlv_0=(Token)match(input,Asynchronous_settings,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEAsynchronousSettingsAccess().getAsynchronous_settingsKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEAsynchronousSettingsAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:6964:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) ) )
            // InternalAnsibleDslParser.g:6965:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) )
            {
            // InternalAnsibleDslParser.g:6965:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* ) )
            // InternalAnsibleDslParser.g:6966:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2());
            // InternalAnsibleDslParser.g:6969:5: ( ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )* )
            // InternalAnsibleDslParser.g:6970:6: ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )*
            {
            // InternalAnsibleDslParser.g:6970:6: ( ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) ) )*
            loop53:
            do {
                int alt53=3;
                int LA53_0 = input.LA(1);

                if ( LA53_0 == Async && getUnorderedGroupHelper().canSelect(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 0) ) {
                    alt53=1;
                }
                else if ( LA53_0 == Poll && getUnorderedGroupHelper().canSelect(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 1) ) {
                    alt53=2;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:6971:4: ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:6971:4: ({...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6972:5: {...}? => ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEAsynchronousSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalAnsibleDslParser.g:6972:118: ( ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:6973:6: ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 0);
            	    // InternalAnsibleDslParser.g:6976:9: ({...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:6976:10: {...}? => (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEAsynchronousSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:6976:19: (otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:6976:20: otherlv_3= Async ( (lv_async_4_0= ruleENumberPassed ) )
            	    {
            	    otherlv_3=(Token)match(input,Async,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getEAsynchronousSettingsAccess().getAsyncKeyword_2_0_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:6980:9: ( (lv_async_4_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:6981:10: (lv_async_4_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:6981:10: (lv_async_4_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:6982:11: lv_async_4_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEAsynchronousSettingsAccess().getAsyncENumberPassedParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_async_4_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEAsynchronousSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"async",
            	      												lv_async_4_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalAnsibleDslParser.g:7005:4: ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) )
            	    {
            	    // InternalAnsibleDslParser.g:7005:4: ({...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) ) )
            	    // InternalAnsibleDslParser.g:7006:5: {...}? => ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEAsynchronousSettings", "getUnorderedGroupHelper().canSelect(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalAnsibleDslParser.g:7006:118: ( ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) ) )
            	    // InternalAnsibleDslParser.g:7007:6: ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2(), 1);
            	    // InternalAnsibleDslParser.g:7010:9: ({...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) ) )
            	    // InternalAnsibleDslParser.g:7010:10: {...}? => (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleEAsynchronousSettings", "true");
            	    }
            	    // InternalAnsibleDslParser.g:7010:19: (otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) ) )
            	    // InternalAnsibleDslParser.g:7010:20: otherlv_5= Poll ( (lv_poll_6_0= ruleENumberPassed ) )
            	    {
            	    otherlv_5=(Token)match(input,Poll,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getEAsynchronousSettingsAccess().getPollKeyword_2_1_0());
            	      								
            	    }
            	    // InternalAnsibleDslParser.g:7014:9: ( (lv_poll_6_0= ruleENumberPassed ) )
            	    // InternalAnsibleDslParser.g:7015:10: (lv_poll_6_0= ruleENumberPassed )
            	    {
            	    // InternalAnsibleDslParser.g:7015:10: (lv_poll_6_0= ruleENumberPassed )
            	    // InternalAnsibleDslParser.g:7016:11: lv_poll_6_0= ruleENumberPassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getEAsynchronousSettingsAccess().getPollENumberPassedParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_poll_6_0=ruleENumberPassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getEAsynchronousSettingsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"poll",
            	      												lv_poll_6_0,
            	      												"org.sodalite.sdl.ansible.AnsibleDsl.ENumberPassed");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getEAsynchronousSettingsAccess().getUnorderedGroup_2());

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getEAsynchronousSettingsAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEAsynchronousSettings"


    // $ANTLR start "entryRuleENotifiable"
    // InternalAnsibleDslParser.g:7054:1: entryRuleENotifiable returns [EObject current=null] : iv_ruleENotifiable= ruleENotifiable EOF ;
    public final EObject entryRuleENotifiable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleENotifiable = null;


        try {
            // InternalAnsibleDslParser.g:7054:52: (iv_ruleENotifiable= ruleENotifiable EOF )
            // InternalAnsibleDslParser.g:7055:2: iv_ruleENotifiable= ruleENotifiable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getENotifiableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleENotifiable=ruleENotifiable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleENotifiable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleENotifiable"


    // $ANTLR start "ruleENotifiable"
    // InternalAnsibleDslParser.g:7061:1: ruleENotifiable returns [EObject current=null] : (this_ENotifiedHandler_0= ruleENotifiedHandler | this_ENotifiedTopic_1= ruleENotifiedTopic ) ;
    public final EObject ruleENotifiable() throws RecognitionException {
        EObject current = null;

        EObject this_ENotifiedHandler_0 = null;

        EObject this_ENotifiedTopic_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7067:2: ( (this_ENotifiedHandler_0= ruleENotifiedHandler | this_ENotifiedTopic_1= ruleENotifiedTopic ) )
            // InternalAnsibleDslParser.g:7068:2: (this_ENotifiedHandler_0= ruleENotifiedHandler | this_ENotifiedTopic_1= ruleENotifiedTopic )
            {
            // InternalAnsibleDslParser.g:7068:2: (this_ENotifiedHandler_0= ruleENotifiedHandler | this_ENotifiedTopic_1= ruleENotifiedTopic )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_STRING) ) {
                alt54=1;
            }
            else if ( (LA54_0==Topic) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalAnsibleDslParser.g:7069:3: this_ENotifiedHandler_0= ruleENotifiedHandler
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getENotifiableAccess().getENotifiedHandlerParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ENotifiedHandler_0=ruleENotifiedHandler();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ENotifiedHandler_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7078:3: this_ENotifiedTopic_1= ruleENotifiedTopic
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getENotifiableAccess().getENotifiedTopicParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ENotifiedTopic_1=ruleENotifiedTopic();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ENotifiedTopic_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleENotifiable"


    // $ANTLR start "entryRuleENotifiedHandler"
    // InternalAnsibleDslParser.g:7090:1: entryRuleENotifiedHandler returns [EObject current=null] : iv_ruleENotifiedHandler= ruleENotifiedHandler EOF ;
    public final EObject entryRuleENotifiedHandler() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleENotifiedHandler = null;


        try {
            // InternalAnsibleDslParser.g:7090:57: (iv_ruleENotifiedHandler= ruleENotifiedHandler EOF )
            // InternalAnsibleDslParser.g:7091:2: iv_ruleENotifiedHandler= ruleENotifiedHandler EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getENotifiedHandlerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleENotifiedHandler=ruleENotifiedHandler();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleENotifiedHandler; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleENotifiedHandler"


    // $ANTLR start "ruleENotifiedHandler"
    // InternalAnsibleDslParser.g:7097:1: ruleENotifiedHandler returns [EObject current=null] : ( (otherlv_0= RULE_STRING ) ) ;
    public final EObject ruleENotifiedHandler() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7103:2: ( ( (otherlv_0= RULE_STRING ) ) )
            // InternalAnsibleDslParser.g:7104:2: ( (otherlv_0= RULE_STRING ) )
            {
            // InternalAnsibleDslParser.g:7104:2: ( (otherlv_0= RULE_STRING ) )
            // InternalAnsibleDslParser.g:7105:3: (otherlv_0= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:7105:3: (otherlv_0= RULE_STRING )
            // InternalAnsibleDslParser.g:7106:4: otherlv_0= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getENotifiedHandlerRule());
              				}
              			
            }
            otherlv_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getENotifiedHandlerAccess().getNameEHandlerCrossReference_0());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleENotifiedHandler"


    // $ANTLR start "entryRuleENotifiedTopic"
    // InternalAnsibleDslParser.g:7120:1: entryRuleENotifiedTopic returns [EObject current=null] : iv_ruleENotifiedTopic= ruleENotifiedTopic EOF ;
    public final EObject entryRuleENotifiedTopic() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleENotifiedTopic = null;


        try {
            // InternalAnsibleDslParser.g:7120:55: (iv_ruleENotifiedTopic= ruleENotifiedTopic EOF )
            // InternalAnsibleDslParser.g:7121:2: iv_ruleENotifiedTopic= ruleENotifiedTopic EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getENotifiedTopicRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleENotifiedTopic=ruleENotifiedTopic();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleENotifiedTopic; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleENotifiedTopic"


    // $ANTLR start "ruleENotifiedTopic"
    // InternalAnsibleDslParser.g:7127:1: ruleENotifiedTopic returns [EObject current=null] : (otherlv_0= Topic ( (lv_name_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleENotifiedTopic() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7133:2: ( (otherlv_0= Topic ( (lv_name_1_0= RULE_STRING ) ) ) )
            // InternalAnsibleDslParser.g:7134:2: (otherlv_0= Topic ( (lv_name_1_0= RULE_STRING ) ) )
            {
            // InternalAnsibleDslParser.g:7134:2: (otherlv_0= Topic ( (lv_name_1_0= RULE_STRING ) ) )
            // InternalAnsibleDslParser.g:7135:3: otherlv_0= Topic ( (lv_name_1_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,Topic,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getENotifiedTopicAccess().getTopicKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:7139:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalAnsibleDslParser.g:7140:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:7140:4: (lv_name_1_0= RULE_STRING )
            // InternalAnsibleDslParser.g:7141:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getENotifiedTopicAccess().getNameSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getENotifiedTopicRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleENotifiedTopic"


    // $ANTLR start "entryRuleEJinjaOrString"
    // InternalAnsibleDslParser.g:7161:1: entryRuleEJinjaOrString returns [EObject current=null] : iv_ruleEJinjaOrString= ruleEJinjaOrString EOF ;
    public final EObject entryRuleEJinjaOrString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEJinjaOrString = null;


        try {
            // InternalAnsibleDslParser.g:7161:55: (iv_ruleEJinjaOrString= ruleEJinjaOrString EOF )
            // InternalAnsibleDslParser.g:7162:2: iv_ruleEJinjaOrString= ruleEJinjaOrString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEJinjaOrStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEJinjaOrString=ruleEJinjaOrString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEJinjaOrString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEJinjaOrString"


    // $ANTLR start "ruleEJinjaOrString"
    // InternalAnsibleDslParser.g:7168:1: ruleEJinjaOrString returns [EObject current=null] : (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_string_2_0= RULE_STRING ) ) ) ;
    public final EObject ruleEJinjaOrString() throws RecognitionException {
        EObject current = null;

        Token lv_string_2_0=null;
        EObject this_EJinjaExpressionEvaluation_0 = null;

        EObject this_EJinjaStatement_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7174:2: ( (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_string_2_0= RULE_STRING ) ) ) )
            // InternalAnsibleDslParser.g:7175:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_string_2_0= RULE_STRING ) ) )
            {
            // InternalAnsibleDslParser.g:7175:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_string_2_0= RULE_STRING ) ) )
            int alt55=3;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketLeftCurlyBracket:
                {
                alt55=1;
                }
                break;
            case LeftCurlyBracketPercentSign:
                {
                alt55=2;
                }
                break;
            case RULE_STRING:
                {
                alt55=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalAnsibleDslParser.g:7176:3: this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEJinjaOrStringAccess().getEJinjaExpressionEvaluationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluation_0=ruleEJinjaExpressionEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7185:3: this_EJinjaStatement_1= ruleEJinjaStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEJinjaOrStringAccess().getEJinjaStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaStatement_1=ruleEJinjaStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:7194:3: ( (lv_string_2_0= RULE_STRING ) )
                    {
                    // InternalAnsibleDslParser.g:7194:3: ( (lv_string_2_0= RULE_STRING ) )
                    // InternalAnsibleDslParser.g:7195:4: (lv_string_2_0= RULE_STRING )
                    {
                    // InternalAnsibleDslParser.g:7195:4: (lv_string_2_0= RULE_STRING )
                    // InternalAnsibleDslParser.g:7196:5: lv_string_2_0= RULE_STRING
                    {
                    lv_string_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_2_0, grammarAccess.getEJinjaOrStringAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEJinjaOrStringRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_2_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEJinjaOrString"


    // $ANTLR start "entryRuleEJinjaAndString"
    // InternalAnsibleDslParser.g:7216:1: entryRuleEJinjaAndString returns [EObject current=null] : iv_ruleEJinjaAndString= ruleEJinjaAndString EOF ;
    public final EObject entryRuleEJinjaAndString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEJinjaAndString = null;


        try {
            // InternalAnsibleDslParser.g:7216:56: (iv_ruleEJinjaAndString= ruleEJinjaAndString EOF )
            // InternalAnsibleDslParser.g:7217:2: iv_ruleEJinjaAndString= ruleEJinjaAndString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEJinjaAndStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEJinjaAndString=ruleEJinjaAndString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEJinjaAndString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEJinjaAndString"


    // $ANTLR start "ruleEJinjaAndString"
    // InternalAnsibleDslParser.g:7223:1: ruleEJinjaAndString returns [EObject current=null] : ( (lv_jinja_expression_and_string_0_0= ruleEJinjaOrString ) )+ ;
    public final EObject ruleEJinjaAndString() throws RecognitionException {
        EObject current = null;

        EObject lv_jinja_expression_and_string_0_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7229:2: ( ( (lv_jinja_expression_and_string_0_0= ruleEJinjaOrString ) )+ )
            // InternalAnsibleDslParser.g:7230:2: ( (lv_jinja_expression_and_string_0_0= ruleEJinjaOrString ) )+
            {
            // InternalAnsibleDslParser.g:7230:2: ( (lv_jinja_expression_and_string_0_0= ruleEJinjaOrString ) )+
            int cnt56=0;
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==LeftCurlyBracketPercentSign) ) {
                    switch ( input.LA(2) ) {
                    case PlusSign:
                        {
                        int LA56_4 = input.LA(3);

                        if ( (LA56_4==For||LA56_4==If) ) {
                            alt56=1;
                        }


                        }
                        break;
                    case HyphenMinus:
                        {
                        int LA56_5 = input.LA(3);

                        if ( (LA56_5==For||LA56_5==If) ) {
                            alt56=1;
                        }


                        }
                        break;
                    case For:
                    case If:
                        {
                        alt56=1;
                        }
                        break;

                    }

                }
                else if ( (LA56_0==LeftCurlyBracketLeftCurlyBracket||LA56_0==RULE_STRING) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:7231:3: (lv_jinja_expression_and_string_0_0= ruleEJinjaOrString )
            	    {
            	    // InternalAnsibleDslParser.g:7231:3: (lv_jinja_expression_and_string_0_0= ruleEJinjaOrString )
            	    // InternalAnsibleDslParser.g:7232:4: lv_jinja_expression_and_string_0_0= ruleEJinjaOrString
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getEJinjaAndStringAccess().getJinja_expression_and_stringEJinjaOrStringParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_jinja_expression_and_string_0_0=ruleEJinjaOrString();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getEJinjaAndStringRule());
            	      				}
            	      				add(
            	      					current,
            	      					"jinja_expression_and_string",
            	      					lv_jinja_expression_and_string_0_0,
            	      					"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaOrString");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt56 >= 1 ) break loop56;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(56, input);
                        throw eee;
                }
                cnt56++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEJinjaAndString"


    // $ANTLR start "entryRuleEMultiLineExpression"
    // InternalAnsibleDslParser.g:7252:1: entryRuleEMultiLineExpression returns [EObject current=null] : iv_ruleEMultiLineExpression= ruleEMultiLineExpression EOF ;
    public final EObject entryRuleEMultiLineExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEMultiLineExpression = null;


        try {
            // InternalAnsibleDslParser.g:7252:61: (iv_ruleEMultiLineExpression= ruleEMultiLineExpression EOF )
            // InternalAnsibleDslParser.g:7253:2: iv_ruleEMultiLineExpression= ruleEMultiLineExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEMultiLineExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEMultiLineExpression=ruleEMultiLineExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEMultiLineExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEMultiLineExpression"


    // $ANTLR start "ruleEMultiLineExpression"
    // InternalAnsibleDslParser.g:7259:1: ruleEMultiLineExpression returns [EObject current=null] : ( ( ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) ) ) this_BEGIN_1= RULE_BEGIN (otherlv_2= Line_of_string ( (lv_expressions_3_0= ruleEJinjaAndString ) ) )+ this_END_4= RULE_END ) ;
    public final EObject ruleEMultiLineExpression() throws RecognitionException {
        EObject current = null;

        Token lv_new_line_command_0_1=null;
        Token lv_new_line_command_0_2=null;
        Token this_BEGIN_1=null;
        Token otherlv_2=null;
        Token this_END_4=null;
        EObject lv_expressions_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7265:2: ( ( ( ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) ) ) this_BEGIN_1= RULE_BEGIN (otherlv_2= Line_of_string ( (lv_expressions_3_0= ruleEJinjaAndString ) ) )+ this_END_4= RULE_END ) )
            // InternalAnsibleDslParser.g:7266:2: ( ( ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) ) ) this_BEGIN_1= RULE_BEGIN (otherlv_2= Line_of_string ( (lv_expressions_3_0= ruleEJinjaAndString ) ) )+ this_END_4= RULE_END )
            {
            // InternalAnsibleDslParser.g:7266:2: ( ( ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) ) ) this_BEGIN_1= RULE_BEGIN (otherlv_2= Line_of_string ( (lv_expressions_3_0= ruleEJinjaAndString ) ) )+ this_END_4= RULE_END )
            // InternalAnsibleDslParser.g:7267:3: ( ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) ) ) this_BEGIN_1= RULE_BEGIN (otherlv_2= Line_of_string ( (lv_expressions_3_0= ruleEJinjaAndString ) ) )+ this_END_4= RULE_END
            {
            // InternalAnsibleDslParser.g:7267:3: ( ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) ) )
            // InternalAnsibleDslParser.g:7268:4: ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) )
            {
            // InternalAnsibleDslParser.g:7268:4: ( (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine ) )
            // InternalAnsibleDslParser.g:7269:5: (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine )
            {
            // InternalAnsibleDslParser.g:7269:5: (lv_new_line_command_0_1= GreaterThanSign | lv_new_line_command_0_2= VerticalLine )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==GreaterThanSign) ) {
                alt57=1;
            }
            else if ( (LA57_0==VerticalLine) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalAnsibleDslParser.g:7270:6: lv_new_line_command_0_1= GreaterThanSign
                    {
                    lv_new_line_command_0_1=(Token)match(input,GreaterThanSign,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_new_line_command_0_1, grammarAccess.getEMultiLineExpressionAccess().getNew_line_commandGreaterThanSignKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEMultiLineExpressionRule());
                      						}
                      						setWithLastConsumed(current, "new_line_command", lv_new_line_command_0_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7281:6: lv_new_line_command_0_2= VerticalLine
                    {
                    lv_new_line_command_0_2=(Token)match(input,VerticalLine,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_new_line_command_0_2, grammarAccess.getEMultiLineExpressionAccess().getNew_line_commandVerticalLineKeyword_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEMultiLineExpressionRule());
                      						}
                      						setWithLastConsumed(current, "new_line_command", lv_new_line_command_0_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getEMultiLineExpressionAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalAnsibleDslParser.g:7298:3: (otherlv_2= Line_of_string ( (lv_expressions_3_0= ruleEJinjaAndString ) ) )+
            int cnt58=0;
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==Line_of_string) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:7299:4: otherlv_2= Line_of_string ( (lv_expressions_3_0= ruleEJinjaAndString ) )
            	    {
            	    otherlv_2=(Token)match(input,Line_of_string,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getEMultiLineExpressionAccess().getLine_of_stringKeyword_2_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:7303:4: ( (lv_expressions_3_0= ruleEJinjaAndString ) )
            	    // InternalAnsibleDslParser.g:7304:5: (lv_expressions_3_0= ruleEJinjaAndString )
            	    {
            	    // InternalAnsibleDslParser.g:7304:5: (lv_expressions_3_0= ruleEJinjaAndString )
            	    // InternalAnsibleDslParser.g:7305:6: lv_expressions_3_0= ruleEJinjaAndString
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEMultiLineExpressionAccess().getExpressionsEJinjaAndStringParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_70);
            	    lv_expressions_3_0=ruleEJinjaAndString();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEMultiLineExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_3_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaAndString");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt58 >= 1 ) break loop58;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(58, input);
                        throw eee;
                }
                cnt58++;
            } while (true);

            this_END_4=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_4, grammarAccess.getEMultiLineExpressionAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEMultiLineExpression"


    // $ANTLR start "entryRuleEJinjaOrStringWithoutQuotes"
    // InternalAnsibleDslParser.g:7331:1: entryRuleEJinjaOrStringWithoutQuotes returns [EObject current=null] : iv_ruleEJinjaOrStringWithoutQuotes= ruleEJinjaOrStringWithoutQuotes EOF ;
    public final EObject entryRuleEJinjaOrStringWithoutQuotes() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEJinjaOrStringWithoutQuotes = null;


        try {
            // InternalAnsibleDslParser.g:7331:68: (iv_ruleEJinjaOrStringWithoutQuotes= ruleEJinjaOrStringWithoutQuotes EOF )
            // InternalAnsibleDslParser.g:7332:2: iv_ruleEJinjaOrStringWithoutQuotes= ruleEJinjaOrStringWithoutQuotes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEJinjaOrStringWithoutQuotesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEJinjaOrStringWithoutQuotes=ruleEJinjaOrStringWithoutQuotes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEJinjaOrStringWithoutQuotes; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEJinjaOrStringWithoutQuotes"


    // $ANTLR start "ruleEJinjaOrStringWithoutQuotes"
    // InternalAnsibleDslParser.g:7338:1: ruleEJinjaOrStringWithoutQuotes returns [EObject current=null] : (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_stringWithoutQuotes_2_0= RULE_ID ) ) ) ;
    public final EObject ruleEJinjaOrStringWithoutQuotes() throws RecognitionException {
        EObject current = null;

        Token lv_stringWithoutQuotes_2_0=null;
        EObject this_EJinjaExpressionEvaluation_0 = null;

        EObject this_EJinjaStatement_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7344:2: ( (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_stringWithoutQuotes_2_0= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:7345:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_stringWithoutQuotes_2_0= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:7345:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_stringWithoutQuotes_2_0= RULE_ID ) ) )
            int alt59=3;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketLeftCurlyBracket:
                {
                alt59=1;
                }
                break;
            case LeftCurlyBracketPercentSign:
                {
                alt59=2;
                }
                break;
            case RULE_ID:
                {
                alt59=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }

            switch (alt59) {
                case 1 :
                    // InternalAnsibleDslParser.g:7346:3: this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEJinjaOrStringWithoutQuotesAccess().getEJinjaExpressionEvaluationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluation_0=ruleEJinjaExpressionEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7355:3: this_EJinjaStatement_1= ruleEJinjaStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEJinjaOrStringWithoutQuotesAccess().getEJinjaStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaStatement_1=ruleEJinjaStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:7364:3: ( (lv_stringWithoutQuotes_2_0= RULE_ID ) )
                    {
                    // InternalAnsibleDslParser.g:7364:3: ( (lv_stringWithoutQuotes_2_0= RULE_ID ) )
                    // InternalAnsibleDslParser.g:7365:4: (lv_stringWithoutQuotes_2_0= RULE_ID )
                    {
                    // InternalAnsibleDslParser.g:7365:4: (lv_stringWithoutQuotes_2_0= RULE_ID )
                    // InternalAnsibleDslParser.g:7366:5: lv_stringWithoutQuotes_2_0= RULE_ID
                    {
                    lv_stringWithoutQuotes_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_stringWithoutQuotes_2_0, grammarAccess.getEJinjaOrStringWithoutQuotesAccess().getStringWithoutQuotesIDTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEJinjaOrStringWithoutQuotesRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"stringWithoutQuotes",
                      						lv_stringWithoutQuotes_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEJinjaOrStringWithoutQuotes"


    // $ANTLR start "entryRuleEJinjaAndStringWithoutQuotes"
    // InternalAnsibleDslParser.g:7386:1: entryRuleEJinjaAndStringWithoutQuotes returns [EObject current=null] : iv_ruleEJinjaAndStringWithoutQuotes= ruleEJinjaAndStringWithoutQuotes EOF ;
    public final EObject entryRuleEJinjaAndStringWithoutQuotes() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEJinjaAndStringWithoutQuotes = null;


        try {
            // InternalAnsibleDslParser.g:7386:69: (iv_ruleEJinjaAndStringWithoutQuotes= ruleEJinjaAndStringWithoutQuotes EOF )
            // InternalAnsibleDslParser.g:7387:2: iv_ruleEJinjaAndStringWithoutQuotes= ruleEJinjaAndStringWithoutQuotes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEJinjaAndStringWithoutQuotesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEJinjaAndStringWithoutQuotes=ruleEJinjaAndStringWithoutQuotes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEJinjaAndStringWithoutQuotes; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEJinjaAndStringWithoutQuotes"


    // $ANTLR start "ruleEJinjaAndStringWithoutQuotes"
    // InternalAnsibleDslParser.g:7393:1: ruleEJinjaAndStringWithoutQuotes returns [EObject current=null] : ( (lv_jinja_expression_and_stringWithout_0_0= ruleEJinjaOrStringWithoutQuotes ) )+ ;
    public final EObject ruleEJinjaAndStringWithoutQuotes() throws RecognitionException {
        EObject current = null;

        EObject lv_jinja_expression_and_stringWithout_0_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7399:2: ( ( (lv_jinja_expression_and_stringWithout_0_0= ruleEJinjaOrStringWithoutQuotes ) )+ )
            // InternalAnsibleDslParser.g:7400:2: ( (lv_jinja_expression_and_stringWithout_0_0= ruleEJinjaOrStringWithoutQuotes ) )+
            {
            // InternalAnsibleDslParser.g:7400:2: ( (lv_jinja_expression_and_stringWithout_0_0= ruleEJinjaOrStringWithoutQuotes ) )+
            int cnt60=0;
            loop60:
            do {
                int alt60=2;
                switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA60_2 = input.LA(2);

                    if ( (LA60_2==EOF||(LA60_2>=External_file_inclusion && LA60_2<=Privilege_escalation)||LA60_2==Play_exe_settings||(LA60_2>=Direct_parameter && LA60_2<=Roles_inclusions)||LA60_2==Connection_info||LA60_2==Module_defaults||LA60_2==Validation_mode||(LA60_2>=Error_handling && LA60_2<=Gather_timeout)||LA60_2==Tags_attribute||LA60_2==Gather_subset||LA60_2==Always_tasks||(LA60_2>=Exe_settings && LA60_2<=Rescue_tasks)||LA60_2==Collections||LA60_2==Environment||LA60_2==Vars_prompt||LA60_2==Block_name||(LA60_2>=Delegation && LA60_2<=Index_var)||(LA60_2>=Play_name && LA60_2<=Pre_tasks)||(LA60_2>=Task_name && LA60_2<=Extended)||(LA60_2>=Handlers && LA60_2<=Throttle)||LA60_2==Action||(LA60_2>=Listen && LA60_2<=Serial)||(LA60_2>=Hosts && LA60_2<=Pause)||LA60_2==Tasks||LA60_2==Args||LA60_2==Loop||(LA60_2>=Vars && LA60_2<=When)||LA60_2==KW__||(LA60_2>=LeftCurlyBracketPercentSign && LA60_2<=LeftCurlyBracketLeftCurlyBracket)||(LA60_2>=Comma && LA60_2<=FullStop)||LA60_2==RightSquareBracket||(LA60_2>=RULE_ID && LA60_2<=RULE_END)) ) {
                        alt60=1;
                    }


                    }
                    break;
                case LeftCurlyBracketPercentSign:
                    {
                    switch ( input.LA(2) ) {
                    case PlusSign:
                        {
                        int LA60_5 = input.LA(3);

                        if ( (LA60_5==For||LA60_5==If) ) {
                            alt60=1;
                        }


                        }
                        break;
                    case HyphenMinus:
                        {
                        int LA60_6 = input.LA(3);

                        if ( (LA60_6==For||LA60_6==If) ) {
                            alt60=1;
                        }


                        }
                        break;
                    case For:
                    case If:
                        {
                        alt60=1;
                        }
                        break;

                    }

                    }
                    break;
                case LeftCurlyBracketLeftCurlyBracket:
                    {
                    alt60=1;
                    }
                    break;

                }

                switch (alt60) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:7401:3: (lv_jinja_expression_and_stringWithout_0_0= ruleEJinjaOrStringWithoutQuotes )
            	    {
            	    // InternalAnsibleDslParser.g:7401:3: (lv_jinja_expression_and_stringWithout_0_0= ruleEJinjaOrStringWithoutQuotes )
            	    // InternalAnsibleDslParser.g:7402:4: lv_jinja_expression_and_stringWithout_0_0= ruleEJinjaOrStringWithoutQuotes
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getEJinjaAndStringWithoutQuotesAccess().getJinja_expression_and_stringWithoutEJinjaOrStringWithoutQuotesParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_jinja_expression_and_stringWithout_0_0=ruleEJinjaOrStringWithoutQuotes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getEJinjaAndStringWithoutQuotesRule());
            	      				}
            	      				add(
            	      					current,
            	      					"jinja_expression_and_stringWithout",
            	      					lv_jinja_expression_and_stringWithout_0_0,
            	      					"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaOrStringWithoutQuotes");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt60 >= 1 ) break loop60;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(60, input);
                        throw eee;
                }
                cnt60++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEJinjaAndStringWithoutQuotes"


    // $ANTLR start "entryRuleEStringWithoutQuotesPassed"
    // InternalAnsibleDslParser.g:7422:1: entryRuleEStringWithoutQuotesPassed returns [EObject current=null] : iv_ruleEStringWithoutQuotesPassed= ruleEStringWithoutQuotesPassed EOF ;
    public final EObject entryRuleEStringWithoutQuotesPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEStringWithoutQuotesPassed = null;


        try {
            // InternalAnsibleDslParser.g:7422:67: (iv_ruleEStringWithoutQuotesPassed= ruleEStringWithoutQuotesPassed EOF )
            // InternalAnsibleDslParser.g:7423:2: iv_ruleEStringWithoutQuotesPassed= ruleEStringWithoutQuotesPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringWithoutQuotesPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEStringWithoutQuotesPassed=ruleEStringWithoutQuotesPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringWithoutQuotesPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringWithoutQuotesPassed"


    // $ANTLR start "ruleEStringWithoutQuotesPassed"
    // InternalAnsibleDslParser.g:7429:1: ruleEStringWithoutQuotesPassed returns [EObject current=null] : (this_EJinjaAndStringWithoutQuotes_0= ruleEJinjaAndStringWithoutQuotes | this_EMultiLineExpression_1= ruleEMultiLineExpression ) ;
    public final EObject ruleEStringWithoutQuotesPassed() throws RecognitionException {
        EObject current = null;

        EObject this_EJinjaAndStringWithoutQuotes_0 = null;

        EObject this_EMultiLineExpression_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7435:2: ( (this_EJinjaAndStringWithoutQuotes_0= ruleEJinjaAndStringWithoutQuotes | this_EMultiLineExpression_1= ruleEMultiLineExpression ) )
            // InternalAnsibleDslParser.g:7436:2: (this_EJinjaAndStringWithoutQuotes_0= ruleEJinjaAndStringWithoutQuotes | this_EMultiLineExpression_1= ruleEMultiLineExpression )
            {
            // InternalAnsibleDslParser.g:7436:2: (this_EJinjaAndStringWithoutQuotes_0= ruleEJinjaAndStringWithoutQuotes | this_EMultiLineExpression_1= ruleEMultiLineExpression )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=LeftCurlyBracketPercentSign && LA61_0<=LeftCurlyBracketLeftCurlyBracket)||LA61_0==RULE_ID) ) {
                alt61=1;
            }
            else if ( (LA61_0==GreaterThanSign||LA61_0==VerticalLine) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalAnsibleDslParser.g:7437:3: this_EJinjaAndStringWithoutQuotes_0= ruleEJinjaAndStringWithoutQuotes
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringWithoutQuotesPassedAccess().getEJinjaAndStringWithoutQuotesParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaAndStringWithoutQuotes_0=ruleEJinjaAndStringWithoutQuotes();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaAndStringWithoutQuotes_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7446:3: this_EMultiLineExpression_1= ruleEMultiLineExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringWithoutQuotesPassedAccess().getEMultiLineExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EMultiLineExpression_1=ruleEMultiLineExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EMultiLineExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringWithoutQuotesPassed"


    // $ANTLR start "entryRuleEValueWithString"
    // InternalAnsibleDslParser.g:7458:1: entryRuleEValueWithString returns [EObject current=null] : iv_ruleEValueWithString= ruleEValueWithString EOF ;
    public final EObject entryRuleEValueWithString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEValueWithString = null;


        try {
            // InternalAnsibleDslParser.g:7458:57: (iv_ruleEValueWithString= ruleEValueWithString EOF )
            // InternalAnsibleDslParser.g:7459:2: iv_ruleEValueWithString= ruleEValueWithString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEValueWithStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEValueWithString=ruleEValueWithString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEValueWithString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEValueWithString"


    // $ANTLR start "ruleEValueWithString"
    // InternalAnsibleDslParser.g:7465:1: ruleEValueWithString returns [EObject current=null] : ( ( ( ruleEStringPassed )=>this_EStringPassed_0= ruleEStringPassed ) | this_EStringWithoutQuotesPassed_1= ruleEStringWithoutQuotesPassed ) ;
    public final EObject ruleEValueWithString() throws RecognitionException {
        EObject current = null;

        EObject this_EStringPassed_0 = null;

        EObject this_EStringWithoutQuotesPassed_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7471:2: ( ( ( ( ruleEStringPassed )=>this_EStringPassed_0= ruleEStringPassed ) | this_EStringWithoutQuotesPassed_1= ruleEStringWithoutQuotesPassed ) )
            // InternalAnsibleDslParser.g:7472:2: ( ( ( ruleEStringPassed )=>this_EStringPassed_0= ruleEStringPassed ) | this_EStringWithoutQuotesPassed_1= ruleEStringWithoutQuotesPassed )
            {
            // InternalAnsibleDslParser.g:7472:2: ( ( ( ruleEStringPassed )=>this_EStringPassed_0= ruleEStringPassed ) | this_EStringWithoutQuotesPassed_1= ruleEStringWithoutQuotesPassed )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==LeftCurlyBracketLeftCurlyBracket) ) {
                int LA62_1 = input.LA(2);

                if ( (synpred1_InternalAnsibleDslParser()) ) {
                    alt62=1;
                }
                else if ( (true) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA62_0==LeftCurlyBracketPercentSign) ) {
                int LA62_2 = input.LA(2);

                if ( (synpred1_InternalAnsibleDslParser()) ) {
                    alt62=1;
                }
                else if ( (true) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA62_0==RULE_STRING) && (synpred1_InternalAnsibleDslParser())) {
                alt62=1;
            }
            else if ( (LA62_0==GreaterThanSign) ) {
                int LA62_4 = input.LA(2);

                if ( (synpred1_InternalAnsibleDslParser()) ) {
                    alt62=1;
                }
                else if ( (true) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 4, input);

                    throw nvae;
                }
            }
            else if ( (LA62_0==VerticalLine) ) {
                int LA62_5 = input.LA(2);

                if ( (synpred1_InternalAnsibleDslParser()) ) {
                    alt62=1;
                }
                else if ( (true) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 5, input);

                    throw nvae;
                }
            }
            else if ( (LA62_0==RULE_ID) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalAnsibleDslParser.g:7473:3: ( ( ruleEStringPassed )=>this_EStringPassed_0= ruleEStringPassed )
                    {
                    // InternalAnsibleDslParser.g:7473:3: ( ( ruleEStringPassed )=>this_EStringPassed_0= ruleEStringPassed )
                    // InternalAnsibleDslParser.g:7474:4: ( ruleEStringPassed )=>this_EStringPassed_0= ruleEStringPassed
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEValueWithStringAccess().getEStringPassedParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_EStringPassed_0=ruleEStringPassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_EStringPassed_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7485:3: this_EStringWithoutQuotesPassed_1= ruleEStringWithoutQuotesPassed
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValueWithStringAccess().getEStringWithoutQuotesPassedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EStringWithoutQuotesPassed_1=ruleEStringWithoutQuotesPassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EStringWithoutQuotesPassed_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEValueWithString"


    // $ANTLR start "entryRuleEStringPassed"
    // InternalAnsibleDslParser.g:7497:1: entryRuleEStringPassed returns [EObject current=null] : iv_ruleEStringPassed= ruleEStringPassed EOF ;
    public final EObject entryRuleEStringPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEStringPassed = null;


        try {
            // InternalAnsibleDslParser.g:7497:54: (iv_ruleEStringPassed= ruleEStringPassed EOF )
            // InternalAnsibleDslParser.g:7498:2: iv_ruleEStringPassed= ruleEStringPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEStringPassed=ruleEStringPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringPassed"


    // $ANTLR start "ruleEStringPassed"
    // InternalAnsibleDslParser.g:7504:1: ruleEStringPassed returns [EObject current=null] : (this_EJinjaAndString_0= ruleEJinjaAndString | this_EMultiLineExpression_1= ruleEMultiLineExpression ) ;
    public final EObject ruleEStringPassed() throws RecognitionException {
        EObject current = null;

        EObject this_EJinjaAndString_0 = null;

        EObject this_EMultiLineExpression_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7510:2: ( (this_EJinjaAndString_0= ruleEJinjaAndString | this_EMultiLineExpression_1= ruleEMultiLineExpression ) )
            // InternalAnsibleDslParser.g:7511:2: (this_EJinjaAndString_0= ruleEJinjaAndString | this_EMultiLineExpression_1= ruleEMultiLineExpression )
            {
            // InternalAnsibleDslParser.g:7511:2: (this_EJinjaAndString_0= ruleEJinjaAndString | this_EMultiLineExpression_1= ruleEMultiLineExpression )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( ((LA63_0>=LeftCurlyBracketPercentSign && LA63_0<=LeftCurlyBracketLeftCurlyBracket)||LA63_0==RULE_STRING) ) {
                alt63=1;
            }
            else if ( (LA63_0==GreaterThanSign||LA63_0==VerticalLine) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalAnsibleDslParser.g:7512:3: this_EJinjaAndString_0= ruleEJinjaAndString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringPassedAccess().getEJinjaAndStringParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaAndString_0=ruleEJinjaAndString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaAndString_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7521:3: this_EMultiLineExpression_1= ruleEMultiLineExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringPassedAccess().getEMultiLineExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EMultiLineExpression_1=ruleEMultiLineExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EMultiLineExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringPassed"


    // $ANTLR start "entryRuleEValuePassed"
    // InternalAnsibleDslParser.g:7533:1: entryRuleEValuePassed returns [EObject current=null] : iv_ruleEValuePassed= ruleEValuePassed EOF ;
    public final EObject entryRuleEValuePassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEValuePassed = null;


        try {
            // InternalAnsibleDslParser.g:7533:53: (iv_ruleEValuePassed= ruleEValuePassed EOF )
            // InternalAnsibleDslParser.g:7534:2: iv_ruleEValuePassed= ruleEValuePassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEValuePassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEValuePassed=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEValuePassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEValuePassed"


    // $ANTLR start "ruleEValuePassed"
    // InternalAnsibleDslParser.g:7540:1: ruleEValuePassed returns [EObject current=null] : (this_EValueWithString_0= ruleEValueWithString | this_EValueWithoutString_1= ruleEValueWithoutString ) ;
    public final EObject ruleEValuePassed() throws RecognitionException {
        EObject current = null;

        EObject this_EValueWithString_0 = null;

        EObject this_EValueWithoutString_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7546:2: ( (this_EValueWithString_0= ruleEValueWithString | this_EValueWithoutString_1= ruleEValueWithoutString ) )
            // InternalAnsibleDslParser.g:7547:2: (this_EValueWithString_0= ruleEValueWithString | this_EValueWithoutString_1= ruleEValueWithoutString )
            {
            // InternalAnsibleDslParser.g:7547:2: (this_EValueWithString_0= ruleEValueWithString | this_EValueWithoutString_1= ruleEValueWithoutString )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=LeftCurlyBracketPercentSign && LA64_0<=LeftCurlyBracketLeftCurlyBracket)||LA64_0==GreaterThanSign||LA64_0==VerticalLine||LA64_0==RULE_ID||LA64_0==RULE_STRING) ) {
                alt64=1;
            }
            else if ( (LA64_0==LeftSquareBracket||LA64_0==LeftCurlyBracket||(LA64_0>=RULE_BOOLEAN && LA64_0<=RULE_EXPONENTIAL_NUMBER)||LA64_0==RULE_INTEGER||LA64_0==RULE_BEGIN) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalAnsibleDslParser.g:7548:3: this_EValueWithString_0= ruleEValueWithString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValuePassedAccess().getEValueWithStringParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EValueWithString_0=ruleEValueWithString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EValueWithString_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7557:3: this_EValueWithoutString_1= ruleEValueWithoutString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValuePassedAccess().getEValueWithoutStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EValueWithoutString_1=ruleEValueWithoutString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EValueWithoutString_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEValuePassed"


    // $ANTLR start "entryRuleEValuePassedToJinjaExpression"
    // InternalAnsibleDslParser.g:7569:1: entryRuleEValuePassedToJinjaExpression returns [EObject current=null] : iv_ruleEValuePassedToJinjaExpression= ruleEValuePassedToJinjaExpression EOF ;
    public final EObject entryRuleEValuePassedToJinjaExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEValuePassedToJinjaExpression = null;


        try {
            // InternalAnsibleDslParser.g:7569:70: (iv_ruleEValuePassedToJinjaExpression= ruleEValuePassedToJinjaExpression EOF )
            // InternalAnsibleDslParser.g:7570:2: iv_ruleEValuePassedToJinjaExpression= ruleEValuePassedToJinjaExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEValuePassedToJinjaExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEValuePassedToJinjaExpression=ruleEValuePassedToJinjaExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEValuePassedToJinjaExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEValuePassedToJinjaExpression"


    // $ANTLR start "ruleEValuePassedToJinjaExpression"
    // InternalAnsibleDslParser.g:7576:1: ruleEValuePassedToJinjaExpression returns [EObject current=null] : (this_EValueJinja_0= ruleEValueJinja | this_ESpecialVariable_1= ruleESpecialVariable | this_EVariableReference_2= ruleEVariableReference | this_EFunctionCallOrVariable_3= ruleEFunctionCallOrVariable ) ;
    public final EObject ruleEValuePassedToJinjaExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EValueJinja_0 = null;

        EObject this_ESpecialVariable_1 = null;

        EObject this_EVariableReference_2 = null;

        EObject this_EFunctionCallOrVariable_3 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7582:2: ( (this_EValueJinja_0= ruleEValueJinja | this_ESpecialVariable_1= ruleESpecialVariable | this_EVariableReference_2= ruleEVariableReference | this_EFunctionCallOrVariable_3= ruleEFunctionCallOrVariable ) )
            // InternalAnsibleDslParser.g:7583:2: (this_EValueJinja_0= ruleEValueJinja | this_ESpecialVariable_1= ruleESpecialVariable | this_EVariableReference_2= ruleEVariableReference | this_EFunctionCallOrVariable_3= ruleEFunctionCallOrVariable )
            {
            // InternalAnsibleDslParser.g:7583:2: (this_EValueJinja_0= ruleEValueJinja | this_ESpecialVariable_1= ruleESpecialVariable | this_EVariableReference_2= ruleEVariableReference | this_EFunctionCallOrVariable_3= ruleEFunctionCallOrVariable )
            int alt65=4;
            switch ( input.LA(1) ) {
            case LeftSquareBracket:
            case LeftCurlyBracket:
            case RULE_BOOLEAN:
            case RULE_NULL:
            case RULE_NONE:
            case RULE_OCTAL_NUMBER:
            case RULE_HEXADECIMAL_NUMBER:
            case RULE_SIMPLE_NUMBER:
            case RULE_EXPONENTIAL_NUMBER:
            case RULE_INTEGER:
            case RULE_STRING:
                {
                alt65=1;
                }
                break;
            case Special_variable:
                {
                alt65=2;
                }
                break;
            case Registered_variable:
            case Declared_variable:
            case Index_or_loop_var:
            case Interface_input:
            case Operation_input:
            case Fact_set:
                {
                alt65=3;
                }
                break;
            case RULE_ID:
                {
                alt65=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalAnsibleDslParser.g:7584:3: this_EValueJinja_0= ruleEValueJinja
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValuePassedToJinjaExpressionAccess().getEValueJinjaParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EValueJinja_0=ruleEValueJinja();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EValueJinja_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7593:3: this_ESpecialVariable_1= ruleESpecialVariable
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValuePassedToJinjaExpressionAccess().getESpecialVariableParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ESpecialVariable_1=ruleESpecialVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ESpecialVariable_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:7602:3: this_EVariableReference_2= ruleEVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValuePassedToJinjaExpressionAccess().getEVariableReferenceParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EVariableReference_2=ruleEVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EVariableReference_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:7611:3: this_EFunctionCallOrVariable_3= ruleEFunctionCallOrVariable
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValuePassedToJinjaExpressionAccess().getEFunctionCallOrVariableParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EFunctionCallOrVariable_3=ruleEFunctionCallOrVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EFunctionCallOrVariable_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEValuePassedToJinjaExpression"


    // $ANTLR start "entryRuleEComposedValue"
    // InternalAnsibleDslParser.g:7623:1: entryRuleEComposedValue returns [EObject current=null] : iv_ruleEComposedValue= ruleEComposedValue EOF ;
    public final EObject entryRuleEComposedValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEComposedValue = null;


        try {
            // InternalAnsibleDslParser.g:7623:55: (iv_ruleEComposedValue= ruleEComposedValue EOF )
            // InternalAnsibleDslParser.g:7624:2: iv_ruleEComposedValue= ruleEComposedValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEComposedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEComposedValue=ruleEComposedValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEComposedValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEComposedValue"


    // $ANTLR start "ruleEComposedValue"
    // InternalAnsibleDslParser.g:7630:1: ruleEComposedValue returns [EObject current=null] : (this_EDictionary_0= ruleEDictionary | this_EList_1= ruleEList ) ;
    public final EObject ruleEComposedValue() throws RecognitionException {
        EObject current = null;

        EObject this_EDictionary_0 = null;

        EObject this_EList_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7636:2: ( (this_EDictionary_0= ruleEDictionary | this_EList_1= ruleEList ) )
            // InternalAnsibleDslParser.g:7637:2: (this_EDictionary_0= ruleEDictionary | this_EList_1= ruleEList )
            {
            // InternalAnsibleDslParser.g:7637:2: (this_EDictionary_0= ruleEDictionary | this_EList_1= ruleEList )
            int alt66=2;
            switch ( input.LA(1) ) {
            case LeftCurlyBracket:
                {
                alt66=1;
                }
                break;
            case RULE_BEGIN:
                {
                int LA66_2 = input.LA(2);

                if ( (LA66_2==HyphenMinus) ) {
                    alt66=2;
                }
                else if ( (LA66_2==RULE_ID) ) {
                    alt66=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 2, input);

                    throw nvae;
                }
                }
                break;
            case LeftSquareBracket:
                {
                alt66=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // InternalAnsibleDslParser.g:7638:3: this_EDictionary_0= ruleEDictionary
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEComposedValueAccess().getEDictionaryParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EDictionary_0=ruleEDictionary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EDictionary_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7647:3: this_EList_1= ruleEList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEComposedValueAccess().getEListParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EList_1=ruleEList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EList_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEComposedValue"


    // $ANTLR start "entryRuleEComposedValueJinja"
    // InternalAnsibleDslParser.g:7659:1: entryRuleEComposedValueJinja returns [EObject current=null] : iv_ruleEComposedValueJinja= ruleEComposedValueJinja EOF ;
    public final EObject entryRuleEComposedValueJinja() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEComposedValueJinja = null;


        try {
            // InternalAnsibleDslParser.g:7659:60: (iv_ruleEComposedValueJinja= ruleEComposedValueJinja EOF )
            // InternalAnsibleDslParser.g:7660:2: iv_ruleEComposedValueJinja= ruleEComposedValueJinja EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEComposedValueJinjaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEComposedValueJinja=ruleEComposedValueJinja();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEComposedValueJinja; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEComposedValueJinja"


    // $ANTLR start "ruleEComposedValueJinja"
    // InternalAnsibleDslParser.g:7666:1: ruleEComposedValueJinja returns [EObject current=null] : (this_EDictionaryJinja_0= ruleEDictionaryJinja | this_EListJinja_1= ruleEListJinja ) ;
    public final EObject ruleEComposedValueJinja() throws RecognitionException {
        EObject current = null;

        EObject this_EDictionaryJinja_0 = null;

        EObject this_EListJinja_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7672:2: ( (this_EDictionaryJinja_0= ruleEDictionaryJinja | this_EListJinja_1= ruleEListJinja ) )
            // InternalAnsibleDslParser.g:7673:2: (this_EDictionaryJinja_0= ruleEDictionaryJinja | this_EListJinja_1= ruleEListJinja )
            {
            // InternalAnsibleDslParser.g:7673:2: (this_EDictionaryJinja_0= ruleEDictionaryJinja | this_EListJinja_1= ruleEListJinja )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LeftCurlyBracket) ) {
                alt67=1;
            }
            else if ( (LA67_0==LeftSquareBracket) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalAnsibleDslParser.g:7674:3: this_EDictionaryJinja_0= ruleEDictionaryJinja
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEComposedValueJinjaAccess().getEDictionaryJinjaParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EDictionaryJinja_0=ruleEDictionaryJinja();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EDictionaryJinja_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7683:3: this_EListJinja_1= ruleEListJinja
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEComposedValueJinjaAccess().getEListJinjaParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EListJinja_1=ruleEListJinja();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EListJinja_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEComposedValueJinja"


    // $ANTLR start "entryRuleEValueJinja"
    // InternalAnsibleDslParser.g:7695:1: entryRuleEValueJinja returns [EObject current=null] : iv_ruleEValueJinja= ruleEValueJinja EOF ;
    public final EObject entryRuleEValueJinja() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEValueJinja = null;


        try {
            // InternalAnsibleDslParser.g:7695:52: (iv_ruleEValueJinja= ruleEValueJinja EOF )
            // InternalAnsibleDslParser.g:7696:2: iv_ruleEValueJinja= ruleEValueJinja EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEValueJinjaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEValueJinja=ruleEValueJinja();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEValueJinja; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEValueJinja"


    // $ANTLR start "ruleEValueJinja"
    // InternalAnsibleDslParser.g:7702:1: ruleEValueJinja returns [EObject current=null] : (this_EComposedValueJinja_0= ruleEComposedValueJinja | this_ESimpleValueJinja_1= ruleESimpleValueJinja ) ;
    public final EObject ruleEValueJinja() throws RecognitionException {
        EObject current = null;

        EObject this_EComposedValueJinja_0 = null;

        EObject this_ESimpleValueJinja_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7708:2: ( (this_EComposedValueJinja_0= ruleEComposedValueJinja | this_ESimpleValueJinja_1= ruleESimpleValueJinja ) )
            // InternalAnsibleDslParser.g:7709:2: (this_EComposedValueJinja_0= ruleEComposedValueJinja | this_ESimpleValueJinja_1= ruleESimpleValueJinja )
            {
            // InternalAnsibleDslParser.g:7709:2: (this_EComposedValueJinja_0= ruleEComposedValueJinja | this_ESimpleValueJinja_1= ruleESimpleValueJinja )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LeftSquareBracket||LA68_0==LeftCurlyBracket) ) {
                alt68=1;
            }
            else if ( (LA68_0==RULE_BOOLEAN||(LA68_0>=RULE_NULL && LA68_0<=RULE_EXPONENTIAL_NUMBER)||LA68_0==RULE_INTEGER||LA68_0==RULE_STRING) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalAnsibleDslParser.g:7710:3: this_EComposedValueJinja_0= ruleEComposedValueJinja
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValueJinjaAccess().getEComposedValueJinjaParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EComposedValueJinja_0=ruleEComposedValueJinja();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EComposedValueJinja_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7719:3: this_ESimpleValueJinja_1= ruleESimpleValueJinja
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValueJinjaAccess().getESimpleValueJinjaParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ESimpleValueJinja_1=ruleESimpleValueJinja();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ESimpleValueJinja_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEValueJinja"


    // $ANTLR start "entryRuleEValueWithoutString"
    // InternalAnsibleDslParser.g:7731:1: entryRuleEValueWithoutString returns [EObject current=null] : iv_ruleEValueWithoutString= ruleEValueWithoutString EOF ;
    public final EObject entryRuleEValueWithoutString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEValueWithoutString = null;


        try {
            // InternalAnsibleDslParser.g:7731:60: (iv_ruleEValueWithoutString= ruleEValueWithoutString EOF )
            // InternalAnsibleDslParser.g:7732:2: iv_ruleEValueWithoutString= ruleEValueWithoutString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEValueWithoutStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEValueWithoutString=ruleEValueWithoutString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEValueWithoutString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEValueWithoutString"


    // $ANTLR start "ruleEValueWithoutString"
    // InternalAnsibleDslParser.g:7738:1: ruleEValueWithoutString returns [EObject current=null] : (this_EComposedValue_0= ruleEComposedValue | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString ) ;
    public final EObject ruleEValueWithoutString() throws RecognitionException {
        EObject current = null;

        EObject this_EComposedValue_0 = null;

        EObject this_ESimpleValueWithoutString_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7744:2: ( (this_EComposedValue_0= ruleEComposedValue | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString ) )
            // InternalAnsibleDslParser.g:7745:2: (this_EComposedValue_0= ruleEComposedValue | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString )
            {
            // InternalAnsibleDslParser.g:7745:2: (this_EComposedValue_0= ruleEComposedValue | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==LeftSquareBracket||LA69_0==LeftCurlyBracket||LA69_0==RULE_BEGIN) ) {
                alt69=1;
            }
            else if ( ((LA69_0>=RULE_BOOLEAN && LA69_0<=RULE_EXPONENTIAL_NUMBER)||LA69_0==RULE_INTEGER) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalAnsibleDslParser.g:7746:3: this_EComposedValue_0= ruleEComposedValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValueWithoutStringAccess().getEComposedValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EComposedValue_0=ruleEComposedValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EComposedValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7755:3: this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEValueWithoutStringAccess().getESimpleValueWithoutStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ESimpleValueWithoutString_1=ruleESimpleValueWithoutString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ESimpleValueWithoutString_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEValueWithoutString"


    // $ANTLR start "entryRuleESimpleValueWithoutString"
    // InternalAnsibleDslParser.g:7767:1: entryRuleESimpleValueWithoutString returns [EObject current=null] : iv_ruleESimpleValueWithoutString= ruleESimpleValueWithoutString EOF ;
    public final EObject entryRuleESimpleValueWithoutString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleESimpleValueWithoutString = null;


        try {
            // InternalAnsibleDslParser.g:7767:66: (iv_ruleESimpleValueWithoutString= ruleESimpleValueWithoutString EOF )
            // InternalAnsibleDslParser.g:7768:2: iv_ruleESimpleValueWithoutString= ruleESimpleValueWithoutString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getESimpleValueWithoutStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleESimpleValueWithoutString=ruleESimpleValueWithoutString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleESimpleValueWithoutString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleESimpleValueWithoutString"


    // $ANTLR start "ruleESimpleValueWithoutString"
    // InternalAnsibleDslParser.g:7774:1: ruleESimpleValueWithoutString returns [EObject current=null] : ( ( (lv_simple_value_boolean_0_0= ruleEBooleanAnsible ) ) | ( (lv_simple_value_1_0= RULE_NULL ) ) | ( (lv_simple_value_number_2_0= ruleENumber ) ) | ( (lv_simple_value_3_0= RULE_NONE ) ) ) ;
    public final EObject ruleESimpleValueWithoutString() throws RecognitionException {
        EObject current = null;

        Token lv_simple_value_1_0=null;
        Token lv_simple_value_3_0=null;
        EObject lv_simple_value_boolean_0_0 = null;

        EObject lv_simple_value_number_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7780:2: ( ( ( (lv_simple_value_boolean_0_0= ruleEBooleanAnsible ) ) | ( (lv_simple_value_1_0= RULE_NULL ) ) | ( (lv_simple_value_number_2_0= ruleENumber ) ) | ( (lv_simple_value_3_0= RULE_NONE ) ) ) )
            // InternalAnsibleDslParser.g:7781:2: ( ( (lv_simple_value_boolean_0_0= ruleEBooleanAnsible ) ) | ( (lv_simple_value_1_0= RULE_NULL ) ) | ( (lv_simple_value_number_2_0= ruleENumber ) ) | ( (lv_simple_value_3_0= RULE_NONE ) ) )
            {
            // InternalAnsibleDslParser.g:7781:2: ( ( (lv_simple_value_boolean_0_0= ruleEBooleanAnsible ) ) | ( (lv_simple_value_1_0= RULE_NULL ) ) | ( (lv_simple_value_number_2_0= ruleENumber ) ) | ( (lv_simple_value_3_0= RULE_NONE ) ) )
            int alt70=4;
            switch ( input.LA(1) ) {
            case RULE_BOOLEAN:
            case RULE_BOOLEAN_ONLY_ANSIBLE:
                {
                alt70=1;
                }
                break;
            case RULE_NULL:
                {
                alt70=2;
                }
                break;
            case RULE_OCTAL_NUMBER:
            case RULE_HEXADECIMAL_NUMBER:
            case RULE_SIMPLE_NUMBER:
            case RULE_EXPONENTIAL_NUMBER:
            case RULE_INTEGER:
                {
                alt70=3;
                }
                break;
            case RULE_NONE:
                {
                alt70=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalAnsibleDslParser.g:7782:3: ( (lv_simple_value_boolean_0_0= ruleEBooleanAnsible ) )
                    {
                    // InternalAnsibleDslParser.g:7782:3: ( (lv_simple_value_boolean_0_0= ruleEBooleanAnsible ) )
                    // InternalAnsibleDslParser.g:7783:4: (lv_simple_value_boolean_0_0= ruleEBooleanAnsible )
                    {
                    // InternalAnsibleDslParser.g:7783:4: (lv_simple_value_boolean_0_0= ruleEBooleanAnsible )
                    // InternalAnsibleDslParser.g:7784:5: lv_simple_value_boolean_0_0= ruleEBooleanAnsible
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getESimpleValueWithoutStringAccess().getSimple_value_booleanEBooleanAnsibleParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simple_value_boolean_0_0=ruleEBooleanAnsible();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getESimpleValueWithoutStringRule());
                      					}
                      					set(
                      						current,
                      						"simple_value_boolean",
                      						lv_simple_value_boolean_0_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanAnsible");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7802:3: ( (lv_simple_value_1_0= RULE_NULL ) )
                    {
                    // InternalAnsibleDslParser.g:7802:3: ( (lv_simple_value_1_0= RULE_NULL ) )
                    // InternalAnsibleDslParser.g:7803:4: (lv_simple_value_1_0= RULE_NULL )
                    {
                    // InternalAnsibleDslParser.g:7803:4: (lv_simple_value_1_0= RULE_NULL )
                    // InternalAnsibleDslParser.g:7804:5: lv_simple_value_1_0= RULE_NULL
                    {
                    lv_simple_value_1_0=(Token)match(input,RULE_NULL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_simple_value_1_0, grammarAccess.getESimpleValueWithoutStringAccess().getSimple_valueNULLTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getESimpleValueWithoutStringRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"simple_value",
                      						lv_simple_value_1_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.NULL");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:7821:3: ( (lv_simple_value_number_2_0= ruleENumber ) )
                    {
                    // InternalAnsibleDslParser.g:7821:3: ( (lv_simple_value_number_2_0= ruleENumber ) )
                    // InternalAnsibleDslParser.g:7822:4: (lv_simple_value_number_2_0= ruleENumber )
                    {
                    // InternalAnsibleDslParser.g:7822:4: (lv_simple_value_number_2_0= ruleENumber )
                    // InternalAnsibleDslParser.g:7823:5: lv_simple_value_number_2_0= ruleENumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getESimpleValueWithoutStringAccess().getSimple_value_numberENumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simple_value_number_2_0=ruleENumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getESimpleValueWithoutStringRule());
                      					}
                      					set(
                      						current,
                      						"simple_value_number",
                      						lv_simple_value_number_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:7841:3: ( (lv_simple_value_3_0= RULE_NONE ) )
                    {
                    // InternalAnsibleDslParser.g:7841:3: ( (lv_simple_value_3_0= RULE_NONE ) )
                    // InternalAnsibleDslParser.g:7842:4: (lv_simple_value_3_0= RULE_NONE )
                    {
                    // InternalAnsibleDslParser.g:7842:4: (lv_simple_value_3_0= RULE_NONE )
                    // InternalAnsibleDslParser.g:7843:5: lv_simple_value_3_0= RULE_NONE
                    {
                    lv_simple_value_3_0=(Token)match(input,RULE_NONE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_simple_value_3_0, grammarAccess.getESimpleValueWithoutStringAccess().getSimple_valueNONETerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getESimpleValueWithoutStringRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"simple_value",
                      						lv_simple_value_3_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.NONE");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleESimpleValueWithoutString"


    // $ANTLR start "entryRuleESimpleValueJinja"
    // InternalAnsibleDslParser.g:7863:1: entryRuleESimpleValueJinja returns [EObject current=null] : iv_ruleESimpleValueJinja= ruleESimpleValueJinja EOF ;
    public final EObject entryRuleESimpleValueJinja() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleESimpleValueJinja = null;


        try {
            // InternalAnsibleDslParser.g:7863:58: (iv_ruleESimpleValueJinja= ruleESimpleValueJinja EOF )
            // InternalAnsibleDslParser.g:7864:2: iv_ruleESimpleValueJinja= ruleESimpleValueJinja EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getESimpleValueJinjaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleESimpleValueJinja=ruleESimpleValueJinja();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleESimpleValueJinja; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleESimpleValueJinja"


    // $ANTLR start "ruleESimpleValueJinja"
    // InternalAnsibleDslParser.g:7870:1: ruleESimpleValueJinja returns [EObject current=null] : ( ( (lv_simple_value_string_0_0= RULE_STRING ) ) | ( (lv_simple_value_1_0= RULE_BOOLEAN ) ) | ( (lv_simple_value_2_0= RULE_NULL ) ) | ( (lv_simple_value_number_3_0= ruleENumber ) ) | ( (lv_simple_value_4_0= RULE_NONE ) ) ) ;
    public final EObject ruleESimpleValueJinja() throws RecognitionException {
        EObject current = null;

        Token lv_simple_value_string_0_0=null;
        Token lv_simple_value_1_0=null;
        Token lv_simple_value_2_0=null;
        Token lv_simple_value_4_0=null;
        EObject lv_simple_value_number_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7876:2: ( ( ( (lv_simple_value_string_0_0= RULE_STRING ) ) | ( (lv_simple_value_1_0= RULE_BOOLEAN ) ) | ( (lv_simple_value_2_0= RULE_NULL ) ) | ( (lv_simple_value_number_3_0= ruleENumber ) ) | ( (lv_simple_value_4_0= RULE_NONE ) ) ) )
            // InternalAnsibleDslParser.g:7877:2: ( ( (lv_simple_value_string_0_0= RULE_STRING ) ) | ( (lv_simple_value_1_0= RULE_BOOLEAN ) ) | ( (lv_simple_value_2_0= RULE_NULL ) ) | ( (lv_simple_value_number_3_0= ruleENumber ) ) | ( (lv_simple_value_4_0= RULE_NONE ) ) )
            {
            // InternalAnsibleDslParser.g:7877:2: ( ( (lv_simple_value_string_0_0= RULE_STRING ) ) | ( (lv_simple_value_1_0= RULE_BOOLEAN ) ) | ( (lv_simple_value_2_0= RULE_NULL ) ) | ( (lv_simple_value_number_3_0= ruleENumber ) ) | ( (lv_simple_value_4_0= RULE_NONE ) ) )
            int alt71=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt71=1;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt71=2;
                }
                break;
            case RULE_NULL:
                {
                alt71=3;
                }
                break;
            case RULE_OCTAL_NUMBER:
            case RULE_HEXADECIMAL_NUMBER:
            case RULE_SIMPLE_NUMBER:
            case RULE_EXPONENTIAL_NUMBER:
            case RULE_INTEGER:
                {
                alt71=4;
                }
                break;
            case RULE_NONE:
                {
                alt71=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }

            switch (alt71) {
                case 1 :
                    // InternalAnsibleDslParser.g:7878:3: ( (lv_simple_value_string_0_0= RULE_STRING ) )
                    {
                    // InternalAnsibleDslParser.g:7878:3: ( (lv_simple_value_string_0_0= RULE_STRING ) )
                    // InternalAnsibleDslParser.g:7879:4: (lv_simple_value_string_0_0= RULE_STRING )
                    {
                    // InternalAnsibleDslParser.g:7879:4: (lv_simple_value_string_0_0= RULE_STRING )
                    // InternalAnsibleDslParser.g:7880:5: lv_simple_value_string_0_0= RULE_STRING
                    {
                    lv_simple_value_string_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_simple_value_string_0_0, grammarAccess.getESimpleValueJinjaAccess().getSimple_value_stringSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getESimpleValueJinjaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"simple_value_string",
                      						lv_simple_value_string_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:7897:3: ( (lv_simple_value_1_0= RULE_BOOLEAN ) )
                    {
                    // InternalAnsibleDslParser.g:7897:3: ( (lv_simple_value_1_0= RULE_BOOLEAN ) )
                    // InternalAnsibleDslParser.g:7898:4: (lv_simple_value_1_0= RULE_BOOLEAN )
                    {
                    // InternalAnsibleDslParser.g:7898:4: (lv_simple_value_1_0= RULE_BOOLEAN )
                    // InternalAnsibleDslParser.g:7899:5: lv_simple_value_1_0= RULE_BOOLEAN
                    {
                    lv_simple_value_1_0=(Token)match(input,RULE_BOOLEAN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_simple_value_1_0, grammarAccess.getESimpleValueJinjaAccess().getSimple_valueBOOLEANTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getESimpleValueJinjaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"simple_value",
                      						lv_simple_value_1_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.BOOLEAN");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:7916:3: ( (lv_simple_value_2_0= RULE_NULL ) )
                    {
                    // InternalAnsibleDslParser.g:7916:3: ( (lv_simple_value_2_0= RULE_NULL ) )
                    // InternalAnsibleDslParser.g:7917:4: (lv_simple_value_2_0= RULE_NULL )
                    {
                    // InternalAnsibleDslParser.g:7917:4: (lv_simple_value_2_0= RULE_NULL )
                    // InternalAnsibleDslParser.g:7918:5: lv_simple_value_2_0= RULE_NULL
                    {
                    lv_simple_value_2_0=(Token)match(input,RULE_NULL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_simple_value_2_0, grammarAccess.getESimpleValueJinjaAccess().getSimple_valueNULLTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getESimpleValueJinjaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"simple_value",
                      						lv_simple_value_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.NULL");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:7935:3: ( (lv_simple_value_number_3_0= ruleENumber ) )
                    {
                    // InternalAnsibleDslParser.g:7935:3: ( (lv_simple_value_number_3_0= ruleENumber ) )
                    // InternalAnsibleDslParser.g:7936:4: (lv_simple_value_number_3_0= ruleENumber )
                    {
                    // InternalAnsibleDslParser.g:7936:4: (lv_simple_value_number_3_0= ruleENumber )
                    // InternalAnsibleDslParser.g:7937:5: lv_simple_value_number_3_0= ruleENumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getESimpleValueJinjaAccess().getSimple_value_numberENumberParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simple_value_number_3_0=ruleENumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getESimpleValueJinjaRule());
                      					}
                      					set(
                      						current,
                      						"simple_value_number",
                      						lv_simple_value_number_3_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsibleDslParser.g:7955:3: ( (lv_simple_value_4_0= RULE_NONE ) )
                    {
                    // InternalAnsibleDslParser.g:7955:3: ( (lv_simple_value_4_0= RULE_NONE ) )
                    // InternalAnsibleDslParser.g:7956:4: (lv_simple_value_4_0= RULE_NONE )
                    {
                    // InternalAnsibleDslParser.g:7956:4: (lv_simple_value_4_0= RULE_NONE )
                    // InternalAnsibleDslParser.g:7957:5: lv_simple_value_4_0= RULE_NONE
                    {
                    lv_simple_value_4_0=(Token)match(input,RULE_NONE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_simple_value_4_0, grammarAccess.getESimpleValueJinjaAccess().getSimple_valueNONETerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getESimpleValueJinjaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"simple_value",
                      						lv_simple_value_4_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.NONE");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleESimpleValueJinja"


    // $ANTLR start "entryRuleEJinjaExpressionEvaluation"
    // InternalAnsibleDslParser.g:7977:1: entryRuleEJinjaExpressionEvaluation returns [EObject current=null] : iv_ruleEJinjaExpressionEvaluation= ruleEJinjaExpressionEvaluation EOF ;
    public final EObject entryRuleEJinjaExpressionEvaluation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEJinjaExpressionEvaluation = null;


        try {
            // InternalAnsibleDslParser.g:7977:67: (iv_ruleEJinjaExpressionEvaluation= ruleEJinjaExpressionEvaluation EOF )
            // InternalAnsibleDslParser.g:7978:2: iv_ruleEJinjaExpressionEvaluation= ruleEJinjaExpressionEvaluation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEJinjaExpressionEvaluationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEJinjaExpressionEvaluation=ruleEJinjaExpressionEvaluation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEJinjaExpressionEvaluation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEJinjaExpressionEvaluation"


    // $ANTLR start "ruleEJinjaExpressionEvaluation"
    // InternalAnsibleDslParser.g:7984:1: ruleEJinjaExpressionEvaluation returns [EObject current=null] : (otherlv_0= LeftCurlyBracketLeftCurlyBracket ( (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_2= RightCurlyBracketRightCurlyBracket ) ;
    public final EObject ruleEJinjaExpressionEvaluation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_jinja_expression_1_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:7990:2: ( (otherlv_0= LeftCurlyBracketLeftCurlyBracket ( (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_2= RightCurlyBracketRightCurlyBracket ) )
            // InternalAnsibleDslParser.g:7991:2: (otherlv_0= LeftCurlyBracketLeftCurlyBracket ( (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_2= RightCurlyBracketRightCurlyBracket )
            {
            // InternalAnsibleDslParser.g:7991:2: (otherlv_0= LeftCurlyBracketLeftCurlyBracket ( (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_2= RightCurlyBracketRightCurlyBracket )
            // InternalAnsibleDslParser.g:7992:3: otherlv_0= LeftCurlyBracketLeftCurlyBracket ( (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_2= RightCurlyBracketRightCurlyBracket
            {
            otherlv_0=(Token)match(input,LeftCurlyBracketLeftCurlyBracket,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEJinjaExpressionEvaluationAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:7996:3: ( (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            // InternalAnsibleDslParser.g:7997:4: (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            {
            // InternalAnsibleDslParser.g:7997:4: (lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            // InternalAnsibleDslParser.g:7998:5: lv_jinja_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEJinjaExpressionEvaluationAccess().getJinja_expressionEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_72);
            lv_jinja_expression_1_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEJinjaExpressionEvaluationRule());
              					}
              					set(
              						current,
              						"jinja_expression",
              						lv_jinja_expression_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,RightCurlyBracketRightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEJinjaExpressionEvaluationAccess().getRightCurlyBracketRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEJinjaExpressionEvaluation"


    // $ANTLR start "entryRuleEJinjaExpressionEvaluationWithoutBrackets"
    // InternalAnsibleDslParser.g:8023:1: entryRuleEJinjaExpressionEvaluationWithoutBrackets returns [EObject current=null] : iv_ruleEJinjaExpressionEvaluationWithoutBrackets= ruleEJinjaExpressionEvaluationWithoutBrackets EOF ;
    public final EObject entryRuleEJinjaExpressionEvaluationWithoutBrackets() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEJinjaExpressionEvaluationWithoutBrackets = null;


        try {
            // InternalAnsibleDslParser.g:8023:82: (iv_ruleEJinjaExpressionEvaluationWithoutBrackets= ruleEJinjaExpressionEvaluationWithoutBrackets EOF )
            // InternalAnsibleDslParser.g:8024:2: iv_ruleEJinjaExpressionEvaluationWithoutBrackets= ruleEJinjaExpressionEvaluationWithoutBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEJinjaExpressionEvaluationWithoutBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEJinjaExpressionEvaluationWithoutBrackets=ruleEJinjaExpressionEvaluationWithoutBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEJinjaExpressionEvaluationWithoutBrackets; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEJinjaExpressionEvaluationWithoutBrackets"


    // $ANTLR start "ruleEJinjaExpressionEvaluationWithoutBrackets"
    // InternalAnsibleDslParser.g:8030:1: ruleEJinjaExpressionEvaluationWithoutBrackets returns [EObject current=null] : ( ( (lv_expression_to_evaluate_0_0= ruleEFilteredExpression ) ) ( (lv_if_chain_1_0= ruleEIfBlock ) )* ) ;
    public final EObject ruleEJinjaExpressionEvaluationWithoutBrackets() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_to_evaluate_0_0 = null;

        EObject lv_if_chain_1_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8036:2: ( ( ( (lv_expression_to_evaluate_0_0= ruleEFilteredExpression ) ) ( (lv_if_chain_1_0= ruleEIfBlock ) )* ) )
            // InternalAnsibleDslParser.g:8037:2: ( ( (lv_expression_to_evaluate_0_0= ruleEFilteredExpression ) ) ( (lv_if_chain_1_0= ruleEIfBlock ) )* )
            {
            // InternalAnsibleDslParser.g:8037:2: ( ( (lv_expression_to_evaluate_0_0= ruleEFilteredExpression ) ) ( (lv_if_chain_1_0= ruleEIfBlock ) )* )
            // InternalAnsibleDslParser.g:8038:3: ( (lv_expression_to_evaluate_0_0= ruleEFilteredExpression ) ) ( (lv_if_chain_1_0= ruleEIfBlock ) )*
            {
            // InternalAnsibleDslParser.g:8038:3: ( (lv_expression_to_evaluate_0_0= ruleEFilteredExpression ) )
            // InternalAnsibleDslParser.g:8039:4: (lv_expression_to_evaluate_0_0= ruleEFilteredExpression )
            {
            // InternalAnsibleDslParser.g:8039:4: (lv_expression_to_evaluate_0_0= ruleEFilteredExpression )
            // InternalAnsibleDslParser.g:8040:5: lv_expression_to_evaluate_0_0= ruleEFilteredExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEJinjaExpressionEvaluationWithoutBracketsAccess().getExpression_to_evaluateEFilteredExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_73);
            lv_expression_to_evaluate_0_0=ruleEFilteredExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEJinjaExpressionEvaluationWithoutBracketsRule());
              					}
              					set(
              						current,
              						"expression_to_evaluate",
              						lv_expression_to_evaluate_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8057:3: ( (lv_if_chain_1_0= ruleEIfBlock ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==If) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:8058:4: (lv_if_chain_1_0= ruleEIfBlock )
            	    {
            	    // InternalAnsibleDslParser.g:8058:4: (lv_if_chain_1_0= ruleEIfBlock )
            	    // InternalAnsibleDslParser.g:8059:5: lv_if_chain_1_0= ruleEIfBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEJinjaExpressionEvaluationWithoutBracketsAccess().getIf_chainEIfBlockParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_if_chain_1_0=ruleEIfBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEJinjaExpressionEvaluationWithoutBracketsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"if_chain",
            	      						lv_if_chain_1_0,
            	      						"org.sodalite.sdl.ansible.AnsibleDsl.EIfBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEJinjaExpressionEvaluationWithoutBrackets"


    // $ANTLR start "entryRuleEFunctionCallOrVariable"
    // InternalAnsibleDslParser.g:8080:1: entryRuleEFunctionCallOrVariable returns [EObject current=null] : iv_ruleEFunctionCallOrVariable= ruleEFunctionCallOrVariable EOF ;
    public final EObject entryRuleEFunctionCallOrVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEFunctionCallOrVariable = null;


        try {
            // InternalAnsibleDslParser.g:8080:64: (iv_ruleEFunctionCallOrVariable= ruleEFunctionCallOrVariable EOF )
            // InternalAnsibleDslParser.g:8081:2: iv_ruleEFunctionCallOrVariable= ruleEFunctionCallOrVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEFunctionCallOrVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEFunctionCallOrVariable=ruleEFunctionCallOrVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEFunctionCallOrVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEFunctionCallOrVariable"


    // $ANTLR start "ruleEFunctionCallOrVariable"
    // InternalAnsibleDslParser.g:8087:1: ruleEFunctionCallOrVariable returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis ) | ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) ) )? ) ;
    public final EObject ruleEFunctionCallOrVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_empty_brackets_6_0=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8093:2: ( ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis ) | ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) ) )? ) )
            // InternalAnsibleDslParser.g:8094:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis ) | ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) ) )? )
            {
            // InternalAnsibleDslParser.g:8094:2: ( ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis ) | ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) ) )? )
            // InternalAnsibleDslParser.g:8095:3: ( (lv_name_0_0= RULE_ID ) ) ( (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis ) | ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) ) )?
            {
            // InternalAnsibleDslParser.g:8095:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:8096:4: (lv_name_0_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:8096:4: (lv_name_0_0= RULE_ID )
            // InternalAnsibleDslParser.g:8097:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getEFunctionCallOrVariableAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEFunctionCallOrVariableRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8113:3: ( (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis ) | ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) ) )?
            int alt74=3;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==LeftParenthesis) ) {
                alt74=1;
            }
            else if ( (LA74_0==LeftParenthesisRightParenthesis) ) {
                alt74=2;
            }
            switch (alt74) {
                case 1 :
                    // InternalAnsibleDslParser.g:8114:4: (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis )
                    {
                    // InternalAnsibleDslParser.g:8114:4: (otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis )
                    // InternalAnsibleDslParser.g:8115:5: otherlv_1= LeftParenthesis ( (lv_parameters_2_0= ruleEFunctionInput ) ) (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )* otherlv_5= RightParenthesis
                    {
                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getEFunctionCallOrVariableAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalAnsibleDslParser.g:8119:5: ( (lv_parameters_2_0= ruleEFunctionInput ) )
                    // InternalAnsibleDslParser.g:8120:6: (lv_parameters_2_0= ruleEFunctionInput )
                    {
                    // InternalAnsibleDslParser.g:8120:6: (lv_parameters_2_0= ruleEFunctionInput )
                    // InternalAnsibleDslParser.g:8121:7: lv_parameters_2_0= ruleEFunctionInput
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEFunctionCallOrVariableAccess().getParametersEFunctionInputParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_75);
                    lv_parameters_2_0=ruleEFunctionInput();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEFunctionCallOrVariableRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_2_0,
                      								"org.sodalite.sdl.ansible.AnsibleDsl.EFunctionInput");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:8138:5: (otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) ) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==Comma) ) {
                            alt73=1;
                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalAnsibleDslParser.g:8139:6: otherlv_3= Comma ( (lv_parameters_4_0= ruleEFunctionInput ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getEFunctionCallOrVariableAccess().getCommaKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalAnsibleDslParser.g:8143:6: ( (lv_parameters_4_0= ruleEFunctionInput ) )
                    	    // InternalAnsibleDslParser.g:8144:7: (lv_parameters_4_0= ruleEFunctionInput )
                    	    {
                    	    // InternalAnsibleDslParser.g:8144:7: (lv_parameters_4_0= ruleEFunctionInput )
                    	    // InternalAnsibleDslParser.g:8145:8: lv_parameters_4_0= ruleEFunctionInput
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getEFunctionCallOrVariableAccess().getParametersEFunctionInputParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_75);
                    	    lv_parameters_4_0=ruleEFunctionInput();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getEFunctionCallOrVariableRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_4_0,
                    	      									"org.sodalite.sdl.ansible.AnsibleDsl.EFunctionInput");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getEFunctionCallOrVariableAccess().getRightParenthesisKeyword_1_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:8169:4: ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) )
                    {
                    // InternalAnsibleDslParser.g:8169:4: ( (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis ) )
                    // InternalAnsibleDslParser.g:8170:5: (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis )
                    {
                    // InternalAnsibleDslParser.g:8170:5: (lv_empty_brackets_6_0= LeftParenthesisRightParenthesis )
                    // InternalAnsibleDslParser.g:8171:6: lv_empty_brackets_6_0= LeftParenthesisRightParenthesis
                    {
                    lv_empty_brackets_6_0=(Token)match(input,LeftParenthesisRightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_empty_brackets_6_0, grammarAccess.getEFunctionCallOrVariableAccess().getEmpty_bracketsLeftParenthesisRightParenthesisKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEFunctionCallOrVariableRule());
                      						}
                      						setWithLastConsumed(current, "empty_brackets", lv_empty_brackets_6_0, "()");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEFunctionCallOrVariable"


    // $ANTLR start "entryRuleEFunctionInput"
    // InternalAnsibleDslParser.g:8188:1: entryRuleEFunctionInput returns [EObject current=null] : iv_ruleEFunctionInput= ruleEFunctionInput EOF ;
    public final EObject entryRuleEFunctionInput() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEFunctionInput = null;


        try {
            // InternalAnsibleDslParser.g:8188:55: (iv_ruleEFunctionInput= ruleEFunctionInput EOF )
            // InternalAnsibleDslParser.g:8189:2: iv_ruleEFunctionInput= ruleEFunctionInput EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEFunctionInputRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEFunctionInput=ruleEFunctionInput();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEFunctionInput; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEFunctionInput"


    // $ANTLR start "ruleEFunctionInput"
    // InternalAnsibleDslParser.g:8195:1: ruleEFunctionInput returns [EObject current=null] : ( ( ( (lv_parameter_name_0_0= RULE_ID ) ) otherlv_1= EqualsSign )? ( (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ;
    public final EObject ruleEFunctionInput() throws RecognitionException {
        EObject current = null;

        Token lv_parameter_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8201:2: ( ( ( ( (lv_parameter_name_0_0= RULE_ID ) ) otherlv_1= EqualsSign )? ( (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) )
            // InternalAnsibleDslParser.g:8202:2: ( ( ( (lv_parameter_name_0_0= RULE_ID ) ) otherlv_1= EqualsSign )? ( (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )
            {
            // InternalAnsibleDslParser.g:8202:2: ( ( ( (lv_parameter_name_0_0= RULE_ID ) ) otherlv_1= EqualsSign )? ( (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )
            // InternalAnsibleDslParser.g:8203:3: ( ( (lv_parameter_name_0_0= RULE_ID ) ) otherlv_1= EqualsSign )? ( (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            {
            // InternalAnsibleDslParser.g:8203:3: ( ( (lv_parameter_name_0_0= RULE_ID ) ) otherlv_1= EqualsSign )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_ID) ) {
                int LA75_1 = input.LA(2);

                if ( (LA75_1==EqualsSign) ) {
                    alt75=1;
                }
            }
            switch (alt75) {
                case 1 :
                    // InternalAnsibleDslParser.g:8204:4: ( (lv_parameter_name_0_0= RULE_ID ) ) otherlv_1= EqualsSign
                    {
                    // InternalAnsibleDslParser.g:8204:4: ( (lv_parameter_name_0_0= RULE_ID ) )
                    // InternalAnsibleDslParser.g:8205:5: (lv_parameter_name_0_0= RULE_ID )
                    {
                    // InternalAnsibleDslParser.g:8205:5: (lv_parameter_name_0_0= RULE_ID )
                    // InternalAnsibleDslParser.g:8206:6: lv_parameter_name_0_0= RULE_ID
                    {
                    lv_parameter_name_0_0=(Token)match(input,RULE_ID,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_parameter_name_0_0, grammarAccess.getEFunctionInputAccess().getParameter_nameIDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEFunctionInputRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"parameter_name",
                      							lv_parameter_name_0_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.ID");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEFunctionInputAccess().getEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAnsibleDslParser.g:8227:3: ( (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            // InternalAnsibleDslParser.g:8228:4: (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            {
            // InternalAnsibleDslParser.g:8228:4: (lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            // InternalAnsibleDslParser.g:8229:5: lv_value_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEFunctionInputAccess().getValueEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEFunctionInputRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEFunctionInput"


    // $ANTLR start "entryRuleEIfBlock"
    // InternalAnsibleDslParser.g:8250:1: entryRuleEIfBlock returns [EObject current=null] : iv_ruleEIfBlock= ruleEIfBlock EOF ;
    public final EObject entryRuleEIfBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEIfBlock = null;


        try {
            // InternalAnsibleDslParser.g:8250:49: (iv_ruleEIfBlock= ruleEIfBlock EOF )
            // InternalAnsibleDslParser.g:8251:2: iv_ruleEIfBlock= ruleEIfBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEIfBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEIfBlock=ruleEIfBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEIfBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEIfBlock"


    // $ANTLR start "ruleEIfBlock"
    // InternalAnsibleDslParser.g:8257:1: ruleEIfBlock returns [EObject current=null] : (otherlv_0= If ( (lv_if_condition_1_0= ruleEFilteredExpression ) ) (otherlv_2= Else ( (lv_else_expression_3_0= ruleEFilteredExpression ) ) )? ) ;
    public final EObject ruleEIfBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_if_condition_1_0 = null;

        EObject lv_else_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8263:2: ( (otherlv_0= If ( (lv_if_condition_1_0= ruleEFilteredExpression ) ) (otherlv_2= Else ( (lv_else_expression_3_0= ruleEFilteredExpression ) ) )? ) )
            // InternalAnsibleDslParser.g:8264:2: (otherlv_0= If ( (lv_if_condition_1_0= ruleEFilteredExpression ) ) (otherlv_2= Else ( (lv_else_expression_3_0= ruleEFilteredExpression ) ) )? )
            {
            // InternalAnsibleDslParser.g:8264:2: (otherlv_0= If ( (lv_if_condition_1_0= ruleEFilteredExpression ) ) (otherlv_2= Else ( (lv_else_expression_3_0= ruleEFilteredExpression ) ) )? )
            // InternalAnsibleDslParser.g:8265:3: otherlv_0= If ( (lv_if_condition_1_0= ruleEFilteredExpression ) ) (otherlv_2= Else ( (lv_else_expression_3_0= ruleEFilteredExpression ) ) )?
            {
            otherlv_0=(Token)match(input,If,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEIfBlockAccess().getIfKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:8269:3: ( (lv_if_condition_1_0= ruleEFilteredExpression ) )
            // InternalAnsibleDslParser.g:8270:4: (lv_if_condition_1_0= ruleEFilteredExpression )
            {
            // InternalAnsibleDslParser.g:8270:4: (lv_if_condition_1_0= ruleEFilteredExpression )
            // InternalAnsibleDslParser.g:8271:5: lv_if_condition_1_0= ruleEFilteredExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEIfBlockAccess().getIf_conditionEFilteredExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_77);
            lv_if_condition_1_0=ruleEFilteredExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEIfBlockRule());
              					}
              					set(
              						current,
              						"if_condition",
              						lv_if_condition_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8288:3: (otherlv_2= Else ( (lv_else_expression_3_0= ruleEFilteredExpression ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==Else) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalAnsibleDslParser.g:8289:4: otherlv_2= Else ( (lv_else_expression_3_0= ruleEFilteredExpression ) )
                    {
                    otherlv_2=(Token)match(input,Else,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEIfBlockAccess().getElseKeyword_2_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:8293:4: ( (lv_else_expression_3_0= ruleEFilteredExpression ) )
                    // InternalAnsibleDslParser.g:8294:5: (lv_else_expression_3_0= ruleEFilteredExpression )
                    {
                    // InternalAnsibleDslParser.g:8294:5: (lv_else_expression_3_0= ruleEFilteredExpression )
                    // InternalAnsibleDslParser.g:8295:6: lv_else_expression_3_0= ruleEFilteredExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEIfBlockAccess().getElse_expressionEFilteredExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_expression_3_0=ruleEFilteredExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEIfBlockRule());
                      						}
                      						set(
                      							current,
                      							"else_expression",
                      							lv_else_expression_3_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEIfBlock"


    // $ANTLR start "entryRuleEFilteredExpression"
    // InternalAnsibleDslParser.g:8317:1: entryRuleEFilteredExpression returns [EObject current=null] : iv_ruleEFilteredExpression= ruleEFilteredExpression EOF ;
    public final EObject entryRuleEFilteredExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEFilteredExpression = null;


        try {
            // InternalAnsibleDslParser.g:8317:60: (iv_ruleEFilteredExpression= ruleEFilteredExpression EOF )
            // InternalAnsibleDslParser.g:8318:2: iv_ruleEFilteredExpression= ruleEFilteredExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEFilteredExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEFilteredExpression=ruleEFilteredExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEFilteredExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEFilteredExpression"


    // $ANTLR start "ruleEFilteredExpression"
    // InternalAnsibleDslParser.g:8324:1: ruleEFilteredExpression returns [EObject current=null] : ( ( (lv_to_filter_0_0= ruleEOrExpression ) ) (otherlv_1= VerticalLine ( (lv_filter_2_0= ruleEFilteredExpression ) ) )? ) ;
    public final EObject ruleEFilteredExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_to_filter_0_0 = null;

        EObject lv_filter_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8330:2: ( ( ( (lv_to_filter_0_0= ruleEOrExpression ) ) (otherlv_1= VerticalLine ( (lv_filter_2_0= ruleEFilteredExpression ) ) )? ) )
            // InternalAnsibleDslParser.g:8331:2: ( ( (lv_to_filter_0_0= ruleEOrExpression ) ) (otherlv_1= VerticalLine ( (lv_filter_2_0= ruleEFilteredExpression ) ) )? )
            {
            // InternalAnsibleDslParser.g:8331:2: ( ( (lv_to_filter_0_0= ruleEOrExpression ) ) (otherlv_1= VerticalLine ( (lv_filter_2_0= ruleEFilteredExpression ) ) )? )
            // InternalAnsibleDslParser.g:8332:3: ( (lv_to_filter_0_0= ruleEOrExpression ) ) (otherlv_1= VerticalLine ( (lv_filter_2_0= ruleEFilteredExpression ) ) )?
            {
            // InternalAnsibleDslParser.g:8332:3: ( (lv_to_filter_0_0= ruleEOrExpression ) )
            // InternalAnsibleDslParser.g:8333:4: (lv_to_filter_0_0= ruleEOrExpression )
            {
            // InternalAnsibleDslParser.g:8333:4: (lv_to_filter_0_0= ruleEOrExpression )
            // InternalAnsibleDslParser.g:8334:5: lv_to_filter_0_0= ruleEOrExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEFilteredExpressionAccess().getTo_filterEOrExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_78);
            lv_to_filter_0_0=ruleEOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEFilteredExpressionRule());
              					}
              					set(
              						current,
              						"to_filter",
              						lv_to_filter_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EOrExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8351:3: (otherlv_1= VerticalLine ( (lv_filter_2_0= ruleEFilteredExpression ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==VerticalLine) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalAnsibleDslParser.g:8352:4: otherlv_1= VerticalLine ( (lv_filter_2_0= ruleEFilteredExpression ) )
                    {
                    otherlv_1=(Token)match(input,VerticalLine,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEFilteredExpressionAccess().getVerticalLineKeyword_1_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:8356:4: ( (lv_filter_2_0= ruleEFilteredExpression ) )
                    // InternalAnsibleDslParser.g:8357:5: (lv_filter_2_0= ruleEFilteredExpression )
                    {
                    // InternalAnsibleDslParser.g:8357:5: (lv_filter_2_0= ruleEFilteredExpression )
                    // InternalAnsibleDslParser.g:8358:6: lv_filter_2_0= ruleEFilteredExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEFilteredExpressionAccess().getFilterEFilteredExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_filter_2_0=ruleEFilteredExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEFilteredExpressionRule());
                      						}
                      						set(
                      							current,
                      							"filter",
                      							lv_filter_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEFilteredExpression"


    // $ANTLR start "entryRuleEOrExpression"
    // InternalAnsibleDslParser.g:8380:1: entryRuleEOrExpression returns [EObject current=null] : iv_ruleEOrExpression= ruleEOrExpression EOF ;
    public final EObject entryRuleEOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEOrExpression = null;


        try {
            // InternalAnsibleDslParser.g:8380:54: (iv_ruleEOrExpression= ruleEOrExpression EOF )
            // InternalAnsibleDslParser.g:8381:2: iv_ruleEOrExpression= ruleEOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEOrExpression=ruleEOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEOrExpression"


    // $ANTLR start "ruleEOrExpression"
    // InternalAnsibleDslParser.g:8387:1: ruleEOrExpression returns [EObject current=null] : ( ( (lv_left_or_0_0= ruleEAndExpression ) ) (otherlv_1= Or ( (lv_right_or_2_0= ruleEOrExpression ) ) )? ) ;
    public final EObject ruleEOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_left_or_0_0 = null;

        EObject lv_right_or_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8393:2: ( ( ( (lv_left_or_0_0= ruleEAndExpression ) ) (otherlv_1= Or ( (lv_right_or_2_0= ruleEOrExpression ) ) )? ) )
            // InternalAnsibleDslParser.g:8394:2: ( ( (lv_left_or_0_0= ruleEAndExpression ) ) (otherlv_1= Or ( (lv_right_or_2_0= ruleEOrExpression ) ) )? )
            {
            // InternalAnsibleDslParser.g:8394:2: ( ( (lv_left_or_0_0= ruleEAndExpression ) ) (otherlv_1= Or ( (lv_right_or_2_0= ruleEOrExpression ) ) )? )
            // InternalAnsibleDslParser.g:8395:3: ( (lv_left_or_0_0= ruleEAndExpression ) ) (otherlv_1= Or ( (lv_right_or_2_0= ruleEOrExpression ) ) )?
            {
            // InternalAnsibleDslParser.g:8395:3: ( (lv_left_or_0_0= ruleEAndExpression ) )
            // InternalAnsibleDslParser.g:8396:4: (lv_left_or_0_0= ruleEAndExpression )
            {
            // InternalAnsibleDslParser.g:8396:4: (lv_left_or_0_0= ruleEAndExpression )
            // InternalAnsibleDslParser.g:8397:5: lv_left_or_0_0= ruleEAndExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEOrExpressionAccess().getLeft_orEAndExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_left_or_0_0=ruleEAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEOrExpressionRule());
              					}
              					set(
              						current,
              						"left_or",
              						lv_left_or_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EAndExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8414:3: (otherlv_1= Or ( (lv_right_or_2_0= ruleEOrExpression ) ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Or) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalAnsibleDslParser.g:8415:4: otherlv_1= Or ( (lv_right_or_2_0= ruleEOrExpression ) )
                    {
                    otherlv_1=(Token)match(input,Or,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEOrExpressionAccess().getOrKeyword_1_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:8419:4: ( (lv_right_or_2_0= ruleEOrExpression ) )
                    // InternalAnsibleDslParser.g:8420:5: (lv_right_or_2_0= ruleEOrExpression )
                    {
                    // InternalAnsibleDslParser.g:8420:5: (lv_right_or_2_0= ruleEOrExpression )
                    // InternalAnsibleDslParser.g:8421:6: lv_right_or_2_0= ruleEOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEOrExpressionAccess().getRight_orEOrExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_or_2_0=ruleEOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEOrExpressionRule());
                      						}
                      						set(
                      							current,
                      							"right_or",
                      							lv_right_or_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EOrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEOrExpression"


    // $ANTLR start "entryRuleEAndExpression"
    // InternalAnsibleDslParser.g:8443:1: entryRuleEAndExpression returns [EObject current=null] : iv_ruleEAndExpression= ruleEAndExpression EOF ;
    public final EObject entryRuleEAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEAndExpression = null;


        try {
            // InternalAnsibleDslParser.g:8443:55: (iv_ruleEAndExpression= ruleEAndExpression EOF )
            // InternalAnsibleDslParser.g:8444:2: iv_ruleEAndExpression= ruleEAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEAndExpression=ruleEAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEAndExpression"


    // $ANTLR start "ruleEAndExpression"
    // InternalAnsibleDslParser.g:8450:1: ruleEAndExpression returns [EObject current=null] : ( ( (lv_left_and_0_0= ruleETruthExpression ) ) (otherlv_1= And ( (lv_right_and_2_0= ruleEAndExpression ) ) )? ) ;
    public final EObject ruleEAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_left_and_0_0 = null;

        EObject lv_right_and_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8456:2: ( ( ( (lv_left_and_0_0= ruleETruthExpression ) ) (otherlv_1= And ( (lv_right_and_2_0= ruleEAndExpression ) ) )? ) )
            // InternalAnsibleDslParser.g:8457:2: ( ( (lv_left_and_0_0= ruleETruthExpression ) ) (otherlv_1= And ( (lv_right_and_2_0= ruleEAndExpression ) ) )? )
            {
            // InternalAnsibleDslParser.g:8457:2: ( ( (lv_left_and_0_0= ruleETruthExpression ) ) (otherlv_1= And ( (lv_right_and_2_0= ruleEAndExpression ) ) )? )
            // InternalAnsibleDslParser.g:8458:3: ( (lv_left_and_0_0= ruleETruthExpression ) ) (otherlv_1= And ( (lv_right_and_2_0= ruleEAndExpression ) ) )?
            {
            // InternalAnsibleDslParser.g:8458:3: ( (lv_left_and_0_0= ruleETruthExpression ) )
            // InternalAnsibleDslParser.g:8459:4: (lv_left_and_0_0= ruleETruthExpression )
            {
            // InternalAnsibleDslParser.g:8459:4: (lv_left_and_0_0= ruleETruthExpression )
            // InternalAnsibleDslParser.g:8460:5: lv_left_and_0_0= ruleETruthExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEAndExpressionAccess().getLeft_andETruthExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_left_and_0_0=ruleETruthExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEAndExpressionRule());
              					}
              					set(
              						current,
              						"left_and",
              						lv_left_and_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ETruthExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8477:3: (otherlv_1= And ( (lv_right_and_2_0= ruleEAndExpression ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==And) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalAnsibleDslParser.g:8478:4: otherlv_1= And ( (lv_right_and_2_0= ruleEAndExpression ) )
                    {
                    otherlv_1=(Token)match(input,And,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEAndExpressionAccess().getAndKeyword_1_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:8482:4: ( (lv_right_and_2_0= ruleEAndExpression ) )
                    // InternalAnsibleDslParser.g:8483:5: (lv_right_and_2_0= ruleEAndExpression )
                    {
                    // InternalAnsibleDslParser.g:8483:5: (lv_right_and_2_0= ruleEAndExpression )
                    // InternalAnsibleDslParser.g:8484:6: lv_right_and_2_0= ruleEAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEAndExpressionAccess().getRight_andEAndExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_and_2_0=ruleEAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEAndExpressionRule());
                      						}
                      						set(
                      							current,
                      							"right_and",
                      							lv_right_and_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EAndExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEAndExpression"


    // $ANTLR start "entryRuleETruthExpression"
    // InternalAnsibleDslParser.g:8506:1: entryRuleETruthExpression returns [EObject current=null] : iv_ruleETruthExpression= ruleETruthExpression EOF ;
    public final EObject entryRuleETruthExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleETruthExpression = null;


        try {
            // InternalAnsibleDslParser.g:8506:57: (iv_ruleETruthExpression= ruleETruthExpression EOF )
            // InternalAnsibleDslParser.g:8507:2: iv_ruleETruthExpression= ruleETruthExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getETruthExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleETruthExpression=ruleETruthExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleETruthExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleETruthExpression"


    // $ANTLR start "ruleETruthExpression"
    // InternalAnsibleDslParser.g:8513:1: ruleETruthExpression returns [EObject current=null] : ( ( (lv_left_value_0_0= ruleEOperation ) ) ( ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) ) ( (lv_right_value_2_0= ruleETruthExpression ) ) )? ) ;
    public final EObject ruleETruthExpression() throws RecognitionException {
        EObject current = null;

        Token lv_equality_sign_1_1=null;
        Token lv_equality_sign_1_2=null;
        Token lv_equality_sign_1_3=null;
        Token lv_equality_sign_1_4=null;
        Token lv_equality_sign_1_5=null;
        Token lv_equality_sign_1_6=null;
        EObject lv_left_value_0_0 = null;

        EObject lv_right_value_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8519:2: ( ( ( (lv_left_value_0_0= ruleEOperation ) ) ( ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) ) ( (lv_right_value_2_0= ruleETruthExpression ) ) )? ) )
            // InternalAnsibleDslParser.g:8520:2: ( ( (lv_left_value_0_0= ruleEOperation ) ) ( ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) ) ( (lv_right_value_2_0= ruleETruthExpression ) ) )? )
            {
            // InternalAnsibleDslParser.g:8520:2: ( ( (lv_left_value_0_0= ruleEOperation ) ) ( ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) ) ( (lv_right_value_2_0= ruleETruthExpression ) ) )? )
            // InternalAnsibleDslParser.g:8521:3: ( (lv_left_value_0_0= ruleEOperation ) ) ( ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) ) ( (lv_right_value_2_0= ruleETruthExpression ) ) )?
            {
            // InternalAnsibleDslParser.g:8521:3: ( (lv_left_value_0_0= ruleEOperation ) )
            // InternalAnsibleDslParser.g:8522:4: (lv_left_value_0_0= ruleEOperation )
            {
            // InternalAnsibleDslParser.g:8522:4: (lv_left_value_0_0= ruleEOperation )
            // InternalAnsibleDslParser.g:8523:5: lv_left_value_0_0= ruleEOperation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getETruthExpressionAccess().getLeft_valueEOperationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_81);
            lv_left_value_0_0=ruleEOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getETruthExpressionRule());
              					}
              					set(
              						current,
              						"left_value",
              						lv_left_value_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EOperation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8540:3: ( ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) ) ( (lv_right_value_2_0= ruleETruthExpression ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==ExclamationMarkEqualsSign||(LA81_0>=LessThanSignEqualsSign && LA81_0<=GreaterThanSignEqualsSign)||LA81_0==LessThanSign||LA81_0==GreaterThanSign) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalAnsibleDslParser.g:8541:4: ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) ) ( (lv_right_value_2_0= ruleETruthExpression ) )
                    {
                    // InternalAnsibleDslParser.g:8541:4: ( ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) ) )
                    // InternalAnsibleDslParser.g:8542:5: ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) )
                    {
                    // InternalAnsibleDslParser.g:8542:5: ( (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign ) )
                    // InternalAnsibleDslParser.g:8543:6: (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign )
                    {
                    // InternalAnsibleDslParser.g:8543:6: (lv_equality_sign_1_1= EqualsSignEqualsSign | lv_equality_sign_1_2= ExclamationMarkEqualsSign | lv_equality_sign_1_3= LessThanSign | lv_equality_sign_1_4= GreaterThanSign | lv_equality_sign_1_5= LessThanSignEqualsSign | lv_equality_sign_1_6= GreaterThanSignEqualsSign )
                    int alt80=6;
                    switch ( input.LA(1) ) {
                    case EqualsSignEqualsSign:
                        {
                        alt80=1;
                        }
                        break;
                    case ExclamationMarkEqualsSign:
                        {
                        alt80=2;
                        }
                        break;
                    case LessThanSign:
                        {
                        alt80=3;
                        }
                        break;
                    case GreaterThanSign:
                        {
                        alt80=4;
                        }
                        break;
                    case LessThanSignEqualsSign:
                        {
                        alt80=5;
                        }
                        break;
                    case GreaterThanSignEqualsSign:
                        {
                        alt80=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 0, input);

                        throw nvae;
                    }

                    switch (alt80) {
                        case 1 :
                            // InternalAnsibleDslParser.g:8544:7: lv_equality_sign_1_1= EqualsSignEqualsSign
                            {
                            lv_equality_sign_1_1=(Token)match(input,EqualsSignEqualsSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_equality_sign_1_1, grammarAccess.getETruthExpressionAccess().getEquality_signEqualsSignEqualsSignKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getETruthExpressionRule());
                              							}
                              							setWithLastConsumed(current, "equality_sign", lv_equality_sign_1_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalAnsibleDslParser.g:8555:7: lv_equality_sign_1_2= ExclamationMarkEqualsSign
                            {
                            lv_equality_sign_1_2=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_equality_sign_1_2, grammarAccess.getETruthExpressionAccess().getEquality_signExclamationMarkEqualsSignKeyword_1_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getETruthExpressionRule());
                              							}
                              							setWithLastConsumed(current, "equality_sign", lv_equality_sign_1_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalAnsibleDslParser.g:8566:7: lv_equality_sign_1_3= LessThanSign
                            {
                            lv_equality_sign_1_3=(Token)match(input,LessThanSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_equality_sign_1_3, grammarAccess.getETruthExpressionAccess().getEquality_signLessThanSignKeyword_1_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getETruthExpressionRule());
                              							}
                              							setWithLastConsumed(current, "equality_sign", lv_equality_sign_1_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalAnsibleDslParser.g:8577:7: lv_equality_sign_1_4= GreaterThanSign
                            {
                            lv_equality_sign_1_4=(Token)match(input,GreaterThanSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_equality_sign_1_4, grammarAccess.getETruthExpressionAccess().getEquality_signGreaterThanSignKeyword_1_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getETruthExpressionRule());
                              							}
                              							setWithLastConsumed(current, "equality_sign", lv_equality_sign_1_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalAnsibleDslParser.g:8588:7: lv_equality_sign_1_5= LessThanSignEqualsSign
                            {
                            lv_equality_sign_1_5=(Token)match(input,LessThanSignEqualsSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_equality_sign_1_5, grammarAccess.getETruthExpressionAccess().getEquality_signLessThanSignEqualsSignKeyword_1_0_0_4());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getETruthExpressionRule());
                              							}
                              							setWithLastConsumed(current, "equality_sign", lv_equality_sign_1_5, null);
                              						
                            }

                            }
                            break;
                        case 6 :
                            // InternalAnsibleDslParser.g:8599:7: lv_equality_sign_1_6= GreaterThanSignEqualsSign
                            {
                            lv_equality_sign_1_6=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_equality_sign_1_6, grammarAccess.getETruthExpressionAccess().getEquality_signGreaterThanSignEqualsSignKeyword_1_0_0_5());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getETruthExpressionRule());
                              							}
                              							setWithLastConsumed(current, "equality_sign", lv_equality_sign_1_6, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAnsibleDslParser.g:8612:4: ( (lv_right_value_2_0= ruleETruthExpression ) )
                    // InternalAnsibleDslParser.g:8613:5: (lv_right_value_2_0= ruleETruthExpression )
                    {
                    // InternalAnsibleDslParser.g:8613:5: (lv_right_value_2_0= ruleETruthExpression )
                    // InternalAnsibleDslParser.g:8614:6: lv_right_value_2_0= ruleETruthExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getETruthExpressionAccess().getRight_valueETruthExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_value_2_0=ruleETruthExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getETruthExpressionRule());
                      						}
                      						set(
                      							current,
                      							"right_value",
                      							lv_right_value_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.ETruthExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleETruthExpression"


    // $ANTLR start "entryRuleEOperation"
    // InternalAnsibleDslParser.g:8636:1: entryRuleEOperation returns [EObject current=null] : iv_ruleEOperation= ruleEOperation EOF ;
    public final EObject entryRuleEOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEOperation = null;


        try {
            // InternalAnsibleDslParser.g:8636:51: (iv_ruleEOperation= ruleEOperation EOF )
            // InternalAnsibleDslParser.g:8637:2: iv_ruleEOperation= ruleEOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEOperation=ruleEOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEOperation"


    // $ANTLR start "ruleEOperation"
    // InternalAnsibleDslParser.g:8643:1: ruleEOperation returns [EObject current=null] : ( ( (lv_left_operand_0_0= ruleEIsExpression ) ) ( ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) ) ( (lv_right_operand_2_0= ruleEOperation ) ) )? ) ;
    public final EObject ruleEOperation() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_1=null;
        Token lv_operator_1_2=null;
        Token lv_operator_1_3=null;
        Token lv_operator_1_4=null;
        Token lv_operator_1_5=null;
        Token lv_operator_1_6=null;
        Token lv_operator_1_7=null;
        EObject lv_left_operand_0_0 = null;

        EObject lv_right_operand_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8649:2: ( ( ( (lv_left_operand_0_0= ruleEIsExpression ) ) ( ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) ) ( (lv_right_operand_2_0= ruleEOperation ) ) )? ) )
            // InternalAnsibleDslParser.g:8650:2: ( ( (lv_left_operand_0_0= ruleEIsExpression ) ) ( ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) ) ( (lv_right_operand_2_0= ruleEOperation ) ) )? )
            {
            // InternalAnsibleDslParser.g:8650:2: ( ( (lv_left_operand_0_0= ruleEIsExpression ) ) ( ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) ) ( (lv_right_operand_2_0= ruleEOperation ) ) )? )
            // InternalAnsibleDslParser.g:8651:3: ( (lv_left_operand_0_0= ruleEIsExpression ) ) ( ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) ) ( (lv_right_operand_2_0= ruleEOperation ) ) )?
            {
            // InternalAnsibleDslParser.g:8651:3: ( (lv_left_operand_0_0= ruleEIsExpression ) )
            // InternalAnsibleDslParser.g:8652:4: (lv_left_operand_0_0= ruleEIsExpression )
            {
            // InternalAnsibleDslParser.g:8652:4: (lv_left_operand_0_0= ruleEIsExpression )
            // InternalAnsibleDslParser.g:8653:5: lv_left_operand_0_0= ruleEIsExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEOperationAccess().getLeft_operandEIsExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_left_operand_0_0=ruleEIsExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEOperationRule());
              					}
              					set(
              						current,
              						"left_operand",
              						lv_left_operand_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EIsExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8670:3: ( ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) ) ( (lv_right_operand_2_0= ruleEOperation ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( ((LA83_0>=AsteriskAsterisk && LA83_0<=SolidusSolidus)||LA83_0==PercentSign||(LA83_0>=Asterisk && LA83_0<=PlusSign)||LA83_0==HyphenMinus||LA83_0==Solidus) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalAnsibleDslParser.g:8671:4: ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) ) ( (lv_right_operand_2_0= ruleEOperation ) )
                    {
                    // InternalAnsibleDslParser.g:8671:4: ( ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) ) )
                    // InternalAnsibleDslParser.g:8672:5: ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) )
                    {
                    // InternalAnsibleDslParser.g:8672:5: ( (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk ) )
                    // InternalAnsibleDslParser.g:8673:6: (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk )
                    {
                    // InternalAnsibleDslParser.g:8673:6: (lv_operator_1_1= PlusSign | lv_operator_1_2= HyphenMinus | lv_operator_1_3= Solidus | lv_operator_1_4= SolidusSolidus | lv_operator_1_5= PercentSign | lv_operator_1_6= Asterisk | lv_operator_1_7= AsteriskAsterisk )
                    int alt82=7;
                    switch ( input.LA(1) ) {
                    case PlusSign:
                        {
                        alt82=1;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt82=2;
                        }
                        break;
                    case Solidus:
                        {
                        alt82=3;
                        }
                        break;
                    case SolidusSolidus:
                        {
                        alt82=4;
                        }
                        break;
                    case PercentSign:
                        {
                        alt82=5;
                        }
                        break;
                    case Asterisk:
                        {
                        alt82=6;
                        }
                        break;
                    case AsteriskAsterisk:
                        {
                        alt82=7;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 82, 0, input);

                        throw nvae;
                    }

                    switch (alt82) {
                        case 1 :
                            // InternalAnsibleDslParser.g:8674:7: lv_operator_1_1= PlusSign
                            {
                            lv_operator_1_1=(Token)match(input,PlusSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_operator_1_1, grammarAccess.getEOperationAccess().getOperatorPlusSignKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEOperationRule());
                              							}
                              							setWithLastConsumed(current, "operator", lv_operator_1_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalAnsibleDslParser.g:8685:7: lv_operator_1_2= HyphenMinus
                            {
                            lv_operator_1_2=(Token)match(input,HyphenMinus,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_operator_1_2, grammarAccess.getEOperationAccess().getOperatorHyphenMinusKeyword_1_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEOperationRule());
                              							}
                              							setWithLastConsumed(current, "operator", lv_operator_1_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalAnsibleDslParser.g:8696:7: lv_operator_1_3= Solidus
                            {
                            lv_operator_1_3=(Token)match(input,Solidus,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_operator_1_3, grammarAccess.getEOperationAccess().getOperatorSolidusKeyword_1_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEOperationRule());
                              							}
                              							setWithLastConsumed(current, "operator", lv_operator_1_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalAnsibleDslParser.g:8707:7: lv_operator_1_4= SolidusSolidus
                            {
                            lv_operator_1_4=(Token)match(input,SolidusSolidus,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_operator_1_4, grammarAccess.getEOperationAccess().getOperatorSolidusSolidusKeyword_1_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEOperationRule());
                              							}
                              							setWithLastConsumed(current, "operator", lv_operator_1_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalAnsibleDslParser.g:8718:7: lv_operator_1_5= PercentSign
                            {
                            lv_operator_1_5=(Token)match(input,PercentSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_operator_1_5, grammarAccess.getEOperationAccess().getOperatorPercentSignKeyword_1_0_0_4());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEOperationRule());
                              							}
                              							setWithLastConsumed(current, "operator", lv_operator_1_5, null);
                              						
                            }

                            }
                            break;
                        case 6 :
                            // InternalAnsibleDslParser.g:8729:7: lv_operator_1_6= Asterisk
                            {
                            lv_operator_1_6=(Token)match(input,Asterisk,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_operator_1_6, grammarAccess.getEOperationAccess().getOperatorAsteriskKeyword_1_0_0_5());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEOperationRule());
                              							}
                              							setWithLastConsumed(current, "operator", lv_operator_1_6, null);
                              						
                            }

                            }
                            break;
                        case 7 :
                            // InternalAnsibleDslParser.g:8740:7: lv_operator_1_7= AsteriskAsterisk
                            {
                            lv_operator_1_7=(Token)match(input,AsteriskAsterisk,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_operator_1_7, grammarAccess.getEOperationAccess().getOperatorAsteriskAsteriskKeyword_1_0_0_6());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEOperationRule());
                              							}
                              							setWithLastConsumed(current, "operator", lv_operator_1_7, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAnsibleDslParser.g:8753:4: ( (lv_right_operand_2_0= ruleEOperation ) )
                    // InternalAnsibleDslParser.g:8754:5: (lv_right_operand_2_0= ruleEOperation )
                    {
                    // InternalAnsibleDslParser.g:8754:5: (lv_right_operand_2_0= ruleEOperation )
                    // InternalAnsibleDslParser.g:8755:6: lv_right_operand_2_0= ruleEOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEOperationAccess().getRight_operandEOperationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_operand_2_0=ruleEOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEOperationRule());
                      						}
                      						set(
                      							current,
                      							"right_operand",
                      							lv_right_operand_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEOperation"


    // $ANTLR start "entryRuleEIsExpression"
    // InternalAnsibleDslParser.g:8777:1: entryRuleEIsExpression returns [EObject current=null] : iv_ruleEIsExpression= ruleEIsExpression EOF ;
    public final EObject entryRuleEIsExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEIsExpression = null;


        try {
            // InternalAnsibleDslParser.g:8777:54: (iv_ruleEIsExpression= ruleEIsExpression EOF )
            // InternalAnsibleDslParser.g:8778:2: iv_ruleEIsExpression= ruleEIsExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEIsExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEIsExpression=ruleEIsExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEIsExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEIsExpression"


    // $ANTLR start "ruleEIsExpression"
    // InternalAnsibleDslParser.g:8784:1: ruleEIsExpression returns [EObject current=null] : ( ( (lv_not_0_0= Not ) )? ( (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression ) ) ( (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) ) | ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) ) )? ) ;
    public final EObject ruleEIsExpression() throws RecognitionException {
        EObject current = null;

        Token lv_not_0_0=null;
        Token otherlv_2=null;
        Token lv_not_in_4_0=null;
        Token otherlv_5=null;
        EObject lv_parenthesised_expression_1_0 = null;

        EObject lv_status_3_0 = null;

        EObject lv_container_expression_6_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8790:2: ( ( ( (lv_not_0_0= Not ) )? ( (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression ) ) ( (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) ) | ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) ) )? ) )
            // InternalAnsibleDslParser.g:8791:2: ( ( (lv_not_0_0= Not ) )? ( (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression ) ) ( (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) ) | ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) ) )? )
            {
            // InternalAnsibleDslParser.g:8791:2: ( ( (lv_not_0_0= Not ) )? ( (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression ) ) ( (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) ) | ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) ) )? )
            // InternalAnsibleDslParser.g:8792:3: ( (lv_not_0_0= Not ) )? ( (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression ) ) ( (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) ) | ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) ) )?
            {
            // InternalAnsibleDslParser.g:8792:3: ( (lv_not_0_0= Not ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==Not) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalAnsibleDslParser.g:8793:4: (lv_not_0_0= Not )
                    {
                    // InternalAnsibleDslParser.g:8793:4: (lv_not_0_0= Not )
                    // InternalAnsibleDslParser.g:8794:5: lv_not_0_0= Not
                    {
                    lv_not_0_0=(Token)match(input,Not,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_not_0_0, grammarAccess.getEIsExpressionAccess().getNotNotKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEIsExpressionRule());
                      					}
                      					setWithLastConsumed(current, "not", lv_not_0_0, "not");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAnsibleDslParser.g:8806:3: ( (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression ) )
            // InternalAnsibleDslParser.g:8807:4: (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression )
            {
            // InternalAnsibleDslParser.g:8807:4: (lv_parenthesised_expression_1_0= ruleEParenthesisedExpression )
            // InternalAnsibleDslParser.g:8808:5: lv_parenthesised_expression_1_0= ruleEParenthesisedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEIsExpressionAccess().getParenthesised_expressionEParenthesisedExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_83);
            lv_parenthesised_expression_1_0=ruleEParenthesisedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEIsExpressionRule());
              					}
              					set(
              						current,
              						"parenthesised_expression",
              						lv_parenthesised_expression_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EParenthesisedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:8825:3: ( (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) ) | ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) ) )?
            int alt86=3;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==Is) ) {
                alt86=1;
            }
            else if ( (LA86_0==Not||LA86_0==In) ) {
                alt86=2;
            }
            switch (alt86) {
                case 1 :
                    // InternalAnsibleDslParser.g:8826:4: (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) )
                    {
                    // InternalAnsibleDslParser.g:8826:4: (otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) ) )
                    // InternalAnsibleDslParser.g:8827:5: otherlv_2= Is ( (lv_status_3_0= ruleEIsExpression ) )
                    {
                    otherlv_2=(Token)match(input,Is,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getEIsExpressionAccess().getIsKeyword_2_0_0());
                      				
                    }
                    // InternalAnsibleDslParser.g:8831:5: ( (lv_status_3_0= ruleEIsExpression ) )
                    // InternalAnsibleDslParser.g:8832:6: (lv_status_3_0= ruleEIsExpression )
                    {
                    // InternalAnsibleDslParser.g:8832:6: (lv_status_3_0= ruleEIsExpression )
                    // InternalAnsibleDslParser.g:8833:7: lv_status_3_0= ruleEIsExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEIsExpressionAccess().getStatusEIsExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_status_3_0=ruleEIsExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEIsExpressionRule());
                      							}
                      							set(
                      								current,
                      								"status",
                      								lv_status_3_0,
                      								"org.sodalite.sdl.ansible.AnsibleDsl.EIsExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:8852:4: ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) )
                    {
                    // InternalAnsibleDslParser.g:8852:4: ( ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) ) )
                    // InternalAnsibleDslParser.g:8853:5: ( (lv_not_in_4_0= Not ) )? otherlv_5= In ( (lv_container_expression_6_0= ruleEIsExpression ) )
                    {
                    // InternalAnsibleDslParser.g:8853:5: ( (lv_not_in_4_0= Not ) )?
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( (LA85_0==Not) ) {
                        alt85=1;
                    }
                    switch (alt85) {
                        case 1 :
                            // InternalAnsibleDslParser.g:8854:6: (lv_not_in_4_0= Not )
                            {
                            // InternalAnsibleDslParser.g:8854:6: (lv_not_in_4_0= Not )
                            // InternalAnsibleDslParser.g:8855:7: lv_not_in_4_0= Not
                            {
                            lv_not_in_4_0=(Token)match(input,Not,FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_not_in_4_0, grammarAccess.getEIsExpressionAccess().getNot_inNotKeyword_2_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEIsExpressionRule());
                              							}
                              							setWithLastConsumed(current, "not_in", lv_not_in_4_0, "not");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,In,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getEIsExpressionAccess().getInKeyword_2_1_1());
                      				
                    }
                    // InternalAnsibleDslParser.g:8871:5: ( (lv_container_expression_6_0= ruleEIsExpression ) )
                    // InternalAnsibleDslParser.g:8872:6: (lv_container_expression_6_0= ruleEIsExpression )
                    {
                    // InternalAnsibleDslParser.g:8872:6: (lv_container_expression_6_0= ruleEIsExpression )
                    // InternalAnsibleDslParser.g:8873:7: lv_container_expression_6_0= ruleEIsExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEIsExpressionAccess().getContainer_expressionEIsExpressionParserRuleCall_2_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_container_expression_6_0=ruleEIsExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEIsExpressionRule());
                      							}
                      							set(
                      								current,
                      								"container_expression",
                      								lv_container_expression_6_0,
                      								"org.sodalite.sdl.ansible.AnsibleDsl.EIsExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEIsExpression"


    // $ANTLR start "entryRuleEParenthesisedExpression"
    // InternalAnsibleDslParser.g:8896:1: entryRuleEParenthesisedExpression returns [EObject current=null] : iv_ruleEParenthesisedExpression= ruleEParenthesisedExpression EOF ;
    public final EObject entryRuleEParenthesisedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEParenthesisedExpression = null;


        try {
            // InternalAnsibleDslParser.g:8896:65: (iv_ruleEParenthesisedExpression= ruleEParenthesisedExpression EOF )
            // InternalAnsibleDslParser.g:8897:2: iv_ruleEParenthesisedExpression= ruleEParenthesisedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEParenthesisedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEParenthesisedExpression=ruleEParenthesisedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEParenthesisedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEParenthesisedExpression"


    // $ANTLR start "ruleEParenthesisedExpression"
    // InternalAnsibleDslParser.g:8903:1: ruleEParenthesisedExpression returns [EObject current=null] : ( ( ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) ) | (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis ) ) ( (lv_square_bracket_elements_4_0= ruleESquareBracketElement ) )* (otherlv_5= FullStop ( (lv_tail_6_0= ruleETailElement ) ) )* ) ;
    public final EObject ruleEParenthesisedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_basic_value_0_0 = null;

        EObject lv_parenthesised_term_2_0 = null;

        EObject lv_square_bracket_elements_4_0 = null;

        EObject lv_tail_6_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:8909:2: ( ( ( ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) ) | (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis ) ) ( (lv_square_bracket_elements_4_0= ruleESquareBracketElement ) )* (otherlv_5= FullStop ( (lv_tail_6_0= ruleETailElement ) ) )* ) )
            // InternalAnsibleDslParser.g:8910:2: ( ( ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) ) | (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis ) ) ( (lv_square_bracket_elements_4_0= ruleESquareBracketElement ) )* (otherlv_5= FullStop ( (lv_tail_6_0= ruleETailElement ) ) )* )
            {
            // InternalAnsibleDslParser.g:8910:2: ( ( ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) ) | (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis ) ) ( (lv_square_bracket_elements_4_0= ruleESquareBracketElement ) )* (otherlv_5= FullStop ( (lv_tail_6_0= ruleETailElement ) ) )* )
            // InternalAnsibleDslParser.g:8911:3: ( ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) ) | (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis ) ) ( (lv_square_bracket_elements_4_0= ruleESquareBracketElement ) )* (otherlv_5= FullStop ( (lv_tail_6_0= ruleETailElement ) ) )*
            {
            // InternalAnsibleDslParser.g:8911:3: ( ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) ) | (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis ) )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( LA87_0 == Registered_variable || LA87_0 >= Declared_variable && LA87_0 <= Index_or_loop_var || LA87_0 == Special_variable || LA87_0 == Interface_input || LA87_0 == Operation_input || LA87_0 == Fact_set || LA87_0 == LeftSquareBracket || LA87_0 == LeftCurlyBracket || LA87_0 == RULE_BOOLEAN || LA87_0 >= RULE_NULL && LA87_0 <= RULE_EXPONENTIAL_NUMBER || LA87_0 >= RULE_INTEGER && LA87_0 <= RULE_ID || LA87_0 == RULE_STRING ) {
                alt87=1;
            }
            else if ( (LA87_0==LeftParenthesis) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalAnsibleDslParser.g:8912:4: ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) )
                    {
                    // InternalAnsibleDslParser.g:8912:4: ( (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression ) )
                    // InternalAnsibleDslParser.g:8913:5: (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression )
                    {
                    // InternalAnsibleDslParser.g:8913:5: (lv_basic_value_0_0= ruleEValuePassedToJinjaExpression )
                    // InternalAnsibleDslParser.g:8914:6: lv_basic_value_0_0= ruleEValuePassedToJinjaExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEParenthesisedExpressionAccess().getBasic_valueEValuePassedToJinjaExpressionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_85);
                    lv_basic_value_0_0=ruleEValuePassedToJinjaExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEParenthesisedExpressionRule());
                      						}
                      						set(
                      							current,
                      							"basic_value",
                      							lv_basic_value_0_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassedToJinjaExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:8932:4: (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis )
                    {
                    // InternalAnsibleDslParser.g:8932:4: (otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis )
                    // InternalAnsibleDslParser.g:8933:5: otherlv_1= LeftParenthesis ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) otherlv_3= RightParenthesis
                    {
                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getEParenthesisedExpressionAccess().getLeftParenthesisKeyword_0_1_0());
                      				
                    }
                    // InternalAnsibleDslParser.g:8937:5: ( (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
                    // InternalAnsibleDslParser.g:8938:6: (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    {
                    // InternalAnsibleDslParser.g:8938:6: (lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    // InternalAnsibleDslParser.g:8939:7: lv_parenthesised_term_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEParenthesisedExpressionAccess().getParenthesised_termEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_0_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_86);
                    lv_parenthesised_term_2_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEParenthesisedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"parenthesised_term",
                      								lv_parenthesised_term_2_0,
                      								"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getEParenthesisedExpressionAccess().getRightParenthesisKeyword_0_1_2());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAnsibleDslParser.g:8962:3: ( (lv_square_bracket_elements_4_0= ruleESquareBracketElement ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==LeftSquareBracket) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:8963:4: (lv_square_bracket_elements_4_0= ruleESquareBracketElement )
            	    {
            	    // InternalAnsibleDslParser.g:8963:4: (lv_square_bracket_elements_4_0= ruleESquareBracketElement )
            	    // InternalAnsibleDslParser.g:8964:5: lv_square_bracket_elements_4_0= ruleESquareBracketElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEParenthesisedExpressionAccess().getSquare_bracket_elementsESquareBracketElementParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_square_bracket_elements_4_0=ruleESquareBracketElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEParenthesisedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"square_bracket_elements",
            	      						lv_square_bracket_elements_4_0,
            	      						"org.sodalite.sdl.ansible.AnsibleDsl.ESquareBracketElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            // InternalAnsibleDslParser.g:8981:3: (otherlv_5= FullStop ( (lv_tail_6_0= ruleETailElement ) ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==FullStop) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:8982:4: otherlv_5= FullStop ( (lv_tail_6_0= ruleETailElement ) )
            	    {
            	    otherlv_5=(Token)match(input,FullStop,FOLLOW_87); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getEParenthesisedExpressionAccess().getFullStopKeyword_2_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:8986:4: ( (lv_tail_6_0= ruleETailElement ) )
            	    // InternalAnsibleDslParser.g:8987:5: (lv_tail_6_0= ruleETailElement )
            	    {
            	    // InternalAnsibleDslParser.g:8987:5: (lv_tail_6_0= ruleETailElement )
            	    // InternalAnsibleDslParser.g:8988:6: lv_tail_6_0= ruleETailElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEParenthesisedExpressionAccess().getTailETailElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_tail_6_0=ruleETailElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEParenthesisedExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"tail",
            	      							lv_tail_6_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.ETailElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEParenthesisedExpression"


    // $ANTLR start "entryRuleEJinjaStatement"
    // InternalAnsibleDslParser.g:9010:1: entryRuleEJinjaStatement returns [EObject current=null] : iv_ruleEJinjaStatement= ruleEJinjaStatement EOF ;
    public final EObject entryRuleEJinjaStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEJinjaStatement = null;


        try {
            // InternalAnsibleDslParser.g:9010:56: (iv_ruleEJinjaStatement= ruleEJinjaStatement EOF )
            // InternalAnsibleDslParser.g:9011:2: iv_ruleEJinjaStatement= ruleEJinjaStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEJinjaStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEJinjaStatement=ruleEJinjaStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEJinjaStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEJinjaStatement"


    // $ANTLR start "ruleEJinjaStatement"
    // InternalAnsibleDslParser.g:9017:1: ruleEJinjaStatement returns [EObject current=null] : (this_EIfStatement_0= ruleEIfStatement | this_EForStatement_1= ruleEForStatement ) ;
    public final EObject ruleEJinjaStatement() throws RecognitionException {
        EObject current = null;

        EObject this_EIfStatement_0 = null;

        EObject this_EForStatement_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9023:2: ( (this_EIfStatement_0= ruleEIfStatement | this_EForStatement_1= ruleEForStatement ) )
            // InternalAnsibleDslParser.g:9024:2: (this_EIfStatement_0= ruleEIfStatement | this_EForStatement_1= ruleEForStatement )
            {
            // InternalAnsibleDslParser.g:9024:2: (this_EIfStatement_0= ruleEIfStatement | this_EForStatement_1= ruleEForStatement )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==LeftCurlyBracketPercentSign) ) {
                switch ( input.LA(2) ) {
                case PlusSign:
                    {
                    int LA90_2 = input.LA(3);

                    if ( (LA90_2==If) ) {
                        alt90=1;
                    }
                    else if ( (LA90_2==For) ) {
                        alt90=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 90, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case HyphenMinus:
                    {
                    int LA90_3 = input.LA(3);

                    if ( (LA90_3==If) ) {
                        alt90=1;
                    }
                    else if ( (LA90_3==For) ) {
                        alt90=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 90, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case For:
                    {
                    alt90=2;
                    }
                    break;
                case If:
                    {
                    alt90=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalAnsibleDslParser.g:9025:3: this_EIfStatement_0= ruleEIfStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEJinjaStatementAccess().getEIfStatementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EIfStatement_0=ruleEIfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EIfStatement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:9034:3: this_EForStatement_1= ruleEForStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEJinjaStatementAccess().getEForStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EForStatement_1=ruleEForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EForStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEJinjaStatement"


    // $ANTLR start "entryRuleEIfStatement"
    // InternalAnsibleDslParser.g:9046:1: entryRuleEIfStatement returns [EObject current=null] : iv_ruleEIfStatement= ruleEIfStatement EOF ;
    public final EObject entryRuleEIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEIfStatement = null;


        try {
            // InternalAnsibleDslParser.g:9046:53: (iv_ruleEIfStatement= ruleEIfStatement EOF )
            // InternalAnsibleDslParser.g:9047:2: iv_ruleEIfStatement= ruleEIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEIfStatement=ruleEIfStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEIfStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEIfStatement"


    // $ANTLR start "ruleEIfStatement"
    // InternalAnsibleDslParser.g:9053:1: ruleEIfStatement returns [EObject current=null] : (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= If ( (lv_if_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_if_body_5_0= ruleEValuePassed ) ) ( (lv_elif_blocks_6_0= ruleEElifBlock ) )* (otherlv_7= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )? otherlv_9= Else otherlv_10= PercentSignRightCurlyBracket ( (lv_else_body_11_0= ruleEValuePassed ) ) )? otherlv_12= LeftCurlyBracketPercentSign ( ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) ) )? otherlv_14= Endif otherlv_15= PercentSignRightCurlyBracket ) ;
    public final EObject ruleEIfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_if_block_sign_1_1=null;
        Token lv_if_block_sign_1_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token lv_else_block_sign_8_1=null;
        Token lv_else_block_sign_8_2=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_endif_block_sign_13_1=null;
        Token lv_endif_block_sign_13_2=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_if_condition_3_0 = null;

        EObject lv_if_body_5_0 = null;

        EObject lv_elif_blocks_6_0 = null;

        EObject lv_else_body_11_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9059:2: ( (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= If ( (lv_if_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_if_body_5_0= ruleEValuePassed ) ) ( (lv_elif_blocks_6_0= ruleEElifBlock ) )* (otherlv_7= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )? otherlv_9= Else otherlv_10= PercentSignRightCurlyBracket ( (lv_else_body_11_0= ruleEValuePassed ) ) )? otherlv_12= LeftCurlyBracketPercentSign ( ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) ) )? otherlv_14= Endif otherlv_15= PercentSignRightCurlyBracket ) )
            // InternalAnsibleDslParser.g:9060:2: (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= If ( (lv_if_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_if_body_5_0= ruleEValuePassed ) ) ( (lv_elif_blocks_6_0= ruleEElifBlock ) )* (otherlv_7= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )? otherlv_9= Else otherlv_10= PercentSignRightCurlyBracket ( (lv_else_body_11_0= ruleEValuePassed ) ) )? otherlv_12= LeftCurlyBracketPercentSign ( ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) ) )? otherlv_14= Endif otherlv_15= PercentSignRightCurlyBracket )
            {
            // InternalAnsibleDslParser.g:9060:2: (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= If ( (lv_if_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_if_body_5_0= ruleEValuePassed ) ) ( (lv_elif_blocks_6_0= ruleEElifBlock ) )* (otherlv_7= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )? otherlv_9= Else otherlv_10= PercentSignRightCurlyBracket ( (lv_else_body_11_0= ruleEValuePassed ) ) )? otherlv_12= LeftCurlyBracketPercentSign ( ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) ) )? otherlv_14= Endif otherlv_15= PercentSignRightCurlyBracket )
            // InternalAnsibleDslParser.g:9061:3: otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= If ( (lv_if_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_if_body_5_0= ruleEValuePassed ) ) ( (lv_elif_blocks_6_0= ruleEElifBlock ) )* (otherlv_7= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )? otherlv_9= Else otherlv_10= PercentSignRightCurlyBracket ( (lv_else_body_11_0= ruleEValuePassed ) ) )? otherlv_12= LeftCurlyBracketPercentSign ( ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) ) )? otherlv_14= Endif otherlv_15= PercentSignRightCurlyBracket
            {
            otherlv_0=(Token)match(input,LeftCurlyBracketPercentSign,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEIfStatementAccess().getLeftCurlyBracketPercentSignKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9065:3: ( ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==PlusSign||LA92_0==HyphenMinus) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalAnsibleDslParser.g:9066:4: ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) )
                    {
                    // InternalAnsibleDslParser.g:9066:4: ( (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus ) )
                    // InternalAnsibleDslParser.g:9067:5: (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus )
                    {
                    // InternalAnsibleDslParser.g:9067:5: (lv_if_block_sign_1_1= PlusSign | lv_if_block_sign_1_2= HyphenMinus )
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==PlusSign) ) {
                        alt91=1;
                    }
                    else if ( (LA91_0==HyphenMinus) ) {
                        alt91=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 91, 0, input);

                        throw nvae;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalAnsibleDslParser.g:9068:6: lv_if_block_sign_1_1= PlusSign
                            {
                            lv_if_block_sign_1_1=(Token)match(input,PlusSign,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_if_block_sign_1_1, grammarAccess.getEIfStatementAccess().getIf_block_signPlusSignKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEIfStatementRule());
                              						}
                              						setWithLastConsumed(current, "if_block_sign", lv_if_block_sign_1_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAnsibleDslParser.g:9079:6: lv_if_block_sign_1_2= HyphenMinus
                            {
                            lv_if_block_sign_1_2=(Token)match(input,HyphenMinus,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_if_block_sign_1_2, grammarAccess.getEIfStatementAccess().getIf_block_signHyphenMinusKeyword_1_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEIfStatementRule());
                              						}
                              						setWithLastConsumed(current, "if_block_sign", lv_if_block_sign_1_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,If,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEIfStatementAccess().getIfKeyword_2());
              		
            }
            // InternalAnsibleDslParser.g:9096:3: ( (lv_if_condition_3_0= ruleEFilteredExpression ) )
            // InternalAnsibleDslParser.g:9097:4: (lv_if_condition_3_0= ruleEFilteredExpression )
            {
            // InternalAnsibleDslParser.g:9097:4: (lv_if_condition_3_0= ruleEFilteredExpression )
            // InternalAnsibleDslParser.g:9098:5: lv_if_condition_3_0= ruleEFilteredExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEIfStatementAccess().getIf_conditionEFilteredExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_90);
            lv_if_condition_3_0=ruleEFilteredExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEIfStatementRule());
              					}
              					set(
              						current,
              						"if_condition",
              						lv_if_condition_3_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,PercentSignRightCurlyBracket,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEIfStatementAccess().getPercentSignRightCurlyBracketKeyword_4());
              		
            }
            // InternalAnsibleDslParser.g:9119:3: ( (lv_if_body_5_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:9120:4: (lv_if_body_5_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:9120:4: (lv_if_body_5_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:9121:5: lv_if_body_5_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEIfStatementAccess().getIf_bodyEValuePassedParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_91);
            lv_if_body_5_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEIfStatementRule());
              					}
              					set(
              						current,
              						"if_body",
              						lv_if_body_5_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:9138:3: ( (lv_elif_blocks_6_0= ruleEElifBlock ) )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==LeftCurlyBracketPercentSign) ) {
                    switch ( input.LA(2) ) {
                    case PlusSign:
                        {
                        int LA93_2 = input.LA(3);

                        if ( (LA93_2==Elif) ) {
                            alt93=1;
                        }


                        }
                        break;
                    case HyphenMinus:
                        {
                        int LA93_3 = input.LA(3);

                        if ( (LA93_3==Elif) ) {
                            alt93=1;
                        }


                        }
                        break;
                    case Elif:
                        {
                        alt93=1;
                        }
                        break;

                    }

                }


                switch (alt93) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:9139:4: (lv_elif_blocks_6_0= ruleEElifBlock )
            	    {
            	    // InternalAnsibleDslParser.g:9139:4: (lv_elif_blocks_6_0= ruleEElifBlock )
            	    // InternalAnsibleDslParser.g:9140:5: lv_elif_blocks_6_0= ruleEElifBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEIfStatementAccess().getElif_blocksEElifBlockParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_elif_blocks_6_0=ruleEElifBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEIfStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elif_blocks",
            	      						lv_elif_blocks_6_0,
            	      						"org.sodalite.sdl.ansible.AnsibleDsl.EElifBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            // InternalAnsibleDslParser.g:9157:3: (otherlv_7= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )? otherlv_9= Else otherlv_10= PercentSignRightCurlyBracket ( (lv_else_body_11_0= ruleEValuePassed ) ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==LeftCurlyBracketPercentSign) ) {
                switch ( input.LA(2) ) {
                    case PlusSign:
                        {
                        int LA96_2 = input.LA(3);

                        if ( (LA96_2==Else) ) {
                            alt96=1;
                        }
                        }
                        break;
                    case HyphenMinus:
                        {
                        int LA96_3 = input.LA(3);

                        if ( (LA96_3==Else) ) {
                            alt96=1;
                        }
                        }
                        break;
                    case Else:
                        {
                        alt96=1;
                        }
                        break;
                }

            }
            switch (alt96) {
                case 1 :
                    // InternalAnsibleDslParser.g:9158:4: otherlv_7= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )? otherlv_9= Else otherlv_10= PercentSignRightCurlyBracket ( (lv_else_body_11_0= ruleEValuePassed ) )
                    {
                    otherlv_7=(Token)match(input,LeftCurlyBracketPercentSign,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getEIfStatementAccess().getLeftCurlyBracketPercentSignKeyword_7_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:9162:4: ( ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) ) )?
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==PlusSign||LA95_0==HyphenMinus) ) {
                        alt95=1;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalAnsibleDslParser.g:9163:5: ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) )
                            {
                            // InternalAnsibleDslParser.g:9163:5: ( (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus ) )
                            // InternalAnsibleDslParser.g:9164:6: (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus )
                            {
                            // InternalAnsibleDslParser.g:9164:6: (lv_else_block_sign_8_1= PlusSign | lv_else_block_sign_8_2= HyphenMinus )
                            int alt94=2;
                            int LA94_0 = input.LA(1);

                            if ( (LA94_0==PlusSign) ) {
                                alt94=1;
                            }
                            else if ( (LA94_0==HyphenMinus) ) {
                                alt94=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 94, 0, input);

                                throw nvae;
                            }
                            switch (alt94) {
                                case 1 :
                                    // InternalAnsibleDslParser.g:9165:7: lv_else_block_sign_8_1= PlusSign
                                    {
                                    lv_else_block_sign_8_1=(Token)match(input,PlusSign,FOLLOW_93); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_else_block_sign_8_1, grammarAccess.getEIfStatementAccess().getElse_block_signPlusSignKeyword_7_1_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getEIfStatementRule());
                                      							}
                                      							setWithLastConsumed(current, "else_block_sign", lv_else_block_sign_8_1, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalAnsibleDslParser.g:9176:7: lv_else_block_sign_8_2= HyphenMinus
                                    {
                                    lv_else_block_sign_8_2=(Token)match(input,HyphenMinus,FOLLOW_93); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_else_block_sign_8_2, grammarAccess.getEIfStatementAccess().getElse_block_signHyphenMinusKeyword_7_1_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getEIfStatementRule());
                                      							}
                                      							setWithLastConsumed(current, "else_block_sign", lv_else_block_sign_8_2, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,Else,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getEIfStatementAccess().getElseKeyword_7_2());
                      			
                    }
                    otherlv_10=(Token)match(input,PercentSignRightCurlyBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getEIfStatementAccess().getPercentSignRightCurlyBracketKeyword_7_3());
                      			
                    }
                    // InternalAnsibleDslParser.g:9197:4: ( (lv_else_body_11_0= ruleEValuePassed ) )
                    // InternalAnsibleDslParser.g:9198:5: (lv_else_body_11_0= ruleEValuePassed )
                    {
                    // InternalAnsibleDslParser.g:9198:5: (lv_else_body_11_0= ruleEValuePassed )
                    // InternalAnsibleDslParser.g:9199:6: lv_else_body_11_0= ruleEValuePassed
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEIfStatementAccess().getElse_bodyEValuePassedParserRuleCall_7_4_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_else_body_11_0=ruleEValuePassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEIfStatementRule());
                      						}
                      						set(
                      							current,
                      							"else_body",
                      							lv_else_body_11_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,LeftCurlyBracketPercentSign,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getEIfStatementAccess().getLeftCurlyBracketPercentSignKeyword_8());
              		
            }
            // InternalAnsibleDslParser.g:9221:3: ( ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==PlusSign||LA98_0==HyphenMinus) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalAnsibleDslParser.g:9222:4: ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) )
                    {
                    // InternalAnsibleDslParser.g:9222:4: ( (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus ) )
                    // InternalAnsibleDslParser.g:9223:5: (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus )
                    {
                    // InternalAnsibleDslParser.g:9223:5: (lv_endif_block_sign_13_1= PlusSign | lv_endif_block_sign_13_2= HyphenMinus )
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==PlusSign) ) {
                        alt97=1;
                    }
                    else if ( (LA97_0==HyphenMinus) ) {
                        alt97=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 0, input);

                        throw nvae;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalAnsibleDslParser.g:9224:6: lv_endif_block_sign_13_1= PlusSign
                            {
                            lv_endif_block_sign_13_1=(Token)match(input,PlusSign,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_endif_block_sign_13_1, grammarAccess.getEIfStatementAccess().getEndif_block_signPlusSignKeyword_9_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEIfStatementRule());
                              						}
                              						setWithLastConsumed(current, "endif_block_sign", lv_endif_block_sign_13_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAnsibleDslParser.g:9235:6: lv_endif_block_sign_13_2= HyphenMinus
                            {
                            lv_endif_block_sign_13_2=(Token)match(input,HyphenMinus,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_endif_block_sign_13_2, grammarAccess.getEIfStatementAccess().getEndif_block_signHyphenMinusKeyword_9_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEIfStatementRule());
                              						}
                              						setWithLastConsumed(current, "endif_block_sign", lv_endif_block_sign_13_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_14=(Token)match(input,Endif,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getEIfStatementAccess().getEndifKeyword_10());
              		
            }
            otherlv_15=(Token)match(input,PercentSignRightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getEIfStatementAccess().getPercentSignRightCurlyBracketKeyword_11());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEIfStatement"


    // $ANTLR start "entryRuleEElifBlock"
    // InternalAnsibleDslParser.g:9260:1: entryRuleEElifBlock returns [EObject current=null] : iv_ruleEElifBlock= ruleEElifBlock EOF ;
    public final EObject entryRuleEElifBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEElifBlock = null;


        try {
            // InternalAnsibleDslParser.g:9260:51: (iv_ruleEElifBlock= ruleEElifBlock EOF )
            // InternalAnsibleDslParser.g:9261:2: iv_ruleEElifBlock= ruleEElifBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEElifBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEElifBlock=ruleEElifBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEElifBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEElifBlock"


    // $ANTLR start "ruleEElifBlock"
    // InternalAnsibleDslParser.g:9267:1: ruleEElifBlock returns [EObject current=null] : (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= Elif ( (lv_elif_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_elif_body_5_0= ruleEValuePassed ) ) ) ;
    public final EObject ruleEElifBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_elif_block_sign_1_1=null;
        Token lv_elif_block_sign_1_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_elif_condition_3_0 = null;

        EObject lv_elif_body_5_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9273:2: ( (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= Elif ( (lv_elif_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_elif_body_5_0= ruleEValuePassed ) ) ) )
            // InternalAnsibleDslParser.g:9274:2: (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= Elif ( (lv_elif_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_elif_body_5_0= ruleEValuePassed ) ) )
            {
            // InternalAnsibleDslParser.g:9274:2: (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= Elif ( (lv_elif_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_elif_body_5_0= ruleEValuePassed ) ) )
            // InternalAnsibleDslParser.g:9275:3: otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= Elif ( (lv_elif_condition_3_0= ruleEFilteredExpression ) ) otherlv_4= PercentSignRightCurlyBracket ( (lv_elif_body_5_0= ruleEValuePassed ) )
            {
            otherlv_0=(Token)match(input,LeftCurlyBracketPercentSign,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEElifBlockAccess().getLeftCurlyBracketPercentSignKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9279:3: ( ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==PlusSign||LA100_0==HyphenMinus) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalAnsibleDslParser.g:9280:4: ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) )
                    {
                    // InternalAnsibleDslParser.g:9280:4: ( (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus ) )
                    // InternalAnsibleDslParser.g:9281:5: (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus )
                    {
                    // InternalAnsibleDslParser.g:9281:5: (lv_elif_block_sign_1_1= PlusSign | lv_elif_block_sign_1_2= HyphenMinus )
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==PlusSign) ) {
                        alt99=1;
                    }
                    else if ( (LA99_0==HyphenMinus) ) {
                        alt99=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 99, 0, input);

                        throw nvae;
                    }
                    switch (alt99) {
                        case 1 :
                            // InternalAnsibleDslParser.g:9282:6: lv_elif_block_sign_1_1= PlusSign
                            {
                            lv_elif_block_sign_1_1=(Token)match(input,PlusSign,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_elif_block_sign_1_1, grammarAccess.getEElifBlockAccess().getElif_block_signPlusSignKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEElifBlockRule());
                              						}
                              						setWithLastConsumed(current, "elif_block_sign", lv_elif_block_sign_1_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAnsibleDslParser.g:9293:6: lv_elif_block_sign_1_2= HyphenMinus
                            {
                            lv_elif_block_sign_1_2=(Token)match(input,HyphenMinus,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_elif_block_sign_1_2, grammarAccess.getEElifBlockAccess().getElif_block_signHyphenMinusKeyword_1_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEElifBlockRule());
                              						}
                              						setWithLastConsumed(current, "elif_block_sign", lv_elif_block_sign_1_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,Elif,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEElifBlockAccess().getElifKeyword_2());
              		
            }
            // InternalAnsibleDslParser.g:9310:3: ( (lv_elif_condition_3_0= ruleEFilteredExpression ) )
            // InternalAnsibleDslParser.g:9311:4: (lv_elif_condition_3_0= ruleEFilteredExpression )
            {
            // InternalAnsibleDslParser.g:9311:4: (lv_elif_condition_3_0= ruleEFilteredExpression )
            // InternalAnsibleDslParser.g:9312:5: lv_elif_condition_3_0= ruleEFilteredExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEElifBlockAccess().getElif_conditionEFilteredExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_90);
            lv_elif_condition_3_0=ruleEFilteredExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEElifBlockRule());
              					}
              					set(
              						current,
              						"elif_condition",
              						lv_elif_condition_3_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,PercentSignRightCurlyBracket,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEElifBlockAccess().getPercentSignRightCurlyBracketKeyword_4());
              		
            }
            // InternalAnsibleDslParser.g:9333:3: ( (lv_elif_body_5_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:9334:4: (lv_elif_body_5_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:9334:4: (lv_elif_body_5_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:9335:5: lv_elif_body_5_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEElifBlockAccess().getElif_bodyEValuePassedParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elif_body_5_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEElifBlockRule());
              					}
              					set(
              						current,
              						"elif_body",
              						lv_elif_body_5_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEElifBlock"


    // $ANTLR start "entryRuleEForStatement"
    // InternalAnsibleDslParser.g:9356:1: entryRuleEForStatement returns [EObject current=null] : iv_ruleEForStatement= ruleEForStatement EOF ;
    public final EObject entryRuleEForStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEForStatement = null;


        try {
            // InternalAnsibleDslParser.g:9356:54: (iv_ruleEForStatement= ruleEForStatement EOF )
            // InternalAnsibleDslParser.g:9357:2: iv_ruleEForStatement= ruleEForStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEForStatement=ruleEForStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEForStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEForStatement"


    // $ANTLR start "ruleEForStatement"
    // InternalAnsibleDslParser.g:9363:1: ruleEForStatement returns [EObject current=null] : (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= For ( (lv_identifiers_3_0= RULE_ID ) ) (otherlv_4= Comma ( (lv_identifiers_5_0= RULE_ID ) ) )* otherlv_6= In ( (lv_list_7_0= ruleEFilteredExpression ) ) (otherlv_8= If ( (lv_condition_9_0= ruleEFilteredExpression ) ) )? ( (lv_recursive_10_0= RULE_ID ) )? otherlv_11= PercentSignRightCurlyBracket ( (lv_for_body_12_0= ruleEValuePassed ) ) (otherlv_13= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )? otherlv_15= Else otherlv_16= PercentSignRightCurlyBracket ( (lv_else_body_17_0= ruleEValuePassed ) ) )? otherlv_18= LeftCurlyBracketPercentSign ( ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) ) )? otherlv_20= Endfor otherlv_21= PercentSignRightCurlyBracket ) ;
    public final EObject ruleEForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_for_block_sign_1_1=null;
        Token lv_for_block_sign_1_2=null;
        Token otherlv_2=null;
        Token lv_identifiers_3_0=null;
        Token otherlv_4=null;
        Token lv_identifiers_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_recursive_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_else_block_sign_14_1=null;
        Token lv_else_block_sign_14_2=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_endfor_block_sign_19_1=null;
        Token lv_endfor_block_sign_19_2=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        EObject lv_list_7_0 = null;

        EObject lv_condition_9_0 = null;

        EObject lv_for_body_12_0 = null;

        EObject lv_else_body_17_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9369:2: ( (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= For ( (lv_identifiers_3_0= RULE_ID ) ) (otherlv_4= Comma ( (lv_identifiers_5_0= RULE_ID ) ) )* otherlv_6= In ( (lv_list_7_0= ruleEFilteredExpression ) ) (otherlv_8= If ( (lv_condition_9_0= ruleEFilteredExpression ) ) )? ( (lv_recursive_10_0= RULE_ID ) )? otherlv_11= PercentSignRightCurlyBracket ( (lv_for_body_12_0= ruleEValuePassed ) ) (otherlv_13= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )? otherlv_15= Else otherlv_16= PercentSignRightCurlyBracket ( (lv_else_body_17_0= ruleEValuePassed ) ) )? otherlv_18= LeftCurlyBracketPercentSign ( ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) ) )? otherlv_20= Endfor otherlv_21= PercentSignRightCurlyBracket ) )
            // InternalAnsibleDslParser.g:9370:2: (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= For ( (lv_identifiers_3_0= RULE_ID ) ) (otherlv_4= Comma ( (lv_identifiers_5_0= RULE_ID ) ) )* otherlv_6= In ( (lv_list_7_0= ruleEFilteredExpression ) ) (otherlv_8= If ( (lv_condition_9_0= ruleEFilteredExpression ) ) )? ( (lv_recursive_10_0= RULE_ID ) )? otherlv_11= PercentSignRightCurlyBracket ( (lv_for_body_12_0= ruleEValuePassed ) ) (otherlv_13= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )? otherlv_15= Else otherlv_16= PercentSignRightCurlyBracket ( (lv_else_body_17_0= ruleEValuePassed ) ) )? otherlv_18= LeftCurlyBracketPercentSign ( ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) ) )? otherlv_20= Endfor otherlv_21= PercentSignRightCurlyBracket )
            {
            // InternalAnsibleDslParser.g:9370:2: (otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= For ( (lv_identifiers_3_0= RULE_ID ) ) (otherlv_4= Comma ( (lv_identifiers_5_0= RULE_ID ) ) )* otherlv_6= In ( (lv_list_7_0= ruleEFilteredExpression ) ) (otherlv_8= If ( (lv_condition_9_0= ruleEFilteredExpression ) ) )? ( (lv_recursive_10_0= RULE_ID ) )? otherlv_11= PercentSignRightCurlyBracket ( (lv_for_body_12_0= ruleEValuePassed ) ) (otherlv_13= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )? otherlv_15= Else otherlv_16= PercentSignRightCurlyBracket ( (lv_else_body_17_0= ruleEValuePassed ) ) )? otherlv_18= LeftCurlyBracketPercentSign ( ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) ) )? otherlv_20= Endfor otherlv_21= PercentSignRightCurlyBracket )
            // InternalAnsibleDslParser.g:9371:3: otherlv_0= LeftCurlyBracketPercentSign ( ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) ) )? otherlv_2= For ( (lv_identifiers_3_0= RULE_ID ) ) (otherlv_4= Comma ( (lv_identifiers_5_0= RULE_ID ) ) )* otherlv_6= In ( (lv_list_7_0= ruleEFilteredExpression ) ) (otherlv_8= If ( (lv_condition_9_0= ruleEFilteredExpression ) ) )? ( (lv_recursive_10_0= RULE_ID ) )? otherlv_11= PercentSignRightCurlyBracket ( (lv_for_body_12_0= ruleEValuePassed ) ) (otherlv_13= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )? otherlv_15= Else otherlv_16= PercentSignRightCurlyBracket ( (lv_else_body_17_0= ruleEValuePassed ) ) )? otherlv_18= LeftCurlyBracketPercentSign ( ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) ) )? otherlv_20= Endfor otherlv_21= PercentSignRightCurlyBracket
            {
            otherlv_0=(Token)match(input,LeftCurlyBracketPercentSign,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEForStatementAccess().getLeftCurlyBracketPercentSignKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9375:3: ( ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==PlusSign||LA102_0==HyphenMinus) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalAnsibleDslParser.g:9376:4: ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) )
                    {
                    // InternalAnsibleDslParser.g:9376:4: ( (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus ) )
                    // InternalAnsibleDslParser.g:9377:5: (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus )
                    {
                    // InternalAnsibleDslParser.g:9377:5: (lv_for_block_sign_1_1= PlusSign | lv_for_block_sign_1_2= HyphenMinus )
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==PlusSign) ) {
                        alt101=1;
                    }
                    else if ( (LA101_0==HyphenMinus) ) {
                        alt101=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalAnsibleDslParser.g:9378:6: lv_for_block_sign_1_1= PlusSign
                            {
                            lv_for_block_sign_1_1=(Token)match(input,PlusSign,FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_for_block_sign_1_1, grammarAccess.getEForStatementAccess().getFor_block_signPlusSignKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEForStatementRule());
                              						}
                              						setWithLastConsumed(current, "for_block_sign", lv_for_block_sign_1_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAnsibleDslParser.g:9389:6: lv_for_block_sign_1_2= HyphenMinus
                            {
                            lv_for_block_sign_1_2=(Token)match(input,HyphenMinus,FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_for_block_sign_1_2, grammarAccess.getEForStatementAccess().getFor_block_signHyphenMinusKeyword_1_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEForStatementRule());
                              						}
                              						setWithLastConsumed(current, "for_block_sign", lv_for_block_sign_1_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,For,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEForStatementAccess().getForKeyword_2());
              		
            }
            // InternalAnsibleDslParser.g:9406:3: ( (lv_identifiers_3_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:9407:4: (lv_identifiers_3_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9407:4: (lv_identifiers_3_0= RULE_ID )
            // InternalAnsibleDslParser.g:9408:5: lv_identifiers_3_0= RULE_ID
            {
            lv_identifiers_3_0=(Token)match(input,RULE_ID,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_identifiers_3_0, grammarAccess.getEForStatementAccess().getIdentifiersIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEForStatementRule());
              					}
              					addWithLastConsumed(
              						current,
              						"identifiers",
              						lv_identifiers_3_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:9424:3: (otherlv_4= Comma ( (lv_identifiers_5_0= RULE_ID ) ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==Comma) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:9425:4: otherlv_4= Comma ( (lv_identifiers_5_0= RULE_ID ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getEForStatementAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:9429:4: ( (lv_identifiers_5_0= RULE_ID ) )
            	    // InternalAnsibleDslParser.g:9430:5: (lv_identifiers_5_0= RULE_ID )
            	    {
            	    // InternalAnsibleDslParser.g:9430:5: (lv_identifiers_5_0= RULE_ID )
            	    // InternalAnsibleDslParser.g:9431:6: lv_identifiers_5_0= RULE_ID
            	    {
            	    lv_identifiers_5_0=(Token)match(input,RULE_ID,FOLLOW_100); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_identifiers_5_0, grammarAccess.getEForStatementAccess().getIdentifiersIDTerminalRuleCall_4_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getEForStatementRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"identifiers",
            	      							lv_identifiers_5_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.ID");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            otherlv_6=(Token)match(input,In,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEForStatementAccess().getInKeyword_5());
              		
            }
            // InternalAnsibleDslParser.g:9452:3: ( (lv_list_7_0= ruleEFilteredExpression ) )
            // InternalAnsibleDslParser.g:9453:4: (lv_list_7_0= ruleEFilteredExpression )
            {
            // InternalAnsibleDslParser.g:9453:4: (lv_list_7_0= ruleEFilteredExpression )
            // InternalAnsibleDslParser.g:9454:5: lv_list_7_0= ruleEFilteredExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEForStatementAccess().getListEFilteredExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_101);
            lv_list_7_0=ruleEFilteredExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEForStatementRule());
              					}
              					set(
              						current,
              						"list",
              						lv_list_7_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:9471:3: (otherlv_8= If ( (lv_condition_9_0= ruleEFilteredExpression ) ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==If) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalAnsibleDslParser.g:9472:4: otherlv_8= If ( (lv_condition_9_0= ruleEFilteredExpression ) )
                    {
                    otherlv_8=(Token)match(input,If,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getEForStatementAccess().getIfKeyword_7_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:9476:4: ( (lv_condition_9_0= ruleEFilteredExpression ) )
                    // InternalAnsibleDslParser.g:9477:5: (lv_condition_9_0= ruleEFilteredExpression )
                    {
                    // InternalAnsibleDslParser.g:9477:5: (lv_condition_9_0= ruleEFilteredExpression )
                    // InternalAnsibleDslParser.g:9478:6: lv_condition_9_0= ruleEFilteredExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEForStatementAccess().getConditionEFilteredExpressionParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_102);
                    lv_condition_9_0=ruleEFilteredExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEForStatementRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_9_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EFilteredExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalAnsibleDslParser.g:9496:3: ( (lv_recursive_10_0= RULE_ID ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==RULE_ID) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalAnsibleDslParser.g:9497:4: (lv_recursive_10_0= RULE_ID )
                    {
                    // InternalAnsibleDslParser.g:9497:4: (lv_recursive_10_0= RULE_ID )
                    // InternalAnsibleDslParser.g:9498:5: lv_recursive_10_0= RULE_ID
                    {
                    lv_recursive_10_0=(Token)match(input,RULE_ID,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_recursive_10_0, grammarAccess.getEForStatementAccess().getRecursiveIDTerminalRuleCall_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEForStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"recursive",
                      						lv_recursive_10_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,PercentSignRightCurlyBracket,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getEForStatementAccess().getPercentSignRightCurlyBracketKeyword_9());
              		
            }
            // InternalAnsibleDslParser.g:9518:3: ( (lv_for_body_12_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:9519:4: (lv_for_body_12_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:9519:4: (lv_for_body_12_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:9520:5: lv_for_body_12_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEForStatementAccess().getFor_bodyEValuePassedParserRuleCall_10_0());
              				
            }
            pushFollow(FOLLOW_91);
            lv_for_body_12_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEForStatementRule());
              					}
              					set(
              						current,
              						"for_body",
              						lv_for_body_12_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:9537:3: (otherlv_13= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )? otherlv_15= Else otherlv_16= PercentSignRightCurlyBracket ( (lv_else_body_17_0= ruleEValuePassed ) ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==LeftCurlyBracketPercentSign) ) {
                switch ( input.LA(2) ) {
                    case PlusSign:
                        {
                        int LA108_2 = input.LA(3);

                        if ( (LA108_2==Else) ) {
                            alt108=1;
                        }
                        }
                        break;
                    case HyphenMinus:
                        {
                        int LA108_3 = input.LA(3);

                        if ( (LA108_3==Else) ) {
                            alt108=1;
                        }
                        }
                        break;
                    case Else:
                        {
                        alt108=1;
                        }
                        break;
                }

            }
            switch (alt108) {
                case 1 :
                    // InternalAnsibleDslParser.g:9538:4: otherlv_13= LeftCurlyBracketPercentSign ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )? otherlv_15= Else otherlv_16= PercentSignRightCurlyBracket ( (lv_else_body_17_0= ruleEValuePassed ) )
                    {
                    otherlv_13=(Token)match(input,LeftCurlyBracketPercentSign,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getEForStatementAccess().getLeftCurlyBracketPercentSignKeyword_11_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:9542:4: ( ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) ) )?
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==PlusSign||LA107_0==HyphenMinus) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            // InternalAnsibleDslParser.g:9543:5: ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) )
                            {
                            // InternalAnsibleDslParser.g:9543:5: ( (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus ) )
                            // InternalAnsibleDslParser.g:9544:6: (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus )
                            {
                            // InternalAnsibleDslParser.g:9544:6: (lv_else_block_sign_14_1= PlusSign | lv_else_block_sign_14_2= HyphenMinus )
                            int alt106=2;
                            int LA106_0 = input.LA(1);

                            if ( (LA106_0==PlusSign) ) {
                                alt106=1;
                            }
                            else if ( (LA106_0==HyphenMinus) ) {
                                alt106=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 106, 0, input);

                                throw nvae;
                            }
                            switch (alt106) {
                                case 1 :
                                    // InternalAnsibleDslParser.g:9545:7: lv_else_block_sign_14_1= PlusSign
                                    {
                                    lv_else_block_sign_14_1=(Token)match(input,PlusSign,FOLLOW_93); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_else_block_sign_14_1, grammarAccess.getEForStatementAccess().getElse_block_signPlusSignKeyword_11_1_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getEForStatementRule());
                                      							}
                                      							setWithLastConsumed(current, "else_block_sign", lv_else_block_sign_14_1, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalAnsibleDslParser.g:9556:7: lv_else_block_sign_14_2= HyphenMinus
                                    {
                                    lv_else_block_sign_14_2=(Token)match(input,HyphenMinus,FOLLOW_93); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_else_block_sign_14_2, grammarAccess.getEForStatementAccess().getElse_block_signHyphenMinusKeyword_11_1_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getEForStatementRule());
                                      							}
                                      							setWithLastConsumed(current, "else_block_sign", lv_else_block_sign_14_2, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_15=(Token)match(input,Else,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getEForStatementAccess().getElseKeyword_11_2());
                      			
                    }
                    otherlv_16=(Token)match(input,PercentSignRightCurlyBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getEForStatementAccess().getPercentSignRightCurlyBracketKeyword_11_3());
                      			
                    }
                    // InternalAnsibleDslParser.g:9577:4: ( (lv_else_body_17_0= ruleEValuePassed ) )
                    // InternalAnsibleDslParser.g:9578:5: (lv_else_body_17_0= ruleEValuePassed )
                    {
                    // InternalAnsibleDslParser.g:9578:5: (lv_else_body_17_0= ruleEValuePassed )
                    // InternalAnsibleDslParser.g:9579:6: lv_else_body_17_0= ruleEValuePassed
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEForStatementAccess().getElse_bodyEValuePassedParserRuleCall_11_4_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_else_body_17_0=ruleEValuePassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEForStatementRule());
                      						}
                      						set(
                      							current,
                      							"else_body",
                      							lv_else_body_17_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_18=(Token)match(input,LeftCurlyBracketPercentSign,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_18, grammarAccess.getEForStatementAccess().getLeftCurlyBracketPercentSignKeyword_12());
              		
            }
            // InternalAnsibleDslParser.g:9601:3: ( ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==PlusSign||LA110_0==HyphenMinus) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalAnsibleDslParser.g:9602:4: ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) )
                    {
                    // InternalAnsibleDslParser.g:9602:4: ( (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus ) )
                    // InternalAnsibleDslParser.g:9603:5: (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus )
                    {
                    // InternalAnsibleDslParser.g:9603:5: (lv_endfor_block_sign_19_1= PlusSign | lv_endfor_block_sign_19_2= HyphenMinus )
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==PlusSign) ) {
                        alt109=1;
                    }
                    else if ( (LA109_0==HyphenMinus) ) {
                        alt109=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 109, 0, input);

                        throw nvae;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalAnsibleDslParser.g:9604:6: lv_endfor_block_sign_19_1= PlusSign
                            {
                            lv_endfor_block_sign_19_1=(Token)match(input,PlusSign,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_endfor_block_sign_19_1, grammarAccess.getEForStatementAccess().getEndfor_block_signPlusSignKeyword_13_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEForStatementRule());
                              						}
                              						setWithLastConsumed(current, "endfor_block_sign", lv_endfor_block_sign_19_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAnsibleDslParser.g:9615:6: lv_endfor_block_sign_19_2= HyphenMinus
                            {
                            lv_endfor_block_sign_19_2=(Token)match(input,HyphenMinus,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_endfor_block_sign_19_2, grammarAccess.getEForStatementAccess().getEndfor_block_signHyphenMinusKeyword_13_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEForStatementRule());
                              						}
                              						setWithLastConsumed(current, "endfor_block_sign", lv_endfor_block_sign_19_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_20=(Token)match(input,Endfor,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_20, grammarAccess.getEForStatementAccess().getEndforKeyword_14());
              		
            }
            otherlv_21=(Token)match(input,PercentSignRightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_21, grammarAccess.getEForStatementAccess().getPercentSignRightCurlyBracketKeyword_15());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEForStatement"


    // $ANTLR start "entryRuleEVariableDeclarationVariableReference"
    // InternalAnsibleDslParser.g:9640:1: entryRuleEVariableDeclarationVariableReference returns [EObject current=null] : iv_ruleEVariableDeclarationVariableReference= ruleEVariableDeclarationVariableReference EOF ;
    public final EObject entryRuleEVariableDeclarationVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEVariableDeclarationVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:9640:78: (iv_ruleEVariableDeclarationVariableReference= ruleEVariableDeclarationVariableReference EOF )
            // InternalAnsibleDslParser.g:9641:2: iv_ruleEVariableDeclarationVariableReference= ruleEVariableDeclarationVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEVariableDeclarationVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEVariableDeclarationVariableReference=ruleEVariableDeclarationVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEVariableDeclarationVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEVariableDeclarationVariableReference"


    // $ANTLR start "ruleEVariableDeclarationVariableReference"
    // InternalAnsibleDslParser.g:9647:1: ruleEVariableDeclarationVariableReference returns [EObject current=null] : (otherlv_0= Declared_variable ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleEVariableDeclarationVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9653:2: ( (otherlv_0= Declared_variable ( (otherlv_1= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:9654:2: (otherlv_0= Declared_variable ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:9654:2: (otherlv_0= Declared_variable ( (otherlv_1= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:9655:3: otherlv_0= Declared_variable ( (otherlv_1= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Declared_variable,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEVariableDeclarationVariableReferenceAccess().getDeclared_variableKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9659:3: ( (otherlv_1= RULE_ID ) )
            // InternalAnsibleDslParser.g:9660:4: (otherlv_1= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9660:4: (otherlv_1= RULE_ID )
            // InternalAnsibleDslParser.g:9661:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEVariableDeclarationVariableReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getEVariableDeclarationVariableReferenceAccess().getVariable_declaration_variable_referenceEVariableDeclarationCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEVariableDeclarationVariableReference"


    // $ANTLR start "entryRuleERegisterVariableReference"
    // InternalAnsibleDslParser.g:9676:1: entryRuleERegisterVariableReference returns [EObject current=null] : iv_ruleERegisterVariableReference= ruleERegisterVariableReference EOF ;
    public final EObject entryRuleERegisterVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleERegisterVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:9676:67: (iv_ruleERegisterVariableReference= ruleERegisterVariableReference EOF )
            // InternalAnsibleDslParser.g:9677:2: iv_ruleERegisterVariableReference= ruleERegisterVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getERegisterVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleERegisterVariableReference=ruleERegisterVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleERegisterVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleERegisterVariableReference"


    // $ANTLR start "ruleERegisterVariableReference"
    // InternalAnsibleDslParser.g:9683:1: ruleERegisterVariableReference returns [EObject current=null] : (otherlv_0= Registered_variable ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleERegisterVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9689:2: ( (otherlv_0= Registered_variable ( (otherlv_1= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:9690:2: (otherlv_0= Registered_variable ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:9690:2: (otherlv_0= Registered_variable ( (otherlv_1= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:9691:3: otherlv_0= Registered_variable ( (otherlv_1= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Registered_variable,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getERegisterVariableReferenceAccess().getRegistered_variableKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9695:3: ( (otherlv_1= RULE_ID ) )
            // InternalAnsibleDslParser.g:9696:4: (otherlv_1= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9696:4: (otherlv_1= RULE_ID )
            // InternalAnsibleDslParser.g:9697:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getERegisterVariableReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getERegisterVariableReferenceAccess().getRegister_variable_referenceERegisterVariableCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleERegisterVariableReference"


    // $ANTLR start "entryRuleEVariableDeclaration"
    // InternalAnsibleDslParser.g:9712:1: entryRuleEVariableDeclaration returns [EObject current=null] : iv_ruleEVariableDeclaration= ruleEVariableDeclaration EOF ;
    public final EObject entryRuleEVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEVariableDeclaration = null;


        try {
            // InternalAnsibleDslParser.g:9712:61: (iv_ruleEVariableDeclaration= ruleEVariableDeclaration EOF )
            // InternalAnsibleDslParser.g:9713:2: iv_ruleEVariableDeclaration= ruleEVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEVariableDeclaration=ruleEVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEVariableDeclaration"


    // $ANTLR start "ruleEVariableDeclaration"
    // InternalAnsibleDslParser.g:9719:1: ruleEVariableDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_passed_2_0= ruleEValuePassed ) ) ) ;
    public final EObject ruleEVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_passed_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9725:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_passed_2_0= ruleEValuePassed ) ) ) )
            // InternalAnsibleDslParser.g:9726:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_passed_2_0= ruleEValuePassed ) ) )
            {
            // InternalAnsibleDslParser.g:9726:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_passed_2_0= ruleEValuePassed ) ) )
            // InternalAnsibleDslParser.g:9727:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_passed_2_0= ruleEValuePassed ) )
            {
            // InternalAnsibleDslParser.g:9727:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:9728:4: (lv_name_0_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9728:4: (lv_name_0_0= RULE_ID )
            // InternalAnsibleDslParser.g:9729:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getEVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEVariableDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEVariableDeclarationAccess().getColonKeyword_1());
              		
            }
            // InternalAnsibleDslParser.g:9749:3: ( (lv_value_passed_2_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:9750:4: (lv_value_passed_2_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:9750:4: (lv_value_passed_2_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:9751:5: lv_value_passed_2_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEVariableDeclarationAccess().getValue_passedEValuePassedParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_passed_2_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEVariableDeclarationRule());
              					}
              					set(
              						current,
              						"value_passed",
              						lv_value_passed_2_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEVariableDeclaration"


    // $ANTLR start "entryRuleEIndexOrLoopVariable"
    // InternalAnsibleDslParser.g:9772:1: entryRuleEIndexOrLoopVariable returns [EObject current=null] : iv_ruleEIndexOrLoopVariable= ruleEIndexOrLoopVariable EOF ;
    public final EObject entryRuleEIndexOrLoopVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEIndexOrLoopVariable = null;


        try {
            // InternalAnsibleDslParser.g:9772:61: (iv_ruleEIndexOrLoopVariable= ruleEIndexOrLoopVariable EOF )
            // InternalAnsibleDslParser.g:9773:2: iv_ruleEIndexOrLoopVariable= ruleEIndexOrLoopVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEIndexOrLoopVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEIndexOrLoopVariable=ruleEIndexOrLoopVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEIndexOrLoopVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEIndexOrLoopVariable"


    // $ANTLR start "ruleEIndexOrLoopVariable"
    // InternalAnsibleDslParser.g:9779:1: ruleEIndexOrLoopVariable returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleEIndexOrLoopVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9785:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:9786:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalAnsibleDslParser.g:9786:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:9787:3: (lv_name_0_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9787:3: (lv_name_0_0= RULE_ID )
            // InternalAnsibleDslParser.g:9788:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getEIndexOrLoopVariableAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEIndexOrLoopVariableRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEIndexOrLoopVariable"


    // $ANTLR start "entryRuleEIndexOrLoopVariableReference"
    // InternalAnsibleDslParser.g:9807:1: entryRuleEIndexOrLoopVariableReference returns [EObject current=null] : iv_ruleEIndexOrLoopVariableReference= ruleEIndexOrLoopVariableReference EOF ;
    public final EObject entryRuleEIndexOrLoopVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEIndexOrLoopVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:9807:70: (iv_ruleEIndexOrLoopVariableReference= ruleEIndexOrLoopVariableReference EOF )
            // InternalAnsibleDslParser.g:9808:2: iv_ruleEIndexOrLoopVariableReference= ruleEIndexOrLoopVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEIndexOrLoopVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEIndexOrLoopVariableReference=ruleEIndexOrLoopVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEIndexOrLoopVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEIndexOrLoopVariableReference"


    // $ANTLR start "ruleEIndexOrLoopVariableReference"
    // InternalAnsibleDslParser.g:9814:1: ruleEIndexOrLoopVariableReference returns [EObject current=null] : (otherlv_0= Index_or_loop_var ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleEIndexOrLoopVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9820:2: ( (otherlv_0= Index_or_loop_var ( (otherlv_1= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:9821:2: (otherlv_0= Index_or_loop_var ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:9821:2: (otherlv_0= Index_or_loop_var ( (otherlv_1= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:9822:3: otherlv_0= Index_or_loop_var ( (otherlv_1= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Index_or_loop_var,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEIndexOrLoopVariableReferenceAccess().getIndex_or_loop_varKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9826:3: ( (otherlv_1= RULE_ID ) )
            // InternalAnsibleDslParser.g:9827:4: (otherlv_1= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9827:4: (otherlv_1= RULE_ID )
            // InternalAnsibleDslParser.g:9828:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEIndexOrLoopVariableReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getEIndexOrLoopVariableReferenceAccess().getIndex_or_loop_variable_referenceEIndexOrLoopVariableCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEIndexOrLoopVariableReference"


    // $ANTLR start "entryRuleERegisterVariable"
    // InternalAnsibleDslParser.g:9843:1: entryRuleERegisterVariable returns [EObject current=null] : iv_ruleERegisterVariable= ruleERegisterVariable EOF ;
    public final EObject entryRuleERegisterVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleERegisterVariable = null;


        try {
            // InternalAnsibleDslParser.g:9843:58: (iv_ruleERegisterVariable= ruleERegisterVariable EOF )
            // InternalAnsibleDslParser.g:9844:2: iv_ruleERegisterVariable= ruleERegisterVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getERegisterVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleERegisterVariable=ruleERegisterVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleERegisterVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleERegisterVariable"


    // $ANTLR start "ruleERegisterVariable"
    // InternalAnsibleDslParser.g:9850:1: ruleERegisterVariable returns [EObject current=null] : (otherlv_0= Register ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleERegisterVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9856:2: ( (otherlv_0= Register ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:9857:2: (otherlv_0= Register ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:9857:2: (otherlv_0= Register ( (lv_name_1_0= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:9858:3: otherlv_0= Register ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Register,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getERegisterVariableAccess().getRegisterKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9862:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:9863:4: (lv_name_1_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9863:4: (lv_name_1_0= RULE_ID )
            // InternalAnsibleDslParser.g:9864:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getERegisterVariableAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getERegisterVariableRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleERegisterVariable"


    // $ANTLR start "entryRuleEInputOperationVariableReference"
    // InternalAnsibleDslParser.g:9884:1: entryRuleEInputOperationVariableReference returns [EObject current=null] : iv_ruleEInputOperationVariableReference= ruleEInputOperationVariableReference EOF ;
    public final EObject entryRuleEInputOperationVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEInputOperationVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:9884:73: (iv_ruleEInputOperationVariableReference= ruleEInputOperationVariableReference EOF )
            // InternalAnsibleDslParser.g:9885:2: iv_ruleEInputOperationVariableReference= ruleEInputOperationVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEInputOperationVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEInputOperationVariableReference=ruleEInputOperationVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEInputOperationVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEInputOperationVariableReference"


    // $ANTLR start "ruleEInputOperationVariableReference"
    // InternalAnsibleDslParser.g:9891:1: ruleEInputOperationVariableReference returns [EObject current=null] : ( ( (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference ) ) ) ;
    public final EObject ruleEInputOperationVariableReference() throws RecognitionException {
        EObject current = null;

        EObject lv_reference_0_1 = null;

        EObject lv_reference_0_2 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9897:2: ( ( ( (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference ) ) ) )
            // InternalAnsibleDslParser.g:9898:2: ( ( (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference ) ) )
            {
            // InternalAnsibleDslParser.g:9898:2: ( ( (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference ) ) )
            // InternalAnsibleDslParser.g:9899:3: ( (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference ) )
            {
            // InternalAnsibleDslParser.g:9899:3: ( (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference ) )
            // InternalAnsibleDslParser.g:9900:4: (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference )
            {
            // InternalAnsibleDslParser.g:9900:4: (lv_reference_0_1= ruleLocalEInputOperationVariableReference | lv_reference_0_2= ruleKBEInputOperationVariableReference )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==Operation_input) ) {
                int LA111_1 = input.LA(2);

                if ( (LA111_1==RULE_ID) ) {
                    alt111=2;
                }
                else if ( (LA111_1==RULE_STRING) ) {
                    alt111=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 111, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalAnsibleDslParser.g:9901:5: lv_reference_0_1= ruleLocalEInputOperationVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEInputOperationVariableReferenceAccess().getReferenceLocalEInputOperationVariableReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_reference_0_1=ruleLocalEInputOperationVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEInputOperationVariableReferenceRule());
                      					}
                      					set(
                      						current,
                      						"reference",
                      						lv_reference_0_1,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.LocalEInputOperationVariableReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:9917:5: lv_reference_0_2= ruleKBEInputOperationVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEInputOperationVariableReferenceAccess().getReferenceKBEInputOperationVariableReferenceParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_reference_0_2=ruleKBEInputOperationVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEInputOperationVariableReferenceRule());
                      					}
                      					set(
                      						current,
                      						"reference",
                      						lv_reference_0_2,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.KBEInputOperationVariableReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEInputOperationVariableReference"


    // $ANTLR start "entryRuleLocalEInputOperationVariableReference"
    // InternalAnsibleDslParser.g:9938:1: entryRuleLocalEInputOperationVariableReference returns [EObject current=null] : iv_ruleLocalEInputOperationVariableReference= ruleLocalEInputOperationVariableReference EOF ;
    public final EObject entryRuleLocalEInputOperationVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalEInputOperationVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:9938:78: (iv_ruleLocalEInputOperationVariableReference= ruleLocalEInputOperationVariableReference EOF )
            // InternalAnsibleDslParser.g:9939:2: iv_ruleLocalEInputOperationVariableReference= ruleLocalEInputOperationVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalEInputOperationVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalEInputOperationVariableReference=ruleLocalEInputOperationVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalEInputOperationVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalEInputOperationVariableReference"


    // $ANTLR start "ruleLocalEInputOperationVariableReference"
    // InternalAnsibleDslParser.g:9945:1: ruleLocalEInputOperationVariableReference returns [EObject current=null] : (otherlv_0= Operation_input ( (otherlv_1= RULE_STRING ) ) ) ;
    public final EObject ruleLocalEInputOperationVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9951:2: ( (otherlv_0= Operation_input ( (otherlv_1= RULE_STRING ) ) ) )
            // InternalAnsibleDslParser.g:9952:2: (otherlv_0= Operation_input ( (otherlv_1= RULE_STRING ) ) )
            {
            // InternalAnsibleDslParser.g:9952:2: (otherlv_0= Operation_input ( (otherlv_1= RULE_STRING ) ) )
            // InternalAnsibleDslParser.g:9953:3: otherlv_0= Operation_input ( (otherlv_1= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,Operation_input,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLocalEInputOperationVariableReferenceAccess().getOperation_inputKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9957:3: ( (otherlv_1= RULE_STRING ) )
            // InternalAnsibleDslParser.g:9958:4: (otherlv_1= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:9958:4: (otherlv_1= RULE_STRING )
            // InternalAnsibleDslParser.g:9959:5: otherlv_1= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLocalEInputOperationVariableReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getLocalEInputOperationVariableReferenceAccess().getNameEParameterDefinitionCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalEInputOperationVariableReference"


    // $ANTLR start "entryRuleKBEInputOperationVariableReference"
    // InternalAnsibleDslParser.g:9974:1: entryRuleKBEInputOperationVariableReference returns [EObject current=null] : iv_ruleKBEInputOperationVariableReference= ruleKBEInputOperationVariableReference EOF ;
    public final EObject entryRuleKBEInputOperationVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKBEInputOperationVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:9974:75: (iv_ruleKBEInputOperationVariableReference= ruleKBEInputOperationVariableReference EOF )
            // InternalAnsibleDslParser.g:9975:2: iv_ruleKBEInputOperationVariableReference= ruleKBEInputOperationVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKBEInputOperationVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKBEInputOperationVariableReference=ruleKBEInputOperationVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKBEInputOperationVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKBEInputOperationVariableReference"


    // $ANTLR start "ruleKBEInputOperationVariableReference"
    // InternalAnsibleDslParser.g:9981:1: ruleKBEInputOperationVariableReference returns [EObject current=null] : (otherlv_0= Operation_input ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleKBEInputOperationVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:9987:2: ( (otherlv_0= Operation_input ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:9988:2: (otherlv_0= Operation_input ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:9988:2: (otherlv_0= Operation_input ( (lv_name_1_0= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:9989:3: otherlv_0= Operation_input ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Operation_input,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKBEInputOperationVariableReferenceAccess().getOperation_inputKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:9993:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:9994:4: (lv_name_1_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:9994:4: (lv_name_1_0= RULE_ID )
            // InternalAnsibleDslParser.g:9995:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getKBEInputOperationVariableReferenceAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getKBEInputOperationVariableReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKBEInputOperationVariableReference"


    // $ANTLR start "entryRuleEInputInterfaceVariableReference"
    // InternalAnsibleDslParser.g:10015:1: entryRuleEInputInterfaceVariableReference returns [EObject current=null] : iv_ruleEInputInterfaceVariableReference= ruleEInputInterfaceVariableReference EOF ;
    public final EObject entryRuleEInputInterfaceVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEInputInterfaceVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:10015:73: (iv_ruleEInputInterfaceVariableReference= ruleEInputInterfaceVariableReference EOF )
            // InternalAnsibleDslParser.g:10016:2: iv_ruleEInputInterfaceVariableReference= ruleEInputInterfaceVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEInputInterfaceVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEInputInterfaceVariableReference=ruleEInputInterfaceVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEInputInterfaceVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEInputInterfaceVariableReference"


    // $ANTLR start "ruleEInputInterfaceVariableReference"
    // InternalAnsibleDslParser.g:10022:1: ruleEInputInterfaceVariableReference returns [EObject current=null] : ( ( (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference ) ) ) ;
    public final EObject ruleEInputInterfaceVariableReference() throws RecognitionException {
        EObject current = null;

        EObject lv_reference_0_1 = null;

        EObject lv_reference_0_2 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10028:2: ( ( ( (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference ) ) ) )
            // InternalAnsibleDslParser.g:10029:2: ( ( (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference ) ) )
            {
            // InternalAnsibleDslParser.g:10029:2: ( ( (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference ) ) )
            // InternalAnsibleDslParser.g:10030:3: ( (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference ) )
            {
            // InternalAnsibleDslParser.g:10030:3: ( (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference ) )
            // InternalAnsibleDslParser.g:10031:4: (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference )
            {
            // InternalAnsibleDslParser.g:10031:4: (lv_reference_0_1= ruleLocalEInputInterfaceVariableReference | lv_reference_0_2= ruleKBEInputInterfaceVariableReference )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==Interface_input) ) {
                int LA112_1 = input.LA(2);

                if ( (LA112_1==RULE_ID) ) {
                    alt112=2;
                }
                else if ( (LA112_1==RULE_STRING) ) {
                    alt112=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 112, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalAnsibleDslParser.g:10032:5: lv_reference_0_1= ruleLocalEInputInterfaceVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEInputInterfaceVariableReferenceAccess().getReferenceLocalEInputInterfaceVariableReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_reference_0_1=ruleLocalEInputInterfaceVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEInputInterfaceVariableReferenceRule());
                      					}
                      					set(
                      						current,
                      						"reference",
                      						lv_reference_0_1,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.LocalEInputInterfaceVariableReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:10048:5: lv_reference_0_2= ruleKBEInputInterfaceVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEInputInterfaceVariableReferenceAccess().getReferenceKBEInputInterfaceVariableReferenceParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_reference_0_2=ruleKBEInputInterfaceVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEInputInterfaceVariableReferenceRule());
                      					}
                      					set(
                      						current,
                      						"reference",
                      						lv_reference_0_2,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.KBEInputInterfaceVariableReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEInputInterfaceVariableReference"


    // $ANTLR start "entryRuleLocalEInputInterfaceVariableReference"
    // InternalAnsibleDslParser.g:10069:1: entryRuleLocalEInputInterfaceVariableReference returns [EObject current=null] : iv_ruleLocalEInputInterfaceVariableReference= ruleLocalEInputInterfaceVariableReference EOF ;
    public final EObject entryRuleLocalEInputInterfaceVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalEInputInterfaceVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:10069:78: (iv_ruleLocalEInputInterfaceVariableReference= ruleLocalEInputInterfaceVariableReference EOF )
            // InternalAnsibleDslParser.g:10070:2: iv_ruleLocalEInputInterfaceVariableReference= ruleLocalEInputInterfaceVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalEInputInterfaceVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalEInputInterfaceVariableReference=ruleLocalEInputInterfaceVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalEInputInterfaceVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalEInputInterfaceVariableReference"


    // $ANTLR start "ruleLocalEInputInterfaceVariableReference"
    // InternalAnsibleDslParser.g:10076:1: ruleLocalEInputInterfaceVariableReference returns [EObject current=null] : (otherlv_0= Interface_input ( (otherlv_1= RULE_STRING ) ) ) ;
    public final EObject ruleLocalEInputInterfaceVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10082:2: ( (otherlv_0= Interface_input ( (otherlv_1= RULE_STRING ) ) ) )
            // InternalAnsibleDslParser.g:10083:2: (otherlv_0= Interface_input ( (otherlv_1= RULE_STRING ) ) )
            {
            // InternalAnsibleDslParser.g:10083:2: (otherlv_0= Interface_input ( (otherlv_1= RULE_STRING ) ) )
            // InternalAnsibleDslParser.g:10084:3: otherlv_0= Interface_input ( (otherlv_1= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,Interface_input,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLocalEInputInterfaceVariableReferenceAccess().getInterface_inputKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:10088:3: ( (otherlv_1= RULE_STRING ) )
            // InternalAnsibleDslParser.g:10089:4: (otherlv_1= RULE_STRING )
            {
            // InternalAnsibleDslParser.g:10089:4: (otherlv_1= RULE_STRING )
            // InternalAnsibleDslParser.g:10090:5: otherlv_1= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLocalEInputInterfaceVariableReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getLocalEInputInterfaceVariableReferenceAccess().getNameEPropertyDefinitionCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalEInputInterfaceVariableReference"


    // $ANTLR start "entryRuleKBEInputInterfaceVariableReference"
    // InternalAnsibleDslParser.g:10105:1: entryRuleKBEInputInterfaceVariableReference returns [EObject current=null] : iv_ruleKBEInputInterfaceVariableReference= ruleKBEInputInterfaceVariableReference EOF ;
    public final EObject entryRuleKBEInputInterfaceVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKBEInputInterfaceVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:10105:75: (iv_ruleKBEInputInterfaceVariableReference= ruleKBEInputInterfaceVariableReference EOF )
            // InternalAnsibleDslParser.g:10106:2: iv_ruleKBEInputInterfaceVariableReference= ruleKBEInputInterfaceVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKBEInputInterfaceVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKBEInputInterfaceVariableReference=ruleKBEInputInterfaceVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKBEInputInterfaceVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKBEInputInterfaceVariableReference"


    // $ANTLR start "ruleKBEInputInterfaceVariableReference"
    // InternalAnsibleDslParser.g:10112:1: ruleKBEInputInterfaceVariableReference returns [EObject current=null] : (otherlv_0= Interface_input ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleKBEInputInterfaceVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10118:2: ( (otherlv_0= Interface_input ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:10119:2: (otherlv_0= Interface_input ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:10119:2: (otherlv_0= Interface_input ( (lv_name_1_0= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:10120:3: otherlv_0= Interface_input ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Interface_input,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKBEInputInterfaceVariableReferenceAccess().getInterface_inputKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:10124:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:10125:4: (lv_name_1_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:10125:4: (lv_name_1_0= RULE_ID )
            // InternalAnsibleDslParser.g:10126:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getKBEInputInterfaceVariableReferenceAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getKBEInputInterfaceVariableReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKBEInputInterfaceVariableReference"


    // $ANTLR start "entryRuleESetFactVariableReference"
    // InternalAnsibleDslParser.g:10146:1: entryRuleESetFactVariableReference returns [EObject current=null] : iv_ruleESetFactVariableReference= ruleESetFactVariableReference EOF ;
    public final EObject entryRuleESetFactVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleESetFactVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:10146:66: (iv_ruleESetFactVariableReference= ruleESetFactVariableReference EOF )
            // InternalAnsibleDslParser.g:10147:2: iv_ruleESetFactVariableReference= ruleESetFactVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getESetFactVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleESetFactVariableReference=ruleESetFactVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleESetFactVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleESetFactVariableReference"


    // $ANTLR start "ruleESetFactVariableReference"
    // InternalAnsibleDslParser.g:10153:1: ruleESetFactVariableReference returns [EObject current=null] : (otherlv_0= Fact_set ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleESetFactVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10159:2: ( (otherlv_0= Fact_set ( (otherlv_1= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:10160:2: (otherlv_0= Fact_set ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:10160:2: (otherlv_0= Fact_set ( (otherlv_1= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:10161:3: otherlv_0= Fact_set ( (otherlv_1= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,Fact_set,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getESetFactVariableReferenceAccess().getFact_setKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:10165:3: ( (otherlv_1= RULE_ID ) )
            // InternalAnsibleDslParser.g:10166:4: (otherlv_1= RULE_ID )
            {
            // InternalAnsibleDslParser.g:10166:4: (otherlv_1= RULE_ID )
            // InternalAnsibleDslParser.g:10167:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getESetFactVariableReferenceRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getESetFactVariableReferenceAccess().getNameEParameterCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleESetFactVariableReference"


    // $ANTLR start "entryRuleEVariableReference"
    // InternalAnsibleDslParser.g:10182:1: entryRuleEVariableReference returns [EObject current=null] : iv_ruleEVariableReference= ruleEVariableReference EOF ;
    public final EObject entryRuleEVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEVariableReference = null;


        try {
            // InternalAnsibleDslParser.g:10182:59: (iv_ruleEVariableReference= ruleEVariableReference EOF )
            // InternalAnsibleDslParser.g:10183:2: iv_ruleEVariableReference= ruleEVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEVariableReference=ruleEVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEVariableReference"


    // $ANTLR start "ruleEVariableReference"
    // InternalAnsibleDslParser.g:10189:1: ruleEVariableReference returns [EObject current=null] : (this_EVariableDeclarationVariableReference_0= ruleEVariableDeclarationVariableReference | this_ERegisterVariableReference_1= ruleERegisterVariableReference | this_EInputOperationVariableReference_2= ruleEInputOperationVariableReference | this_EInputInterfaceVariableReference_3= ruleEInputInterfaceVariableReference | this_EIndexOrLoopVariableReference_4= ruleEIndexOrLoopVariableReference | this_ESetFactVariableReference_5= ruleESetFactVariableReference ) ;
    public final EObject ruleEVariableReference() throws RecognitionException {
        EObject current = null;

        EObject this_EVariableDeclarationVariableReference_0 = null;

        EObject this_ERegisterVariableReference_1 = null;

        EObject this_EInputOperationVariableReference_2 = null;

        EObject this_EInputInterfaceVariableReference_3 = null;

        EObject this_EIndexOrLoopVariableReference_4 = null;

        EObject this_ESetFactVariableReference_5 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10195:2: ( (this_EVariableDeclarationVariableReference_0= ruleEVariableDeclarationVariableReference | this_ERegisterVariableReference_1= ruleERegisterVariableReference | this_EInputOperationVariableReference_2= ruleEInputOperationVariableReference | this_EInputInterfaceVariableReference_3= ruleEInputInterfaceVariableReference | this_EIndexOrLoopVariableReference_4= ruleEIndexOrLoopVariableReference | this_ESetFactVariableReference_5= ruleESetFactVariableReference ) )
            // InternalAnsibleDslParser.g:10196:2: (this_EVariableDeclarationVariableReference_0= ruleEVariableDeclarationVariableReference | this_ERegisterVariableReference_1= ruleERegisterVariableReference | this_EInputOperationVariableReference_2= ruleEInputOperationVariableReference | this_EInputInterfaceVariableReference_3= ruleEInputInterfaceVariableReference | this_EIndexOrLoopVariableReference_4= ruleEIndexOrLoopVariableReference | this_ESetFactVariableReference_5= ruleESetFactVariableReference )
            {
            // InternalAnsibleDslParser.g:10196:2: (this_EVariableDeclarationVariableReference_0= ruleEVariableDeclarationVariableReference | this_ERegisterVariableReference_1= ruleERegisterVariableReference | this_EInputOperationVariableReference_2= ruleEInputOperationVariableReference | this_EInputInterfaceVariableReference_3= ruleEInputInterfaceVariableReference | this_EIndexOrLoopVariableReference_4= ruleEIndexOrLoopVariableReference | this_ESetFactVariableReference_5= ruleESetFactVariableReference )
            int alt113=6;
            switch ( input.LA(1) ) {
            case Declared_variable:
                {
                alt113=1;
                }
                break;
            case Registered_variable:
                {
                alt113=2;
                }
                break;
            case Operation_input:
                {
                alt113=3;
                }
                break;
            case Interface_input:
                {
                alt113=4;
                }
                break;
            case Index_or_loop_var:
                {
                alt113=5;
                }
                break;
            case Fact_set:
                {
                alt113=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }

            switch (alt113) {
                case 1 :
                    // InternalAnsibleDslParser.g:10197:3: this_EVariableDeclarationVariableReference_0= ruleEVariableDeclarationVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEVariableReferenceAccess().getEVariableDeclarationVariableReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EVariableDeclarationVariableReference_0=ruleEVariableDeclarationVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EVariableDeclarationVariableReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:10206:3: this_ERegisterVariableReference_1= ruleERegisterVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEVariableReferenceAccess().getERegisterVariableReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ERegisterVariableReference_1=ruleERegisterVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ERegisterVariableReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:10215:3: this_EInputOperationVariableReference_2= ruleEInputOperationVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEVariableReferenceAccess().getEInputOperationVariableReferenceParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EInputOperationVariableReference_2=ruleEInputOperationVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EInputOperationVariableReference_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:10224:3: this_EInputInterfaceVariableReference_3= ruleEInputInterfaceVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEVariableReferenceAccess().getEInputInterfaceVariableReferenceParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EInputInterfaceVariableReference_3=ruleEInputInterfaceVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EInputInterfaceVariableReference_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsibleDslParser.g:10233:3: this_EIndexOrLoopVariableReference_4= ruleEIndexOrLoopVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEVariableReferenceAccess().getEIndexOrLoopVariableReferenceParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EIndexOrLoopVariableReference_4=ruleEIndexOrLoopVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EIndexOrLoopVariableReference_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsibleDslParser.g:10242:3: this_ESetFactVariableReference_5= ruleESetFactVariableReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEVariableReferenceAccess().getESetFactVariableReferenceParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ESetFactVariableReference_5=ruleESetFactVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ESetFactVariableReference_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEVariableReference"


    // $ANTLR start "entryRuleESpecialVariable"
    // InternalAnsibleDslParser.g:10254:1: entryRuleESpecialVariable returns [EObject current=null] : iv_ruleESpecialVariable= ruleESpecialVariable EOF ;
    public final EObject entryRuleESpecialVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleESpecialVariable = null;


        try {
            // InternalAnsibleDslParser.g:10254:57: (iv_ruleESpecialVariable= ruleESpecialVariable EOF )
            // InternalAnsibleDslParser.g:10255:2: iv_ruleESpecialVariable= ruleESpecialVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getESpecialVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleESpecialVariable=ruleESpecialVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleESpecialVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleESpecialVariable"


    // $ANTLR start "ruleESpecialVariable"
    // InternalAnsibleDslParser.g:10261:1: ruleESpecialVariable returns [EObject current=null] : ( () otherlv_1= Special_variable ( (lv_name_2_0= RULE_ID ) ) ) ;
    public final EObject ruleESpecialVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10267:2: ( ( () otherlv_1= Special_variable ( (lv_name_2_0= RULE_ID ) ) ) )
            // InternalAnsibleDslParser.g:10268:2: ( () otherlv_1= Special_variable ( (lv_name_2_0= RULE_ID ) ) )
            {
            // InternalAnsibleDslParser.g:10268:2: ( () otherlv_1= Special_variable ( (lv_name_2_0= RULE_ID ) ) )
            // InternalAnsibleDslParser.g:10269:3: () otherlv_1= Special_variable ( (lv_name_2_0= RULE_ID ) )
            {
            // InternalAnsibleDslParser.g:10269:3: ()
            // InternalAnsibleDslParser.g:10270:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getESpecialVariableAccess().getESpecialVariableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Special_variable,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getESpecialVariableAccess().getSpecial_variableKeyword_1());
              		
            }
            // InternalAnsibleDslParser.g:10280:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:10281:4: (lv_name_2_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:10281:4: (lv_name_2_0= RULE_ID )
            // InternalAnsibleDslParser.g:10282:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getESpecialVariableAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getESpecialVariableRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleESpecialVariable"


    // $ANTLR start "entryRuleETailElement"
    // InternalAnsibleDslParser.g:10302:1: entryRuleETailElement returns [EObject current=null] : iv_ruleETailElement= ruleETailElement EOF ;
    public final EObject entryRuleETailElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleETailElement = null;


        try {
            // InternalAnsibleDslParser.g:10302:53: (iv_ruleETailElement= ruleETailElement EOF )
            // InternalAnsibleDslParser.g:10303:2: iv_ruleETailElement= ruleETailElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getETailElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleETailElement=ruleETailElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleETailElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleETailElement"


    // $ANTLR start "ruleETailElement"
    // InternalAnsibleDslParser.g:10309:1: ruleETailElement returns [EObject current=null] : ( ( (lv_function_call_0_0= ruleEFunctionCallOrVariable ) ) ( (lv_square_bracket_elements_1_0= ruleESquareBracketElement ) )* ) ;
    public final EObject ruleETailElement() throws RecognitionException {
        EObject current = null;

        EObject lv_function_call_0_0 = null;

        EObject lv_square_bracket_elements_1_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10315:2: ( ( ( (lv_function_call_0_0= ruleEFunctionCallOrVariable ) ) ( (lv_square_bracket_elements_1_0= ruleESquareBracketElement ) )* ) )
            // InternalAnsibleDslParser.g:10316:2: ( ( (lv_function_call_0_0= ruleEFunctionCallOrVariable ) ) ( (lv_square_bracket_elements_1_0= ruleESquareBracketElement ) )* )
            {
            // InternalAnsibleDslParser.g:10316:2: ( ( (lv_function_call_0_0= ruleEFunctionCallOrVariable ) ) ( (lv_square_bracket_elements_1_0= ruleESquareBracketElement ) )* )
            // InternalAnsibleDslParser.g:10317:3: ( (lv_function_call_0_0= ruleEFunctionCallOrVariable ) ) ( (lv_square_bracket_elements_1_0= ruleESquareBracketElement ) )*
            {
            // InternalAnsibleDslParser.g:10317:3: ( (lv_function_call_0_0= ruleEFunctionCallOrVariable ) )
            // InternalAnsibleDslParser.g:10318:4: (lv_function_call_0_0= ruleEFunctionCallOrVariable )
            {
            // InternalAnsibleDslParser.g:10318:4: (lv_function_call_0_0= ruleEFunctionCallOrVariable )
            // InternalAnsibleDslParser.g:10319:5: lv_function_call_0_0= ruleEFunctionCallOrVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getETailElementAccess().getFunction_callEFunctionCallOrVariableParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_function_call_0_0=ruleEFunctionCallOrVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getETailElementRule());
              					}
              					set(
              						current,
              						"function_call",
              						lv_function_call_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EFunctionCallOrVariable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:10336:3: ( (lv_square_bracket_elements_1_0= ruleESquareBracketElement ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==LeftSquareBracket) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:10337:4: (lv_square_bracket_elements_1_0= ruleESquareBracketElement )
            	    {
            	    // InternalAnsibleDslParser.g:10337:4: (lv_square_bracket_elements_1_0= ruleESquareBracketElement )
            	    // InternalAnsibleDslParser.g:10338:5: lv_square_bracket_elements_1_0= ruleESquareBracketElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getETailElementAccess().getSquare_bracket_elementsESquareBracketElementParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_square_bracket_elements_1_0=ruleESquareBracketElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getETailElementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"square_bracket_elements",
            	      						lv_square_bracket_elements_1_0,
            	      						"org.sodalite.sdl.ansible.AnsibleDsl.ESquareBracketElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleETailElement"


    // $ANTLR start "entryRuleESquareBracketElement"
    // InternalAnsibleDslParser.g:10359:1: entryRuleESquareBracketElement returns [EObject current=null] : iv_ruleESquareBracketElement= ruleESquareBracketElement EOF ;
    public final EObject entryRuleESquareBracketElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleESquareBracketElement = null;


        try {
            // InternalAnsibleDslParser.g:10359:62: (iv_ruleESquareBracketElement= ruleESquareBracketElement EOF )
            // InternalAnsibleDslParser.g:10360:2: iv_ruleESquareBracketElement= ruleESquareBracketElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getESquareBracketElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleESquareBracketElement=ruleESquareBracketElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleESquareBracketElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleESquareBracketElement"


    // $ANTLR start "ruleESquareBracketElement"
    // InternalAnsibleDslParser.g:10366:1: ruleESquareBracketElement returns [EObject current=null] : (otherlv_0= LeftSquareBracket ( ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) | ( (lv_slice_notation_2_0= ruleESliceNotation ) ) ) otherlv_3= RightSquareBracket ) ;
    public final EObject ruleESquareBracketElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_expression_1_0 = null;

        EObject lv_slice_notation_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10372:2: ( (otherlv_0= LeftSquareBracket ( ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) | ( (lv_slice_notation_2_0= ruleESliceNotation ) ) ) otherlv_3= RightSquareBracket ) )
            // InternalAnsibleDslParser.g:10373:2: (otherlv_0= LeftSquareBracket ( ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) | ( (lv_slice_notation_2_0= ruleESliceNotation ) ) ) otherlv_3= RightSquareBracket )
            {
            // InternalAnsibleDslParser.g:10373:2: (otherlv_0= LeftSquareBracket ( ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) | ( (lv_slice_notation_2_0= ruleESliceNotation ) ) ) otherlv_3= RightSquareBracket )
            // InternalAnsibleDslParser.g:10374:3: otherlv_0= LeftSquareBracket ( ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) | ( (lv_slice_notation_2_0= ruleESliceNotation ) ) ) otherlv_3= RightSquareBracket
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getESquareBracketElementAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:10378:3: ( ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) | ( (lv_slice_notation_2_0= ruleESliceNotation ) ) )
            int alt115=2;
            switch ( input.LA(1) ) {
            case Registered_variable:
            case Declared_variable:
            case Index_or_loop_var:
            case Special_variable:
            case Interface_input:
            case Operation_input:
            case Fact_set:
            case Not:
            case LeftParenthesis:
            case LeftSquareBracket:
            case LeftCurlyBracket:
            case RULE_BOOLEAN:
            case RULE_NULL:
            case RULE_NONE:
            case RULE_ID:
            case RULE_STRING:
                {
                alt115=1;
                }
                break;
            case RULE_OCTAL_NUMBER:
                {
                int LA115_2 = input.LA(2);

                if ( (LA115_2==Colon) ) {
                    alt115=2;
                }
                else if ( (LA115_2==And||(LA115_2>=Not && LA115_2<=ExclamationMarkEqualsSign)||(LA115_2>=AsteriskAsterisk && LA115_2<=GreaterThanSignEqualsSign)||(LA115_2>=If && LA115_2<=Or)||LA115_2==PercentSign||(LA115_2>=Asterisk && LA115_2<=PlusSign)||(LA115_2>=HyphenMinus && LA115_2<=Solidus)||LA115_2==LessThanSign||(LA115_2>=GreaterThanSign && LA115_2<=RightSquareBracket)||LA115_2==VerticalLine) ) {
                    alt115=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_HEXADECIMAL_NUMBER:
                {
                int LA115_3 = input.LA(2);

                if ( (LA115_3==Colon) ) {
                    alt115=2;
                }
                else if ( (LA115_3==And||(LA115_3>=Not && LA115_3<=ExclamationMarkEqualsSign)||(LA115_3>=AsteriskAsterisk && LA115_3<=GreaterThanSignEqualsSign)||(LA115_3>=If && LA115_3<=Or)||LA115_3==PercentSign||(LA115_3>=Asterisk && LA115_3<=PlusSign)||(LA115_3>=HyphenMinus && LA115_3<=Solidus)||LA115_3==LessThanSign||(LA115_3>=GreaterThanSign && LA115_3<=RightSquareBracket)||LA115_3==VerticalLine) ) {
                    alt115=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_SIMPLE_NUMBER:
                {
                int LA115_4 = input.LA(2);

                if ( (LA115_4==Colon) ) {
                    alt115=2;
                }
                else if ( (LA115_4==And||(LA115_4>=Not && LA115_4<=ExclamationMarkEqualsSign)||(LA115_4>=AsteriskAsterisk && LA115_4<=GreaterThanSignEqualsSign)||(LA115_4>=If && LA115_4<=Or)||LA115_4==PercentSign||(LA115_4>=Asterisk && LA115_4<=PlusSign)||(LA115_4>=HyphenMinus && LA115_4<=Solidus)||LA115_4==LessThanSign||(LA115_4>=GreaterThanSign && LA115_4<=RightSquareBracket)||LA115_4==VerticalLine) ) {
                    alt115=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_EXPONENTIAL_NUMBER:
                {
                int LA115_5 = input.LA(2);

                if ( (LA115_5==Colon) ) {
                    alt115=2;
                }
                else if ( (LA115_5==And||(LA115_5>=Not && LA115_5<=ExclamationMarkEqualsSign)||(LA115_5>=AsteriskAsterisk && LA115_5<=GreaterThanSignEqualsSign)||(LA115_5>=If && LA115_5<=Or)||LA115_5==PercentSign||(LA115_5>=Asterisk && LA115_5<=PlusSign)||(LA115_5>=HyphenMinus && LA115_5<=Solidus)||LA115_5==LessThanSign||(LA115_5>=GreaterThanSign && LA115_5<=RightSquareBracket)||LA115_5==VerticalLine) ) {
                    alt115=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INTEGER:
                {
                int LA115_6 = input.LA(2);

                if ( (LA115_6==Colon) ) {
                    alt115=2;
                }
                else if ( (LA115_6==And||(LA115_6>=Not && LA115_6<=ExclamationMarkEqualsSign)||(LA115_6>=AsteriskAsterisk && LA115_6<=GreaterThanSignEqualsSign)||(LA115_6>=If && LA115_6<=Or)||LA115_6==PercentSign||(LA115_6>=Asterisk && LA115_6<=PlusSign)||(LA115_6>=HyphenMinus && LA115_6<=Solidus)||LA115_6==LessThanSign||(LA115_6>=GreaterThanSign && LA115_6<=RightSquareBracket)||LA115_6==VerticalLine) ) {
                    alt115=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 6, input);

                    throw nvae;
                }
                }
                break;
            case Colon:
                {
                alt115=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }

            switch (alt115) {
                case 1 :
                    // InternalAnsibleDslParser.g:10379:4: ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
                    {
                    // InternalAnsibleDslParser.g:10379:4: ( (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
                    // InternalAnsibleDslParser.g:10380:5: (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    {
                    // InternalAnsibleDslParser.g:10380:5: (lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    // InternalAnsibleDslParser.g:10381:6: lv_expression_1_0= ruleEJinjaExpressionEvaluationWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getESquareBracketElementAccess().getExpressionEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_107);
                    lv_expression_1_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getESquareBracketElementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:10399:4: ( (lv_slice_notation_2_0= ruleESliceNotation ) )
                    {
                    // InternalAnsibleDslParser.g:10399:4: ( (lv_slice_notation_2_0= ruleESliceNotation ) )
                    // InternalAnsibleDslParser.g:10400:5: (lv_slice_notation_2_0= ruleESliceNotation )
                    {
                    // InternalAnsibleDslParser.g:10400:5: (lv_slice_notation_2_0= ruleESliceNotation )
                    // InternalAnsibleDslParser.g:10401:6: lv_slice_notation_2_0= ruleESliceNotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getESquareBracketElementAccess().getSlice_notationESliceNotationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_107);
                    lv_slice_notation_2_0=ruleESliceNotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getESquareBracketElementRule());
                      						}
                      						set(
                      							current,
                      							"slice_notation",
                      							lv_slice_notation_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.ESliceNotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getESquareBracketElementAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleESquareBracketElement"


    // $ANTLR start "entryRuleESliceNotation"
    // InternalAnsibleDslParser.g:10427:1: entryRuleESliceNotation returns [EObject current=null] : iv_ruleESliceNotation= ruleESliceNotation EOF ;
    public final EObject entryRuleESliceNotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleESliceNotation = null;


        try {
            // InternalAnsibleDslParser.g:10427:55: (iv_ruleESliceNotation= ruleESliceNotation EOF )
            // InternalAnsibleDslParser.g:10428:2: iv_ruleESliceNotation= ruleESliceNotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getESliceNotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleESliceNotation=ruleESliceNotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleESliceNotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleESliceNotation"


    // $ANTLR start "ruleESliceNotation"
    // InternalAnsibleDslParser.g:10434:1: ruleESliceNotation returns [EObject current=null] : ( ( ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )? ) | ( ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )? ) ) ;
    public final EObject ruleESliceNotation() throws RecognitionException {
        EObject current = null;

        Token lv_colon_1_0=null;
        Token lv_first_colon_4_0=null;
        Token lv_second_colon_6_0=null;
        EObject lv_start_0_0 = null;

        EObject lv_stop_2_0 = null;

        EObject lv_start_3_0 = null;

        EObject lv_step_5_0 = null;

        EObject lv_stop_7_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10440:2: ( ( ( ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )? ) | ( ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )? ) ) )
            // InternalAnsibleDslParser.g:10441:2: ( ( ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )? ) | ( ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )? ) )
            {
            // InternalAnsibleDslParser.g:10441:2: ( ( ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )? ) | ( ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )? ) )
            int alt121=2;
            alt121 = dfa121.predict(input);
            switch (alt121) {
                case 1 :
                    // InternalAnsibleDslParser.g:10442:3: ( ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )? )
                    {
                    // InternalAnsibleDslParser.g:10442:3: ( ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )? )
                    // InternalAnsibleDslParser.g:10443:4: ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )?
                    {
                    // InternalAnsibleDslParser.g:10443:4: ( (lv_start_0_0= ruleENumber ) )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( ((LA116_0>=RULE_OCTAL_NUMBER && LA116_0<=RULE_EXPONENTIAL_NUMBER)||LA116_0==RULE_INTEGER) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // InternalAnsibleDslParser.g:10444:5: (lv_start_0_0= ruleENumber )
                            {
                            // InternalAnsibleDslParser.g:10444:5: (lv_start_0_0= ruleENumber )
                            // InternalAnsibleDslParser.g:10445:6: lv_start_0_0= ruleENumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getESliceNotationAccess().getStartENumberParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_41);
                            lv_start_0_0=ruleENumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getESliceNotationRule());
                              						}
                              						set(
                              							current,
                              							"start",
                              							lv_start_0_0,
                              							"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalAnsibleDslParser.g:10462:4: ( (lv_colon_1_0= Colon ) )
                    // InternalAnsibleDslParser.g:10463:5: (lv_colon_1_0= Colon )
                    {
                    // InternalAnsibleDslParser.g:10463:5: (lv_colon_1_0= Colon )
                    // InternalAnsibleDslParser.g:10464:6: lv_colon_1_0= Colon
                    {
                    lv_colon_1_0=(Token)match(input,Colon,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_colon_1_0, grammarAccess.getESliceNotationAccess().getColonColonKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getESliceNotationRule());
                      						}
                      						setWithLastConsumed(current, "colon", lv_colon_1_0, ":");
                      					
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:10476:4: ( (lv_stop_2_0= ruleENumber ) )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( ((LA117_0>=RULE_OCTAL_NUMBER && LA117_0<=RULE_EXPONENTIAL_NUMBER)||LA117_0==RULE_INTEGER) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalAnsibleDslParser.g:10477:5: (lv_stop_2_0= ruleENumber )
                            {
                            // InternalAnsibleDslParser.g:10477:5: (lv_stop_2_0= ruleENumber )
                            // InternalAnsibleDslParser.g:10478:6: lv_stop_2_0= ruleENumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getESliceNotationAccess().getStopENumberParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_stop_2_0=ruleENumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getESliceNotationRule());
                              						}
                              						set(
                              							current,
                              							"stop",
                              							lv_stop_2_0,
                              							"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:10497:3: ( ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )? )
                    {
                    // InternalAnsibleDslParser.g:10497:3: ( ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )? )
                    // InternalAnsibleDslParser.g:10498:4: ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )?
                    {
                    // InternalAnsibleDslParser.g:10498:4: ( (lv_start_3_0= ruleENumber ) )?
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( ((LA118_0>=RULE_OCTAL_NUMBER && LA118_0<=RULE_EXPONENTIAL_NUMBER)||LA118_0==RULE_INTEGER) ) {
                        alt118=1;
                    }
                    switch (alt118) {
                        case 1 :
                            // InternalAnsibleDslParser.g:10499:5: (lv_start_3_0= ruleENumber )
                            {
                            // InternalAnsibleDslParser.g:10499:5: (lv_start_3_0= ruleENumber )
                            // InternalAnsibleDslParser.g:10500:6: lv_start_3_0= ruleENumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getESliceNotationAccess().getStartENumberParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_41);
                            lv_start_3_0=ruleENumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getESliceNotationRule());
                              						}
                              						set(
                              							current,
                              							"start",
                              							lv_start_3_0,
                              							"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalAnsibleDslParser.g:10517:4: ( (lv_first_colon_4_0= Colon ) )
                    // InternalAnsibleDslParser.g:10518:5: (lv_first_colon_4_0= Colon )
                    {
                    // InternalAnsibleDslParser.g:10518:5: (lv_first_colon_4_0= Colon )
                    // InternalAnsibleDslParser.g:10519:6: lv_first_colon_4_0= Colon
                    {
                    lv_first_colon_4_0=(Token)match(input,Colon,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_first_colon_4_0, grammarAccess.getESliceNotationAccess().getFirst_colonColonKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getESliceNotationRule());
                      						}
                      						setWithLastConsumed(current, "first_colon", lv_first_colon_4_0, ":");
                      					
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:10531:4: ( (lv_step_5_0= ruleENumber ) )?
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( ((LA119_0>=RULE_OCTAL_NUMBER && LA119_0<=RULE_EXPONENTIAL_NUMBER)||LA119_0==RULE_INTEGER) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalAnsibleDslParser.g:10532:5: (lv_step_5_0= ruleENumber )
                            {
                            // InternalAnsibleDslParser.g:10532:5: (lv_step_5_0= ruleENumber )
                            // InternalAnsibleDslParser.g:10533:6: lv_step_5_0= ruleENumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getESliceNotationAccess().getStepENumberParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_41);
                            lv_step_5_0=ruleENumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getESliceNotationRule());
                              						}
                              						set(
                              							current,
                              							"step",
                              							lv_step_5_0,
                              							"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalAnsibleDslParser.g:10550:4: ( (lv_second_colon_6_0= Colon ) )
                    // InternalAnsibleDslParser.g:10551:5: (lv_second_colon_6_0= Colon )
                    {
                    // InternalAnsibleDslParser.g:10551:5: (lv_second_colon_6_0= Colon )
                    // InternalAnsibleDslParser.g:10552:6: lv_second_colon_6_0= Colon
                    {
                    lv_second_colon_6_0=(Token)match(input,Colon,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_second_colon_6_0, grammarAccess.getESliceNotationAccess().getSecond_colonColonKeyword_1_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getESliceNotationRule());
                      						}
                      						setWithLastConsumed(current, "second_colon", lv_second_colon_6_0, ":");
                      					
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:10564:4: ( (lv_stop_7_0= ruleENumber ) )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( ((LA120_0>=RULE_OCTAL_NUMBER && LA120_0<=RULE_EXPONENTIAL_NUMBER)||LA120_0==RULE_INTEGER) ) {
                        alt120=1;
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalAnsibleDslParser.g:10565:5: (lv_stop_7_0= ruleENumber )
                            {
                            // InternalAnsibleDslParser.g:10565:5: (lv_stop_7_0= ruleENumber )
                            // InternalAnsibleDslParser.g:10566:6: lv_stop_7_0= ruleENumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getESliceNotationAccess().getStopENumberParserRuleCall_1_4_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_stop_7_0=ruleENumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getESliceNotationRule());
                              						}
                              						set(
                              							current,
                              							"stop",
                              							lv_stop_7_0,
                              							"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleESliceNotation"


    // $ANTLR start "entryRuleEDictionary"
    // InternalAnsibleDslParser.g:10588:1: entryRuleEDictionary returns [EObject current=null] : iv_ruleEDictionary= ruleEDictionary EOF ;
    public final EObject entryRuleEDictionary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionary = null;


        try {
            // InternalAnsibleDslParser.g:10588:52: (iv_ruleEDictionary= ruleEDictionary EOF )
            // InternalAnsibleDslParser.g:10589:2: iv_ruleEDictionary= ruleEDictionary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionary=ruleEDictionary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionary"


    // $ANTLR start "ruleEDictionary"
    // InternalAnsibleDslParser.g:10595:1: ruleEDictionary returns [EObject current=null] : (this_EDictionaryInLine_0= ruleEDictionaryInLine | this_EDictionaryIndented_1= ruleEDictionaryIndented ) ;
    public final EObject ruleEDictionary() throws RecognitionException {
        EObject current = null;

        EObject this_EDictionaryInLine_0 = null;

        EObject this_EDictionaryIndented_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10601:2: ( (this_EDictionaryInLine_0= ruleEDictionaryInLine | this_EDictionaryIndented_1= ruleEDictionaryIndented ) )
            // InternalAnsibleDslParser.g:10602:2: (this_EDictionaryInLine_0= ruleEDictionaryInLine | this_EDictionaryIndented_1= ruleEDictionaryIndented )
            {
            // InternalAnsibleDslParser.g:10602:2: (this_EDictionaryInLine_0= ruleEDictionaryInLine | this_EDictionaryIndented_1= ruleEDictionaryIndented )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==LeftCurlyBracket) ) {
                alt122=1;
            }
            else if ( (LA122_0==RULE_BEGIN) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // InternalAnsibleDslParser.g:10603:3: this_EDictionaryInLine_0= ruleEDictionaryInLine
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEDictionaryAccess().getEDictionaryInLineParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EDictionaryInLine_0=ruleEDictionaryInLine();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EDictionaryInLine_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:10612:3: this_EDictionaryIndented_1= ruleEDictionaryIndented
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEDictionaryAccess().getEDictionaryIndentedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EDictionaryIndented_1=ruleEDictionaryIndented();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EDictionaryIndented_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionary"


    // $ANTLR start "entryRuleEDictionaryInLine"
    // InternalAnsibleDslParser.g:10624:1: entryRuleEDictionaryInLine returns [EObject current=null] : iv_ruleEDictionaryInLine= ruleEDictionaryInLine EOF ;
    public final EObject entryRuleEDictionaryInLine() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionaryInLine = null;


        try {
            // InternalAnsibleDslParser.g:10624:58: (iv_ruleEDictionaryInLine= ruleEDictionaryInLine EOF )
            // InternalAnsibleDslParser.g:10625:2: iv_ruleEDictionaryInLine= ruleEDictionaryInLine EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryInLineRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionaryInLine=ruleEDictionaryInLine();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionaryInLine; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionaryInLine"


    // $ANTLR start "ruleEDictionaryInLine"
    // InternalAnsibleDslParser.g:10631:1: ruleEDictionaryInLine returns [EObject current=null] : (otherlv_0= LeftCurlyBracket ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) ) (otherlv_2= Comma ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) ) )* otherlv_4= KW__ ) ;
    public final EObject ruleEDictionaryInLine() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_dictionary_pairs_1_0 = null;

        EObject lv_dictionary_pairs_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10637:2: ( (otherlv_0= LeftCurlyBracket ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) ) (otherlv_2= Comma ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) ) )* otherlv_4= KW__ ) )
            // InternalAnsibleDslParser.g:10638:2: (otherlv_0= LeftCurlyBracket ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) ) (otherlv_2= Comma ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) ) )* otherlv_4= KW__ )
            {
            // InternalAnsibleDslParser.g:10638:2: (otherlv_0= LeftCurlyBracket ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) ) (otherlv_2= Comma ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) ) )* otherlv_4= KW__ )
            // InternalAnsibleDslParser.g:10639:3: otherlv_0= LeftCurlyBracket ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) ) (otherlv_2= Comma ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) ) )* otherlv_4= KW__
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEDictionaryInLineAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:10643:3: ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) )
            // InternalAnsibleDslParser.g:10644:4: (lv_dictionary_pairs_1_0= ruleEDictionaryPair )
            {
            // InternalAnsibleDslParser.g:10644:4: (lv_dictionary_pairs_1_0= ruleEDictionaryPair )
            // InternalAnsibleDslParser.g:10645:5: lv_dictionary_pairs_1_0= ruleEDictionaryPair
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEDictionaryInLineAccess().getDictionary_pairsEDictionaryPairParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_110);
            lv_dictionary_pairs_1_0=ruleEDictionaryPair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEDictionaryInLineRule());
              					}
              					add(
              						current,
              						"dictionary_pairs",
              						lv_dictionary_pairs_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPair");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:10662:3: (otherlv_2= Comma ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==Comma) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:10663:4: otherlv_2= Comma ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) )
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getEDictionaryInLineAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:10667:4: ( (lv_dictionary_pairs_3_0= ruleEDictionaryPair ) )
            	    // InternalAnsibleDslParser.g:10668:5: (lv_dictionary_pairs_3_0= ruleEDictionaryPair )
            	    {
            	    // InternalAnsibleDslParser.g:10668:5: (lv_dictionary_pairs_3_0= ruleEDictionaryPair )
            	    // InternalAnsibleDslParser.g:10669:6: lv_dictionary_pairs_3_0= ruleEDictionaryPair
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEDictionaryInLineAccess().getDictionary_pairsEDictionaryPairParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_dictionary_pairs_3_0=ruleEDictionaryPair();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEDictionaryInLineRule());
            	      						}
            	      						add(
            	      							current,
            	      							"dictionary_pairs",
            	      							lv_dictionary_pairs_3_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPair");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            otherlv_4=(Token)match(input,KW__,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEDictionaryInLineAccess().get_Keyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionaryInLine"


    // $ANTLR start "entryRuleEDictionaryIndented"
    // InternalAnsibleDslParser.g:10695:1: entryRuleEDictionaryIndented returns [EObject current=null] : iv_ruleEDictionaryIndented= ruleEDictionaryIndented EOF ;
    public final EObject entryRuleEDictionaryIndented() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionaryIndented = null;


        try {
            // InternalAnsibleDslParser.g:10695:60: (iv_ruleEDictionaryIndented= ruleEDictionaryIndented EOF )
            // InternalAnsibleDslParser.g:10696:2: iv_ruleEDictionaryIndented= ruleEDictionaryIndented EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryIndentedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionaryIndented=ruleEDictionaryIndented();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionaryIndented; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionaryIndented"


    // $ANTLR start "ruleEDictionaryIndented"
    // InternalAnsibleDslParser.g:10702:1: ruleEDictionaryIndented returns [EObject current=null] : (this_BEGIN_0= RULE_BEGIN ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) )+ this_END_2= RULE_END ) ;
    public final EObject ruleEDictionaryIndented() throws RecognitionException {
        EObject current = null;

        Token this_BEGIN_0=null;
        Token this_END_2=null;
        EObject lv_dictionary_pairs_1_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10708:2: ( (this_BEGIN_0= RULE_BEGIN ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) )+ this_END_2= RULE_END ) )
            // InternalAnsibleDslParser.g:10709:2: (this_BEGIN_0= RULE_BEGIN ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) )+ this_END_2= RULE_END )
            {
            // InternalAnsibleDslParser.g:10709:2: (this_BEGIN_0= RULE_BEGIN ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) )+ this_END_2= RULE_END )
            // InternalAnsibleDslParser.g:10710:3: this_BEGIN_0= RULE_BEGIN ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) )+ this_END_2= RULE_END
            {
            this_BEGIN_0=(Token)match(input,RULE_BEGIN,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_0, grammarAccess.getEDictionaryIndentedAccess().getBEGINTerminalRuleCall_0());
              		
            }
            // InternalAnsibleDslParser.g:10714:3: ( (lv_dictionary_pairs_1_0= ruleEDictionaryPair ) )+
            int cnt124=0;
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==RULE_ID) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:10715:4: (lv_dictionary_pairs_1_0= ruleEDictionaryPair )
            	    {
            	    // InternalAnsibleDslParser.g:10715:4: (lv_dictionary_pairs_1_0= ruleEDictionaryPair )
            	    // InternalAnsibleDslParser.g:10716:5: lv_dictionary_pairs_1_0= ruleEDictionaryPair
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEDictionaryIndentedAccess().getDictionary_pairsEDictionaryPairParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_dictionary_pairs_1_0=ruleEDictionaryPair();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEDictionaryIndentedRule());
            	      					}
            	      					add(
            	      						current,
            	      						"dictionary_pairs",
            	      						lv_dictionary_pairs_1_0,
            	      						"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPair");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt124 >= 1 ) break loop124;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(124, input);
                        throw eee;
                }
                cnt124++;
            } while (true);

            this_END_2=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_2, grammarAccess.getEDictionaryIndentedAccess().getENDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionaryIndented"


    // $ANTLR start "entryRuleEDictionaryPair"
    // InternalAnsibleDslParser.g:10741:1: entryRuleEDictionaryPair returns [EObject current=null] : iv_ruleEDictionaryPair= ruleEDictionaryPair EOF ;
    public final EObject entryRuleEDictionaryPair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionaryPair = null;


        try {
            // InternalAnsibleDslParser.g:10741:56: (iv_ruleEDictionaryPair= ruleEDictionaryPair EOF )
            // InternalAnsibleDslParser.g:10742:2: iv_ruleEDictionaryPair= ruleEDictionaryPair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryPairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionaryPair=ruleEDictionaryPair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionaryPair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionaryPair"


    // $ANTLR start "ruleEDictionaryPair"
    // InternalAnsibleDslParser.g:10748:1: ruleEDictionaryPair returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) ) ;
    public final EObject ruleEDictionaryPair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10754:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) ) )
            // InternalAnsibleDslParser.g:10755:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) )
            {
            // InternalAnsibleDslParser.g:10755:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) ) )
            // InternalAnsibleDslParser.g:10756:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= Colon ( (lv_value_2_0= ruleEValuePassed ) )
            {
            // InternalAnsibleDslParser.g:10756:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalAnsibleDslParser.g:10757:4: (lv_name_0_0= RULE_ID )
            {
            // InternalAnsibleDslParser.g:10757:4: (lv_name_0_0= RULE_ID )
            // InternalAnsibleDslParser.g:10758:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getEDictionaryPairAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEDictionaryPairRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEDictionaryPairAccess().getColonKeyword_1());
              		
            }
            // InternalAnsibleDslParser.g:10778:3: ( (lv_value_2_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:10779:4: (lv_value_2_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:10779:4: (lv_value_2_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:10780:5: lv_value_2_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEDictionaryPairAccess().getValueEValuePassedParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEDictionaryPairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionaryPair"


    // $ANTLR start "entryRuleEDictionaryJinja"
    // InternalAnsibleDslParser.g:10801:1: entryRuleEDictionaryJinja returns [EObject current=null] : iv_ruleEDictionaryJinja= ruleEDictionaryJinja EOF ;
    public final EObject entryRuleEDictionaryJinja() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionaryJinja = null;


        try {
            // InternalAnsibleDslParser.g:10801:57: (iv_ruleEDictionaryJinja= ruleEDictionaryJinja EOF )
            // InternalAnsibleDslParser.g:10802:2: iv_ruleEDictionaryJinja= ruleEDictionaryJinja EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryJinjaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionaryJinja=ruleEDictionaryJinja();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionaryJinja; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionaryJinja"


    // $ANTLR start "ruleEDictionaryJinja"
    // InternalAnsibleDslParser.g:10808:1: ruleEDictionaryJinja returns [EObject current=null] : ( () otherlv_1= LeftCurlyBracket ( ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) ) (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )* )? otherlv_5= RightCurlyBracket ) ;
    public final EObject ruleEDictionaryJinja() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_dictionary_pairs_2_0 = null;

        EObject lv_dictionary_pairs_4_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10814:2: ( ( () otherlv_1= LeftCurlyBracket ( ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) ) (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )* )? otherlv_5= RightCurlyBracket ) )
            // InternalAnsibleDslParser.g:10815:2: ( () otherlv_1= LeftCurlyBracket ( ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) ) (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )* )? otherlv_5= RightCurlyBracket )
            {
            // InternalAnsibleDslParser.g:10815:2: ( () otherlv_1= LeftCurlyBracket ( ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) ) (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )* )? otherlv_5= RightCurlyBracket )
            // InternalAnsibleDslParser.g:10816:3: () otherlv_1= LeftCurlyBracket ( ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) ) (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )* )? otherlv_5= RightCurlyBracket
            {
            // InternalAnsibleDslParser.g:10816:3: ()
            // InternalAnsibleDslParser.g:10817:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEDictionaryJinjaAccess().getEDictionaryJinjaAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEDictionaryJinjaAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalAnsibleDslParser.g:10827:3: ( ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) ) (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )* )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==RULE_ID||LA126_0==RULE_STRING) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalAnsibleDslParser.g:10828:4: ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) ) (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )*
                    {
                    // InternalAnsibleDslParser.g:10828:4: ( (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja ) )
                    // InternalAnsibleDslParser.g:10829:5: (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja )
                    {
                    // InternalAnsibleDslParser.g:10829:5: (lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja )
                    // InternalAnsibleDslParser.g:10830:6: lv_dictionary_pairs_2_0= ruleEDictionaryPairJinja
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEDictionaryJinjaAccess().getDictionary_pairsEDictionaryPairJinjaParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_112);
                    lv_dictionary_pairs_2_0=ruleEDictionaryPairJinja();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEDictionaryJinjaRule());
                      						}
                      						add(
                      							current,
                      							"dictionary_pairs",
                      							lv_dictionary_pairs_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPairJinja");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:10847:4: (otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) ) )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==Comma) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // InternalAnsibleDslParser.g:10848:5: otherlv_3= Comma ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_113); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getEDictionaryJinjaAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalAnsibleDslParser.g:10852:5: ( (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja ) )
                    	    // InternalAnsibleDslParser.g:10853:6: (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja )
                    	    {
                    	    // InternalAnsibleDslParser.g:10853:6: (lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja )
                    	    // InternalAnsibleDslParser.g:10854:7: lv_dictionary_pairs_4_0= ruleEDictionaryPairJinja
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEDictionaryJinjaAccess().getDictionary_pairsEDictionaryPairJinjaParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_112);
                    	    lv_dictionary_pairs_4_0=ruleEDictionaryPairJinja();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEDictionaryJinjaRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dictionary_pairs",
                    	      								lv_dictionary_pairs_4_0,
                    	      								"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPairJinja");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEDictionaryJinjaAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionaryJinja"


    // $ANTLR start "entryRuleEDictionaryPairJinja"
    // InternalAnsibleDslParser.g:10881:1: entryRuleEDictionaryPairJinja returns [EObject current=null] : iv_ruleEDictionaryPairJinja= ruleEDictionaryPairJinja EOF ;
    public final EObject entryRuleEDictionaryPairJinja() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionaryPairJinja = null;


        try {
            // InternalAnsibleDslParser.g:10881:61: (iv_ruleEDictionaryPairJinja= ruleEDictionaryPairJinja EOF )
            // InternalAnsibleDslParser.g:10882:2: iv_ruleEDictionaryPairJinja= ruleEDictionaryPairJinja EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryPairJinjaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionaryPairJinja=ruleEDictionaryPairJinja();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionaryPairJinja; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionaryPairJinja"


    // $ANTLR start "ruleEDictionaryPairJinja"
    // InternalAnsibleDslParser.g:10888:1: ruleEDictionaryPairJinja returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_ID ) ) | ( (lv_name_1_0= RULE_STRING ) ) ) otherlv_2= Colon ( (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) ;
    public final EObject ruleEDictionaryPairJinja() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10894:2: ( ( ( ( (lv_name_0_0= RULE_ID ) ) | ( (lv_name_1_0= RULE_STRING ) ) ) otherlv_2= Colon ( (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) ) )
            // InternalAnsibleDslParser.g:10895:2: ( ( ( (lv_name_0_0= RULE_ID ) ) | ( (lv_name_1_0= RULE_STRING ) ) ) otherlv_2= Colon ( (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )
            {
            // InternalAnsibleDslParser.g:10895:2: ( ( ( (lv_name_0_0= RULE_ID ) ) | ( (lv_name_1_0= RULE_STRING ) ) ) otherlv_2= Colon ( (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )
            // InternalAnsibleDslParser.g:10896:3: ( ( (lv_name_0_0= RULE_ID ) ) | ( (lv_name_1_0= RULE_STRING ) ) ) otherlv_2= Colon ( (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            {
            // InternalAnsibleDslParser.g:10896:3: ( ( (lv_name_0_0= RULE_ID ) ) | ( (lv_name_1_0= RULE_STRING ) ) )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==RULE_ID) ) {
                alt127=1;
            }
            else if ( (LA127_0==RULE_STRING) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // InternalAnsibleDslParser.g:10897:4: ( (lv_name_0_0= RULE_ID ) )
                    {
                    // InternalAnsibleDslParser.g:10897:4: ( (lv_name_0_0= RULE_ID ) )
                    // InternalAnsibleDslParser.g:10898:5: (lv_name_0_0= RULE_ID )
                    {
                    // InternalAnsibleDslParser.g:10898:5: (lv_name_0_0= RULE_ID )
                    // InternalAnsibleDslParser.g:10899:6: lv_name_0_0= RULE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getEDictionaryPairJinjaAccess().getNameIDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEDictionaryPairJinjaRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:10916:4: ( (lv_name_1_0= RULE_STRING ) )
                    {
                    // InternalAnsibleDslParser.g:10916:4: ( (lv_name_1_0= RULE_STRING ) )
                    // InternalAnsibleDslParser.g:10917:5: (lv_name_1_0= RULE_STRING )
                    {
                    // InternalAnsibleDslParser.g:10917:5: (lv_name_1_0= RULE_STRING )
                    // InternalAnsibleDslParser.g:10918:6: lv_name_1_0= RULE_STRING
                    {
                    lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getEDictionaryPairJinjaAccess().getNameSTRINGTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEDictionaryPairJinjaRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEDictionaryPairJinjaAccess().getColonKeyword_1());
              		
            }
            // InternalAnsibleDslParser.g:10939:3: ( (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            // InternalAnsibleDslParser.g:10940:4: (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            {
            // InternalAnsibleDslParser.g:10940:4: (lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            // InternalAnsibleDslParser.g:10941:5: lv_value_3_0= ruleEJinjaExpressionEvaluationWithoutBrackets
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEDictionaryPairJinjaAccess().getValueEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEDictionaryPairJinjaRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionaryPairJinja"


    // $ANTLR start "entryRuleECollectionListPassed"
    // InternalAnsibleDslParser.g:10962:1: entryRuleECollectionListPassed returns [EObject current=null] : iv_ruleECollectionListPassed= ruleECollectionListPassed EOF ;
    public final EObject entryRuleECollectionListPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleECollectionListPassed = null;


        try {
            // InternalAnsibleDslParser.g:10962:62: (iv_ruleECollectionListPassed= ruleECollectionListPassed EOF )
            // InternalAnsibleDslParser.g:10963:2: iv_ruleECollectionListPassed= ruleECollectionListPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getECollectionListPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleECollectionListPassed=ruleECollectionListPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleECollectionListPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleECollectionListPassed"


    // $ANTLR start "ruleECollectionListPassed"
    // InternalAnsibleDslParser.g:10969:1: ruleECollectionListPassed returns [EObject current=null] : (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_ECollectionList_2= ruleECollectionList ) ;
    public final EObject ruleECollectionListPassed() throws RecognitionException {
        EObject current = null;

        EObject this_EJinjaExpressionEvaluation_0 = null;

        EObject this_EJinjaStatement_1 = null;

        EObject this_ECollectionList_2 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:10975:2: ( (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_ECollectionList_2= ruleECollectionList ) )
            // InternalAnsibleDslParser.g:10976:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_ECollectionList_2= ruleECollectionList )
            {
            // InternalAnsibleDslParser.g:10976:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_ECollectionList_2= ruleECollectionList )
            int alt128=3;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketLeftCurlyBracket:
                {
                alt128=1;
                }
                break;
            case LeftCurlyBracketPercentSign:
                {
                alt128=2;
                }
                break;
            case LeftSquareBracket:
            case RULE_BEGIN:
                {
                alt128=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
                    // InternalAnsibleDslParser.g:10977:3: this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getECollectionListPassedAccess().getEJinjaExpressionEvaluationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluation_0=ruleEJinjaExpressionEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:10986:3: this_EJinjaStatement_1= ruleEJinjaStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getECollectionListPassedAccess().getEJinjaStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaStatement_1=ruleEJinjaStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:10995:3: this_ECollectionList_2= ruleECollectionList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getECollectionListPassedAccess().getECollectionListParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ECollectionList_2=ruleECollectionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ECollectionList_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleECollectionListPassed"


    // $ANTLR start "entryRuleECollectionList"
    // InternalAnsibleDslParser.g:11007:1: entryRuleECollectionList returns [EObject current=null] : iv_ruleECollectionList= ruleECollectionList EOF ;
    public final EObject entryRuleECollectionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleECollectionList = null;


        try {
            // InternalAnsibleDslParser.g:11007:56: (iv_ruleECollectionList= ruleECollectionList EOF )
            // InternalAnsibleDslParser.g:11008:2: iv_ruleECollectionList= ruleECollectionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getECollectionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleECollectionList=ruleECollectionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleECollectionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleECollectionList"


    // $ANTLR start "ruleECollectionList"
    // InternalAnsibleDslParser.g:11014:1: ruleECollectionList returns [EObject current=null] : (this_ECollectionListInLine_0= ruleECollectionListInLine | this_ECollectionListIndented_1= ruleECollectionListIndented ) ;
    public final EObject ruleECollectionList() throws RecognitionException {
        EObject current = null;

        EObject this_ECollectionListInLine_0 = null;

        EObject this_ECollectionListIndented_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11020:2: ( (this_ECollectionListInLine_0= ruleECollectionListInLine | this_ECollectionListIndented_1= ruleECollectionListIndented ) )
            // InternalAnsibleDslParser.g:11021:2: (this_ECollectionListInLine_0= ruleECollectionListInLine | this_ECollectionListIndented_1= ruleECollectionListIndented )
            {
            // InternalAnsibleDslParser.g:11021:2: (this_ECollectionListInLine_0= ruleECollectionListInLine | this_ECollectionListIndented_1= ruleECollectionListIndented )
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==LeftSquareBracket) ) {
                alt129=1;
            }
            else if ( (LA129_0==RULE_BEGIN) ) {
                alt129=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }
            switch (alt129) {
                case 1 :
                    // InternalAnsibleDslParser.g:11022:3: this_ECollectionListInLine_0= ruleECollectionListInLine
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getECollectionListAccess().getECollectionListInLineParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ECollectionListInLine_0=ruleECollectionListInLine();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ECollectionListInLine_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11031:3: this_ECollectionListIndented_1= ruleECollectionListIndented
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getECollectionListAccess().getECollectionListIndentedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ECollectionListIndented_1=ruleECollectionListIndented();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ECollectionListIndented_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleECollectionList"


    // $ANTLR start "entryRuleECollectionListInLine"
    // InternalAnsibleDslParser.g:11043:1: entryRuleECollectionListInLine returns [EObject current=null] : iv_ruleECollectionListInLine= ruleECollectionListInLine EOF ;
    public final EObject entryRuleECollectionListInLine() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleECollectionListInLine = null;


        try {
            // InternalAnsibleDslParser.g:11043:62: (iv_ruleECollectionListInLine= ruleECollectionListInLine EOF )
            // InternalAnsibleDslParser.g:11044:2: iv_ruleECollectionListInLine= ruleECollectionListInLine EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getECollectionListInLineRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleECollectionListInLine=ruleECollectionListInLine();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleECollectionListInLine; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleECollectionListInLine"


    // $ANTLR start "ruleECollectionListInLine"
    // InternalAnsibleDslParser.g:11050:1: ruleECollectionListInLine returns [EObject current=null] : (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleECollectionFQN ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleECollectionFQN ) ) )* otherlv_4= RightSquareBracket ) ;
    public final EObject ruleECollectionListInLine() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_elements_1_0 = null;

        EObject lv_elements_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11056:2: ( (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleECollectionFQN ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleECollectionFQN ) ) )* otherlv_4= RightSquareBracket ) )
            // InternalAnsibleDslParser.g:11057:2: (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleECollectionFQN ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleECollectionFQN ) ) )* otherlv_4= RightSquareBracket )
            {
            // InternalAnsibleDslParser.g:11057:2: (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleECollectionFQN ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleECollectionFQN ) ) )* otherlv_4= RightSquareBracket )
            // InternalAnsibleDslParser.g:11058:3: otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleECollectionFQN ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleECollectionFQN ) ) )* otherlv_4= RightSquareBracket
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getECollectionListInLineAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:11062:3: ( (lv_elements_1_0= ruleECollectionFQN ) )
            // InternalAnsibleDslParser.g:11063:4: (lv_elements_1_0= ruleECollectionFQN )
            {
            // InternalAnsibleDslParser.g:11063:4: (lv_elements_1_0= ruleECollectionFQN )
            // InternalAnsibleDslParser.g:11064:5: lv_elements_1_0= ruleECollectionFQN
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getECollectionListInLineAccess().getElementsECollectionFQNParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_elements_1_0=ruleECollectionFQN();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getECollectionListInLineRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionFQN");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:11081:3: (otherlv_2= Comma ( (lv_elements_3_0= ruleECollectionFQN ) ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==Comma) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:11082:4: otherlv_2= Comma ( (lv_elements_3_0= ruleECollectionFQN ) )
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getECollectionListInLineAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:11086:4: ( (lv_elements_3_0= ruleECollectionFQN ) )
            	    // InternalAnsibleDslParser.g:11087:5: (lv_elements_3_0= ruleECollectionFQN )
            	    {
            	    // InternalAnsibleDslParser.g:11087:5: (lv_elements_3_0= ruleECollectionFQN )
            	    // InternalAnsibleDslParser.g:11088:6: lv_elements_3_0= ruleECollectionFQN
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getECollectionListInLineAccess().getElementsECollectionFQNParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_elements_3_0=ruleECollectionFQN();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getECollectionListInLineRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_3_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionFQN");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            otherlv_4=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getECollectionListInLineAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleECollectionListInLine"


    // $ANTLR start "entryRuleECollectionFQN"
    // InternalAnsibleDslParser.g:11114:1: entryRuleECollectionFQN returns [EObject current=null] : iv_ruleECollectionFQN= ruleECollectionFQN EOF ;
    public final EObject entryRuleECollectionFQN() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleECollectionFQN = null;


        try {
            // InternalAnsibleDslParser.g:11114:55: (iv_ruleECollectionFQN= ruleECollectionFQN EOF )
            // InternalAnsibleDslParser.g:11115:2: iv_ruleECollectionFQN= ruleECollectionFQN EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getECollectionFQNRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleECollectionFQN=ruleECollectionFQN();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleECollectionFQN; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleECollectionFQN"


    // $ANTLR start "ruleECollectionFQN"
    // InternalAnsibleDslParser.g:11121:1: ruleECollectionFQN returns [EObject current=null] : ( ( (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) ) )? ) ;
    public final EObject ruleECollectionFQN() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_namespaceOrFqn_0_0 = null;

        EObject lv_collectionName_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11127:2: ( ( ( (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) ) )? ) )
            // InternalAnsibleDslParser.g:11128:2: ( ( (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) ) )? )
            {
            // InternalAnsibleDslParser.g:11128:2: ( ( (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) ) )? )
            // InternalAnsibleDslParser.g:11129:3: ( (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed ) ) (otherlv_1= FullStop ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) ) )?
            {
            // InternalAnsibleDslParser.g:11129:3: ( (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed ) )
            // InternalAnsibleDslParser.g:11130:4: (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed )
            {
            // InternalAnsibleDslParser.g:11130:4: (lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed )
            // InternalAnsibleDslParser.g:11131:5: lv_namespaceOrFqn_0_0= ruleEStringWithoutQuotesPassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getECollectionFQNAccess().getNamespaceOrFqnEStringWithoutQuotesPassedParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_namespaceOrFqn_0_0=ruleEStringWithoutQuotesPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getECollectionFQNRule());
              					}
              					set(
              						current,
              						"namespaceOrFqn",
              						lv_namespaceOrFqn_0_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EStringWithoutQuotesPassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:11148:3: (otherlv_1= FullStop ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==FullStop) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalAnsibleDslParser.g:11149:4: otherlv_1= FullStop ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) )
                    {
                    otherlv_1=(Token)match(input,FullStop,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getECollectionFQNAccess().getFullStopKeyword_1_0());
                      			
                    }
                    // InternalAnsibleDslParser.g:11153:4: ( (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed ) )
                    // InternalAnsibleDslParser.g:11154:5: (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed )
                    {
                    // InternalAnsibleDslParser.g:11154:5: (lv_collectionName_2_0= ruleEStringWithoutQuotesPassed )
                    // InternalAnsibleDslParser.g:11155:6: lv_collectionName_2_0= ruleEStringWithoutQuotesPassed
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getECollectionFQNAccess().getCollectionNameEStringWithoutQuotesPassedParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_collectionName_2_0=ruleEStringWithoutQuotesPassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getECollectionFQNRule());
                      						}
                      						set(
                      							current,
                      							"collectionName",
                      							lv_collectionName_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EStringWithoutQuotesPassed");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleECollectionFQN"


    // $ANTLR start "entryRuleECollectionListIndented"
    // InternalAnsibleDslParser.g:11177:1: entryRuleECollectionListIndented returns [EObject current=null] : iv_ruleECollectionListIndented= ruleECollectionListIndented EOF ;
    public final EObject entryRuleECollectionListIndented() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleECollectionListIndented = null;


        try {
            // InternalAnsibleDslParser.g:11177:64: (iv_ruleECollectionListIndented= ruleECollectionListIndented EOF )
            // InternalAnsibleDslParser.g:11178:2: iv_ruleECollectionListIndented= ruleECollectionListIndented EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getECollectionListIndentedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleECollectionListIndented=ruleECollectionListIndented();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleECollectionListIndented; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleECollectionListIndented"


    // $ANTLR start "ruleECollectionListIndented"
    // InternalAnsibleDslParser.g:11184:1: ruleECollectionListIndented returns [EObject current=null] : (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleECollectionFQN ) ) )+ this_END_3= RULE_END ) ;
    public final EObject ruleECollectionListIndented() throws RecognitionException {
        EObject current = null;

        Token this_BEGIN_0=null;
        Token otherlv_1=null;
        Token this_END_3=null;
        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11190:2: ( (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleECollectionFQN ) ) )+ this_END_3= RULE_END ) )
            // InternalAnsibleDslParser.g:11191:2: (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleECollectionFQN ) ) )+ this_END_3= RULE_END )
            {
            // InternalAnsibleDslParser.g:11191:2: (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleECollectionFQN ) ) )+ this_END_3= RULE_END )
            // InternalAnsibleDslParser.g:11192:3: this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleECollectionFQN ) ) )+ this_END_3= RULE_END
            {
            this_BEGIN_0=(Token)match(input,RULE_BEGIN,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_0, grammarAccess.getECollectionListIndentedAccess().getBEGINTerminalRuleCall_0());
              		
            }
            // InternalAnsibleDslParser.g:11196:3: (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleECollectionFQN ) ) )+
            int cnt132=0;
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==HyphenMinus) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:11197:4: otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleECollectionFQN ) )
            	    {
            	    otherlv_1=(Token)match(input,HyphenMinus,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getECollectionListIndentedAccess().getHyphenMinusKeyword_1_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:11201:4: ( (lv_elements_2_0= ruleECollectionFQN ) )
            	    // InternalAnsibleDslParser.g:11202:5: (lv_elements_2_0= ruleECollectionFQN )
            	    {
            	    // InternalAnsibleDslParser.g:11202:5: (lv_elements_2_0= ruleECollectionFQN )
            	    // InternalAnsibleDslParser.g:11203:6: lv_elements_2_0= ruleECollectionFQN
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getECollectionListIndentedAccess().getElementsECollectionFQNParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_elements_2_0=ruleECollectionFQN();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getECollectionListIndentedRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.ECollectionFQN");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt132 >= 1 ) break loop132;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(132, input);
                        throw eee;
                }
                cnt132++;
            } while (true);

            this_END_3=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_3, grammarAccess.getECollectionListIndentedAccess().getENDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleECollectionListIndented"


    // $ANTLR start "entryRuleEList"
    // InternalAnsibleDslParser.g:11229:1: entryRuleEList returns [EObject current=null] : iv_ruleEList= ruleEList EOF ;
    public final EObject entryRuleEList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEList = null;


        try {
            // InternalAnsibleDslParser.g:11229:46: (iv_ruleEList= ruleEList EOF )
            // InternalAnsibleDslParser.g:11230:2: iv_ruleEList= ruleEList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEList=ruleEList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEList"


    // $ANTLR start "ruleEList"
    // InternalAnsibleDslParser.g:11236:1: ruleEList returns [EObject current=null] : (this_EListInLine_0= ruleEListInLine | this_EListIndented_1= ruleEListIndented ) ;
    public final EObject ruleEList() throws RecognitionException {
        EObject current = null;

        EObject this_EListInLine_0 = null;

        EObject this_EListIndented_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11242:2: ( (this_EListInLine_0= ruleEListInLine | this_EListIndented_1= ruleEListIndented ) )
            // InternalAnsibleDslParser.g:11243:2: (this_EListInLine_0= ruleEListInLine | this_EListIndented_1= ruleEListIndented )
            {
            // InternalAnsibleDslParser.g:11243:2: (this_EListInLine_0= ruleEListInLine | this_EListIndented_1= ruleEListIndented )
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==LeftSquareBracket) ) {
                alt133=1;
            }
            else if ( (LA133_0==RULE_BEGIN) ) {
                alt133=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }
            switch (alt133) {
                case 1 :
                    // InternalAnsibleDslParser.g:11244:3: this_EListInLine_0= ruleEListInLine
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEListAccess().getEListInLineParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EListInLine_0=ruleEListInLine();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EListInLine_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11253:3: this_EListIndented_1= ruleEListIndented
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEListAccess().getEListIndentedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EListIndented_1=ruleEListIndented();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EListIndented_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEList"


    // $ANTLR start "entryRuleEListInLine"
    // InternalAnsibleDslParser.g:11265:1: entryRuleEListInLine returns [EObject current=null] : iv_ruleEListInLine= ruleEListInLine EOF ;
    public final EObject entryRuleEListInLine() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEListInLine = null;


        try {
            // InternalAnsibleDslParser.g:11265:52: (iv_ruleEListInLine= ruleEListInLine EOF )
            // InternalAnsibleDslParser.g:11266:2: iv_ruleEListInLine= ruleEListInLine EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEListInLineRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEListInLine=ruleEListInLine();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEListInLine; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEListInLine"


    // $ANTLR start "ruleEListInLine"
    // InternalAnsibleDslParser.g:11272:1: ruleEListInLine returns [EObject current=null] : (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleEValuePassed ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleEValuePassed ) ) )* otherlv_4= RightSquareBracket ) ;
    public final EObject ruleEListInLine() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_elements_1_0 = null;

        EObject lv_elements_3_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11278:2: ( (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleEValuePassed ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleEValuePassed ) ) )* otherlv_4= RightSquareBracket ) )
            // InternalAnsibleDslParser.g:11279:2: (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleEValuePassed ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleEValuePassed ) ) )* otherlv_4= RightSquareBracket )
            {
            // InternalAnsibleDslParser.g:11279:2: (otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleEValuePassed ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleEValuePassed ) ) )* otherlv_4= RightSquareBracket )
            // InternalAnsibleDslParser.g:11280:3: otherlv_0= LeftSquareBracket ( (lv_elements_1_0= ruleEValuePassed ) ) (otherlv_2= Comma ( (lv_elements_3_0= ruleEValuePassed ) ) )* otherlv_4= RightSquareBracket
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEListInLineAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalAnsibleDslParser.g:11284:3: ( (lv_elements_1_0= ruleEValuePassed ) )
            // InternalAnsibleDslParser.g:11285:4: (lv_elements_1_0= ruleEValuePassed )
            {
            // InternalAnsibleDslParser.g:11285:4: (lv_elements_1_0= ruleEValuePassed )
            // InternalAnsibleDslParser.g:11286:5: lv_elements_1_0= ruleEValuePassed
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEListInLineAccess().getElementsEValuePassedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_elements_1_0=ruleEValuePassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEListInLineRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_1_0,
              						"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsibleDslParser.g:11303:3: (otherlv_2= Comma ( (lv_elements_3_0= ruleEValuePassed ) ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==Comma) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:11304:4: otherlv_2= Comma ( (lv_elements_3_0= ruleEValuePassed ) )
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getEListInLineAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:11308:4: ( (lv_elements_3_0= ruleEValuePassed ) )
            	    // InternalAnsibleDslParser.g:11309:5: (lv_elements_3_0= ruleEValuePassed )
            	    {
            	    // InternalAnsibleDslParser.g:11309:5: (lv_elements_3_0= ruleEValuePassed )
            	    // InternalAnsibleDslParser.g:11310:6: lv_elements_3_0= ruleEValuePassed
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEListInLineAccess().getElementsEValuePassedParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_elements_3_0=ruleEValuePassed();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEListInLineRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_3_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.EValuePassed");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);

            otherlv_4=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEListInLineAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEListInLine"


    // $ANTLR start "entryRuleEListIndented"
    // InternalAnsibleDslParser.g:11336:1: entryRuleEListIndented returns [EObject current=null] : iv_ruleEListIndented= ruleEListIndented EOF ;
    public final EObject entryRuleEListIndented() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEListIndented = null;


        try {
            // InternalAnsibleDslParser.g:11336:54: (iv_ruleEListIndented= ruleEListIndented EOF )
            // InternalAnsibleDslParser.g:11337:2: iv_ruleEListIndented= ruleEListIndented EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEListIndentedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEListIndented=ruleEListIndented();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEListIndented; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEListIndented"


    // $ANTLR start "ruleEListIndented"
    // InternalAnsibleDslParser.g:11343:1: ruleEListIndented returns [EObject current=null] : (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleEElementOfListIndented ) ) )+ this_END_3= RULE_END ) ;
    public final EObject ruleEListIndented() throws RecognitionException {
        EObject current = null;

        Token this_BEGIN_0=null;
        Token otherlv_1=null;
        Token this_END_3=null;
        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11349:2: ( (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleEElementOfListIndented ) ) )+ this_END_3= RULE_END ) )
            // InternalAnsibleDslParser.g:11350:2: (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleEElementOfListIndented ) ) )+ this_END_3= RULE_END )
            {
            // InternalAnsibleDslParser.g:11350:2: (this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleEElementOfListIndented ) ) )+ this_END_3= RULE_END )
            // InternalAnsibleDslParser.g:11351:3: this_BEGIN_0= RULE_BEGIN (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleEElementOfListIndented ) ) )+ this_END_3= RULE_END
            {
            this_BEGIN_0=(Token)match(input,RULE_BEGIN,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_0, grammarAccess.getEListIndentedAccess().getBEGINTerminalRuleCall_0());
              		
            }
            // InternalAnsibleDslParser.g:11355:3: (otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleEElementOfListIndented ) ) )+
            int cnt135=0;
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==HyphenMinus) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:11356:4: otherlv_1= HyphenMinus ( (lv_elements_2_0= ruleEElementOfListIndented ) )
            	    {
            	    otherlv_1=(Token)match(input,HyphenMinus,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getEListIndentedAccess().getHyphenMinusKeyword_1_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:11360:4: ( (lv_elements_2_0= ruleEElementOfListIndented ) )
            	    // InternalAnsibleDslParser.g:11361:5: (lv_elements_2_0= ruleEElementOfListIndented )
            	    {
            	    // InternalAnsibleDslParser.g:11361:5: (lv_elements_2_0= ruleEElementOfListIndented )
            	    // InternalAnsibleDslParser.g:11362:6: lv_elements_2_0= ruleEElementOfListIndented
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEListIndentedAccess().getElementsEElementOfListIndentedParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_elements_2_0=ruleEElementOfListIndented();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEListIndentedRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.EElementOfListIndented");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt135 >= 1 ) break loop135;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(135, input);
                        throw eee;
                }
                cnt135++;
            } while (true);

            this_END_3=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_3, grammarAccess.getEListIndentedAccess().getENDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEListIndented"


    // $ANTLR start "entryRuleEDictionaryOfListIndented"
    // InternalAnsibleDslParser.g:11388:1: entryRuleEDictionaryOfListIndented returns [EObject current=null] : iv_ruleEDictionaryOfListIndented= ruleEDictionaryOfListIndented EOF ;
    public final EObject entryRuleEDictionaryOfListIndented() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionaryOfListIndented = null;


        try {
            // InternalAnsibleDslParser.g:11388:66: (iv_ruleEDictionaryOfListIndented= ruleEDictionaryOfListIndented EOF )
            // InternalAnsibleDslParser.g:11389:2: iv_ruleEDictionaryOfListIndented= ruleEDictionaryOfListIndented EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryOfListIndentedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionaryOfListIndented=ruleEDictionaryOfListIndented();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionaryOfListIndented; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionaryOfListIndented"


    // $ANTLR start "ruleEDictionaryOfListIndented"
    // InternalAnsibleDslParser.g:11395:1: ruleEDictionaryOfListIndented returns [EObject current=null] : ( (lv_dictionary_pairs_0_0= ruleEDictionaryPair ) )+ ;
    public final EObject ruleEDictionaryOfListIndented() throws RecognitionException {
        EObject current = null;

        EObject lv_dictionary_pairs_0_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11401:2: ( ( (lv_dictionary_pairs_0_0= ruleEDictionaryPair ) )+ )
            // InternalAnsibleDslParser.g:11402:2: ( (lv_dictionary_pairs_0_0= ruleEDictionaryPair ) )+
            {
            // InternalAnsibleDslParser.g:11402:2: ( (lv_dictionary_pairs_0_0= ruleEDictionaryPair ) )+
            int cnt136=0;
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==RULE_ID) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:11403:3: (lv_dictionary_pairs_0_0= ruleEDictionaryPair )
            	    {
            	    // InternalAnsibleDslParser.g:11403:3: (lv_dictionary_pairs_0_0= ruleEDictionaryPair )
            	    // InternalAnsibleDslParser.g:11404:4: lv_dictionary_pairs_0_0= ruleEDictionaryPair
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getEDictionaryOfListIndentedAccess().getDictionary_pairsEDictionaryPairParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_dictionary_pairs_0_0=ruleEDictionaryPair();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getEDictionaryOfListIndentedRule());
            	      				}
            	      				add(
            	      					current,
            	      					"dictionary_pairs",
            	      					lv_dictionary_pairs_0_0,
            	      					"org.sodalite.sdl.ansible.AnsibleDsl.EDictionaryPair");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt136 >= 1 ) break loop136;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(136, input);
                        throw eee;
                }
                cnt136++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionaryOfListIndented"


    // $ANTLR start "entryRuleEElementOfListIndented"
    // InternalAnsibleDslParser.g:11424:1: entryRuleEElementOfListIndented returns [EObject current=null] : iv_ruleEElementOfListIndented= ruleEElementOfListIndented EOF ;
    public final EObject entryRuleEElementOfListIndented() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEElementOfListIndented = null;


        try {
            // InternalAnsibleDslParser.g:11424:63: (iv_ruleEElementOfListIndented= ruleEElementOfListIndented EOF )
            // InternalAnsibleDslParser.g:11425:2: iv_ruleEElementOfListIndented= ruleEElementOfListIndented EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEElementOfListIndentedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEElementOfListIndented=ruleEElementOfListIndented();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEElementOfListIndented; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEElementOfListIndented"


    // $ANTLR start "ruleEElementOfListIndented"
    // InternalAnsibleDslParser.g:11431:1: ruleEElementOfListIndented returns [EObject current=null] : (this_EStringPassed_0= ruleEStringPassed | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString | this_EDictionaryInLine_2= ruleEDictionaryInLine | this_EDictionaryOfListIndented_3= ruleEDictionaryOfListIndented | this_EList_4= ruleEList ) ;
    public final EObject ruleEElementOfListIndented() throws RecognitionException {
        EObject current = null;

        EObject this_EStringPassed_0 = null;

        EObject this_ESimpleValueWithoutString_1 = null;

        EObject this_EDictionaryInLine_2 = null;

        EObject this_EDictionaryOfListIndented_3 = null;

        EObject this_EList_4 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11437:2: ( (this_EStringPassed_0= ruleEStringPassed | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString | this_EDictionaryInLine_2= ruleEDictionaryInLine | this_EDictionaryOfListIndented_3= ruleEDictionaryOfListIndented | this_EList_4= ruleEList ) )
            // InternalAnsibleDslParser.g:11438:2: (this_EStringPassed_0= ruleEStringPassed | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString | this_EDictionaryInLine_2= ruleEDictionaryInLine | this_EDictionaryOfListIndented_3= ruleEDictionaryOfListIndented | this_EList_4= ruleEList )
            {
            // InternalAnsibleDslParser.g:11438:2: (this_EStringPassed_0= ruleEStringPassed | this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString | this_EDictionaryInLine_2= ruleEDictionaryInLine | this_EDictionaryOfListIndented_3= ruleEDictionaryOfListIndented | this_EList_4= ruleEList )
            int alt137=5;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketPercentSign:
            case LeftCurlyBracketLeftCurlyBracket:
            case GreaterThanSign:
            case VerticalLine:
            case RULE_STRING:
                {
                alt137=1;
                }
                break;
            case RULE_BOOLEAN:
            case RULE_BOOLEAN_ONLY_ANSIBLE:
            case RULE_NULL:
            case RULE_NONE:
            case RULE_OCTAL_NUMBER:
            case RULE_HEXADECIMAL_NUMBER:
            case RULE_SIMPLE_NUMBER:
            case RULE_EXPONENTIAL_NUMBER:
            case RULE_INTEGER:
                {
                alt137=2;
                }
                break;
            case LeftCurlyBracket:
                {
                alt137=3;
                }
                break;
            case RULE_ID:
                {
                alt137=4;
                }
                break;
            case LeftSquareBracket:
            case RULE_BEGIN:
                {
                alt137=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }

            switch (alt137) {
                case 1 :
                    // InternalAnsibleDslParser.g:11439:3: this_EStringPassed_0= ruleEStringPassed
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEElementOfListIndentedAccess().getEStringPassedParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EStringPassed_0=ruleEStringPassed();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EStringPassed_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11448:3: this_ESimpleValueWithoutString_1= ruleESimpleValueWithoutString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEElementOfListIndentedAccess().getESimpleValueWithoutStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ESimpleValueWithoutString_1=ruleESimpleValueWithoutString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ESimpleValueWithoutString_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:11457:3: this_EDictionaryInLine_2= ruleEDictionaryInLine
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEElementOfListIndentedAccess().getEDictionaryInLineParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EDictionaryInLine_2=ruleEDictionaryInLine();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EDictionaryInLine_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:11466:3: this_EDictionaryOfListIndented_3= ruleEDictionaryOfListIndented
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEElementOfListIndentedAccess().getEDictionaryOfListIndentedParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EDictionaryOfListIndented_3=ruleEDictionaryOfListIndented();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EDictionaryOfListIndented_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsibleDslParser.g:11475:3: this_EList_4= ruleEList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEElementOfListIndentedAccess().getEListParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EList_4=ruleEList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EList_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEElementOfListIndented"


    // $ANTLR start "entryRuleEListJinja"
    // InternalAnsibleDslParser.g:11487:1: entryRuleEListJinja returns [EObject current=null] : iv_ruleEListJinja= ruleEListJinja EOF ;
    public final EObject entryRuleEListJinja() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEListJinja = null;


        try {
            // InternalAnsibleDslParser.g:11487:51: (iv_ruleEListJinja= ruleEListJinja EOF )
            // InternalAnsibleDslParser.g:11488:2: iv_ruleEListJinja= ruleEListJinja EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEListJinjaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEListJinja=ruleEListJinja();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEListJinja; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEListJinja"


    // $ANTLR start "ruleEListJinja"
    // InternalAnsibleDslParser.g:11494:1: ruleEListJinja returns [EObject current=null] : ( () otherlv_1= LeftSquareBracket ( ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )* )? otherlv_5= RightSquareBracket ) ;
    public final EObject ruleEListJinja() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11500:2: ( ( () otherlv_1= LeftSquareBracket ( ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )* )? otherlv_5= RightSquareBracket ) )
            // InternalAnsibleDslParser.g:11501:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )* )? otherlv_5= RightSquareBracket )
            {
            // InternalAnsibleDslParser.g:11501:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )* )? otherlv_5= RightSquareBracket )
            // InternalAnsibleDslParser.g:11502:3: () otherlv_1= LeftSquareBracket ( ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )* )? otherlv_5= RightSquareBracket
            {
            // InternalAnsibleDslParser.g:11502:3: ()
            // InternalAnsibleDslParser.g:11503:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEListJinjaAccess().getEListJinjaAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_118); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEListJinjaAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalAnsibleDslParser.g:11513:3: ( ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )* )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( LA139_0 == Registered_variable || LA139_0 >= Declared_variable && LA139_0 <= Index_or_loop_var || LA139_0 == Special_variable || LA139_0 == Interface_input || LA139_0 == Operation_input || LA139_0 == Fact_set || LA139_0 == Not || LA139_0 == LeftParenthesis || LA139_0 == LeftSquareBracket || LA139_0 == LeftCurlyBracket || LA139_0 == RULE_BOOLEAN || LA139_0 >= RULE_NULL && LA139_0 <= RULE_EXPONENTIAL_NUMBER || LA139_0 >= RULE_INTEGER && LA139_0 <= RULE_ID || LA139_0 == RULE_STRING ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalAnsibleDslParser.g:11514:4: ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )*
                    {
                    // InternalAnsibleDslParser.g:11514:4: ( (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
                    // InternalAnsibleDslParser.g:11515:5: (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    {
                    // InternalAnsibleDslParser.g:11515:5: (lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    // InternalAnsibleDslParser.g:11516:6: lv_elements_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEListJinjaAccess().getElementsEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_114);
                    lv_elements_2_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEListJinjaRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsibleDslParser.g:11533:4: (otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==Comma) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // InternalAnsibleDslParser.g:11534:5: otherlv_3= Comma ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getEListJinjaAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalAnsibleDslParser.g:11538:5: ( (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
                    	    // InternalAnsibleDslParser.g:11539:6: (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    	    {
                    	    // InternalAnsibleDslParser.g:11539:6: (lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
                    	    // InternalAnsibleDslParser.g:11540:7: lv_elements_4_0= ruleEJinjaExpressionEvaluationWithoutBrackets
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEListJinjaAccess().getElementsEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_114);
                    	    lv_elements_4_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEListJinjaRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEListJinjaAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEListJinja"


    // $ANTLR start "entryRuleECondition"
    // InternalAnsibleDslParser.g:11567:1: entryRuleECondition returns [EObject current=null] : iv_ruleECondition= ruleECondition EOF ;
    public final EObject entryRuleECondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleECondition = null;


        try {
            // InternalAnsibleDslParser.g:11567:51: (iv_ruleECondition= ruleECondition EOF )
            // InternalAnsibleDslParser.g:11568:2: iv_ruleECondition= ruleECondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleECondition=ruleECondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleECondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleECondition"


    // $ANTLR start "ruleECondition"
    // InternalAnsibleDslParser.g:11574:1: ruleECondition returns [EObject current=null] : (this_EJinjaExpressionEvaluationWithoutBrackets_0= ruleEJinjaExpressionEvaluationWithoutBrackets | this_EListOfConditions_1= ruleEListOfConditions ) ;
    public final EObject ruleECondition() throws RecognitionException {
        EObject current = null;

        EObject this_EJinjaExpressionEvaluationWithoutBrackets_0 = null;

        EObject this_EListOfConditions_1 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11580:2: ( (this_EJinjaExpressionEvaluationWithoutBrackets_0= ruleEJinjaExpressionEvaluationWithoutBrackets | this_EListOfConditions_1= ruleEListOfConditions ) )
            // InternalAnsibleDslParser.g:11581:2: (this_EJinjaExpressionEvaluationWithoutBrackets_0= ruleEJinjaExpressionEvaluationWithoutBrackets | this_EListOfConditions_1= ruleEListOfConditions )
            {
            // InternalAnsibleDslParser.g:11581:2: (this_EJinjaExpressionEvaluationWithoutBrackets_0= ruleEJinjaExpressionEvaluationWithoutBrackets | this_EListOfConditions_1= ruleEListOfConditions )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( LA140_0 == Registered_variable || LA140_0 >= Declared_variable && LA140_0 <= Index_or_loop_var || LA140_0 == Special_variable || LA140_0 == Interface_input || LA140_0 == Operation_input || LA140_0 == Fact_set || LA140_0 == Not || LA140_0 == LeftParenthesis || LA140_0 == LeftSquareBracket || LA140_0 == LeftCurlyBracket || LA140_0 == RULE_BOOLEAN || LA140_0 >= RULE_NULL && LA140_0 <= RULE_EXPONENTIAL_NUMBER || LA140_0 >= RULE_INTEGER && LA140_0 <= RULE_ID || LA140_0 == RULE_STRING ) {
                alt140=1;
            }
            else if ( (LA140_0==RULE_BEGIN) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // InternalAnsibleDslParser.g:11582:3: this_EJinjaExpressionEvaluationWithoutBrackets_0= ruleEJinjaExpressionEvaluationWithoutBrackets
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEConditionAccess().getEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluationWithoutBrackets_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluationWithoutBrackets_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11591:3: this_EListOfConditions_1= ruleEListOfConditions
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEConditionAccess().getEListOfConditionsParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EListOfConditions_1=ruleEListOfConditions();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EListOfConditions_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleECondition"


    // $ANTLR start "entryRuleEListOfConditions"
    // InternalAnsibleDslParser.g:11603:1: entryRuleEListOfConditions returns [EObject current=null] : iv_ruleEListOfConditions= ruleEListOfConditions EOF ;
    public final EObject entryRuleEListOfConditions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEListOfConditions = null;


        try {
            // InternalAnsibleDslParser.g:11603:58: (iv_ruleEListOfConditions= ruleEListOfConditions EOF )
            // InternalAnsibleDslParser.g:11604:2: iv_ruleEListOfConditions= ruleEListOfConditions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEListOfConditionsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEListOfConditions=ruleEListOfConditions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEListOfConditions; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEListOfConditions"


    // $ANTLR start "ruleEListOfConditions"
    // InternalAnsibleDslParser.g:11610:1: ruleEListOfConditions returns [EObject current=null] : (this_BEGIN_0= RULE_BEGIN (otherlv_1= When_condition ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )+ this_END_3= RULE_END ) ;
    public final EObject ruleEListOfConditions() throws RecognitionException {
        EObject current = null;

        Token this_BEGIN_0=null;
        Token otherlv_1=null;
        Token this_END_3=null;
        EObject lv_conditions_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11616:2: ( (this_BEGIN_0= RULE_BEGIN (otherlv_1= When_condition ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )+ this_END_3= RULE_END ) )
            // InternalAnsibleDslParser.g:11617:2: (this_BEGIN_0= RULE_BEGIN (otherlv_1= When_condition ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )+ this_END_3= RULE_END )
            {
            // InternalAnsibleDslParser.g:11617:2: (this_BEGIN_0= RULE_BEGIN (otherlv_1= When_condition ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )+ this_END_3= RULE_END )
            // InternalAnsibleDslParser.g:11618:3: this_BEGIN_0= RULE_BEGIN (otherlv_1= When_condition ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )+ this_END_3= RULE_END
            {
            this_BEGIN_0=(Token)match(input,RULE_BEGIN,FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_0, grammarAccess.getEListOfConditionsAccess().getBEGINTerminalRuleCall_0());
              		
            }
            // InternalAnsibleDslParser.g:11622:3: (otherlv_1= When_condition ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) ) )+
            int cnt141=0;
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==When_condition) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:11623:4: otherlv_1= When_condition ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            	    {
            	    otherlv_1=(Token)match(input,When_condition,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getEListOfConditionsAccess().getWhen_conditionKeyword_1_0());
            	      			
            	    }
            	    // InternalAnsibleDslParser.g:11627:4: ( (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets ) )
            	    // InternalAnsibleDslParser.g:11628:5: (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            	    {
            	    // InternalAnsibleDslParser.g:11628:5: (lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets )
            	    // InternalAnsibleDslParser.g:11629:6: lv_conditions_2_0= ruleEJinjaExpressionEvaluationWithoutBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEListOfConditionsAccess().getConditionsEJinjaExpressionEvaluationWithoutBracketsParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_conditions_2_0=ruleEJinjaExpressionEvaluationWithoutBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEListOfConditionsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"conditions",
            	      							lv_conditions_2_0,
            	      							"org.sodalite.sdl.ansible.AnsibleDsl.EJinjaExpressionEvaluationWithoutBrackets");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt141 >= 1 ) break loop141;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(141, input);
                        throw eee;
                }
                cnt141++;
            } while (true);

            this_END_3=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_3, grammarAccess.getEListOfConditionsAccess().getENDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEListOfConditions"


    // $ANTLR start "entryRuleEDictionaryPassed"
    // InternalAnsibleDslParser.g:11655:1: entryRuleEDictionaryPassed returns [EObject current=null] : iv_ruleEDictionaryPassed= ruleEDictionaryPassed EOF ;
    public final EObject entryRuleEDictionaryPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEDictionaryPassed = null;


        try {
            // InternalAnsibleDslParser.g:11655:58: (iv_ruleEDictionaryPassed= ruleEDictionaryPassed EOF )
            // InternalAnsibleDslParser.g:11656:2: iv_ruleEDictionaryPassed= ruleEDictionaryPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEDictionaryPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEDictionaryPassed=ruleEDictionaryPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEDictionaryPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEDictionaryPassed"


    // $ANTLR start "ruleEDictionaryPassed"
    // InternalAnsibleDslParser.g:11662:1: ruleEDictionaryPassed returns [EObject current=null] : (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EDictionary_2= ruleEDictionary ) ;
    public final EObject ruleEDictionaryPassed() throws RecognitionException {
        EObject current = null;

        EObject this_EJinjaExpressionEvaluation_0 = null;

        EObject this_EJinjaStatement_1 = null;

        EObject this_EDictionary_2 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11668:2: ( (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EDictionary_2= ruleEDictionary ) )
            // InternalAnsibleDslParser.g:11669:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EDictionary_2= ruleEDictionary )
            {
            // InternalAnsibleDslParser.g:11669:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EDictionary_2= ruleEDictionary )
            int alt142=3;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketLeftCurlyBracket:
                {
                alt142=1;
                }
                break;
            case LeftCurlyBracketPercentSign:
                {
                alt142=2;
                }
                break;
            case LeftCurlyBracket:
            case RULE_BEGIN:
                {
                alt142=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }

            switch (alt142) {
                case 1 :
                    // InternalAnsibleDslParser.g:11670:3: this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEDictionaryPassedAccess().getEJinjaExpressionEvaluationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluation_0=ruleEJinjaExpressionEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11679:3: this_EJinjaStatement_1= ruleEJinjaStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEDictionaryPassedAccess().getEJinjaStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaStatement_1=ruleEJinjaStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:11688:3: this_EDictionary_2= ruleEDictionary
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEDictionaryPassedAccess().getEDictionaryParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EDictionary_2=ruleEDictionary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EDictionary_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEDictionaryPassed"


    // $ANTLR start "entryRuleEListPassed"
    // InternalAnsibleDslParser.g:11700:1: entryRuleEListPassed returns [EObject current=null] : iv_ruleEListPassed= ruleEListPassed EOF ;
    public final EObject entryRuleEListPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEListPassed = null;


        try {
            // InternalAnsibleDslParser.g:11700:52: (iv_ruleEListPassed= ruleEListPassed EOF )
            // InternalAnsibleDslParser.g:11701:2: iv_ruleEListPassed= ruleEListPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEListPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEListPassed=ruleEListPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEListPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEListPassed"


    // $ANTLR start "ruleEListPassed"
    // InternalAnsibleDslParser.g:11707:1: ruleEListPassed returns [EObject current=null] : (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EList_2= ruleEList ) ;
    public final EObject ruleEListPassed() throws RecognitionException {
        EObject current = null;

        EObject this_EJinjaExpressionEvaluation_0 = null;

        EObject this_EJinjaStatement_1 = null;

        EObject this_EList_2 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11713:2: ( (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EList_2= ruleEList ) )
            // InternalAnsibleDslParser.g:11714:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EList_2= ruleEList )
            {
            // InternalAnsibleDslParser.g:11714:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | this_EList_2= ruleEList )
            int alt143=3;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketLeftCurlyBracket:
                {
                alt143=1;
                }
                break;
            case LeftCurlyBracketPercentSign:
                {
                alt143=2;
                }
                break;
            case LeftSquareBracket:
            case RULE_BEGIN:
                {
                alt143=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }

            switch (alt143) {
                case 1 :
                    // InternalAnsibleDslParser.g:11715:3: this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEListPassedAccess().getEJinjaExpressionEvaluationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluation_0=ruleEJinjaExpressionEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11724:3: this_EJinjaStatement_1= ruleEJinjaStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEListPassedAccess().getEJinjaStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaStatement_1=ruleEJinjaStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:11733:3: this_EList_2= ruleEList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEListPassedAccess().getEListParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EList_2=ruleEList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EList_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEListPassed"


    // $ANTLR start "entryRuleENumberPassed"
    // InternalAnsibleDslParser.g:11745:1: entryRuleENumberPassed returns [EObject current=null] : iv_ruleENumberPassed= ruleENumberPassed EOF ;
    public final EObject entryRuleENumberPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleENumberPassed = null;


        try {
            // InternalAnsibleDslParser.g:11745:54: (iv_ruleENumberPassed= ruleENumberPassed EOF )
            // InternalAnsibleDslParser.g:11746:2: iv_ruleENumberPassed= ruleENumberPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getENumberPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleENumberPassed=ruleENumberPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleENumberPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleENumberPassed"


    // $ANTLR start "ruleENumberPassed"
    // InternalAnsibleDslParser.g:11752:1: ruleENumberPassed returns [EObject current=null] : (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_number_passed_2_0= ruleENumber ) ) | ( (lv_number_passed_null_3_0= RULE_NULL ) ) ) ;
    public final EObject ruleENumberPassed() throws RecognitionException {
        EObject current = null;

        Token lv_number_passed_null_3_0=null;
        EObject this_EJinjaExpressionEvaluation_0 = null;

        EObject this_EJinjaStatement_1 = null;

        EObject lv_number_passed_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11758:2: ( (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_number_passed_2_0= ruleENumber ) ) | ( (lv_number_passed_null_3_0= RULE_NULL ) ) ) )
            // InternalAnsibleDslParser.g:11759:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_number_passed_2_0= ruleENumber ) ) | ( (lv_number_passed_null_3_0= RULE_NULL ) ) )
            {
            // InternalAnsibleDslParser.g:11759:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_number_passed_2_0= ruleENumber ) ) | ( (lv_number_passed_null_3_0= RULE_NULL ) ) )
            int alt144=4;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketLeftCurlyBracket:
                {
                alt144=1;
                }
                break;
            case LeftCurlyBracketPercentSign:
                {
                alt144=2;
                }
                break;
            case RULE_OCTAL_NUMBER:
            case RULE_HEXADECIMAL_NUMBER:
            case RULE_SIMPLE_NUMBER:
            case RULE_EXPONENTIAL_NUMBER:
            case RULE_INTEGER:
                {
                alt144=3;
                }
                break;
            case RULE_NULL:
                {
                alt144=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }

            switch (alt144) {
                case 1 :
                    // InternalAnsibleDslParser.g:11760:3: this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getENumberPassedAccess().getEJinjaExpressionEvaluationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluation_0=ruleEJinjaExpressionEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11769:3: this_EJinjaStatement_1= ruleEJinjaStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getENumberPassedAccess().getEJinjaStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaStatement_1=ruleEJinjaStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:11778:3: ( (lv_number_passed_2_0= ruleENumber ) )
                    {
                    // InternalAnsibleDslParser.g:11778:3: ( (lv_number_passed_2_0= ruleENumber ) )
                    // InternalAnsibleDslParser.g:11779:4: (lv_number_passed_2_0= ruleENumber )
                    {
                    // InternalAnsibleDslParser.g:11779:4: (lv_number_passed_2_0= ruleENumber )
                    // InternalAnsibleDslParser.g:11780:5: lv_number_passed_2_0= ruleENumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getENumberPassedAccess().getNumber_passedENumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_passed_2_0=ruleENumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getENumberPassedRule());
                      					}
                      					set(
                      						current,
                      						"number_passed",
                      						lv_number_passed_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.ENumber");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:11798:3: ( (lv_number_passed_null_3_0= RULE_NULL ) )
                    {
                    // InternalAnsibleDslParser.g:11798:3: ( (lv_number_passed_null_3_0= RULE_NULL ) )
                    // InternalAnsibleDslParser.g:11799:4: (lv_number_passed_null_3_0= RULE_NULL )
                    {
                    // InternalAnsibleDslParser.g:11799:4: (lv_number_passed_null_3_0= RULE_NULL )
                    // InternalAnsibleDslParser.g:11800:5: lv_number_passed_null_3_0= RULE_NULL
                    {
                    lv_number_passed_null_3_0=(Token)match(input,RULE_NULL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_number_passed_null_3_0, grammarAccess.getENumberPassedAccess().getNumber_passed_nullNULLTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getENumberPassedRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"number_passed_null",
                      						lv_number_passed_null_3_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.NULL");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleENumberPassed"


    // $ANTLR start "entryRuleEBooleanPassed"
    // InternalAnsibleDslParser.g:11820:1: entryRuleEBooleanPassed returns [EObject current=null] : iv_ruleEBooleanPassed= ruleEBooleanPassed EOF ;
    public final EObject entryRuleEBooleanPassed() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEBooleanPassed = null;


        try {
            // InternalAnsibleDslParser.g:11820:55: (iv_ruleEBooleanPassed= ruleEBooleanPassed EOF )
            // InternalAnsibleDslParser.g:11821:2: iv_ruleEBooleanPassed= ruleEBooleanPassed EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEBooleanPassedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEBooleanPassed=ruleEBooleanPassed();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEBooleanPassed; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEBooleanPassed"


    // $ANTLR start "ruleEBooleanPassed"
    // InternalAnsibleDslParser.g:11827:1: ruleEBooleanPassed returns [EObject current=null] : (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_boolean_passed_2_0= ruleEBooleanAnsible ) ) | ( (lv_boolean_passed_null_3_0= RULE_NULL ) ) ) ;
    public final EObject ruleEBooleanPassed() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_passed_null_3_0=null;
        EObject this_EJinjaExpressionEvaluation_0 = null;

        EObject this_EJinjaStatement_1 = null;

        EObject lv_boolean_passed_2_0 = null;



        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11833:2: ( (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_boolean_passed_2_0= ruleEBooleanAnsible ) ) | ( (lv_boolean_passed_null_3_0= RULE_NULL ) ) ) )
            // InternalAnsibleDslParser.g:11834:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_boolean_passed_2_0= ruleEBooleanAnsible ) ) | ( (lv_boolean_passed_null_3_0= RULE_NULL ) ) )
            {
            // InternalAnsibleDslParser.g:11834:2: (this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation | this_EJinjaStatement_1= ruleEJinjaStatement | ( (lv_boolean_passed_2_0= ruleEBooleanAnsible ) ) | ( (lv_boolean_passed_null_3_0= RULE_NULL ) ) )
            int alt145=4;
            switch ( input.LA(1) ) {
            case LeftCurlyBracketLeftCurlyBracket:
                {
                alt145=1;
                }
                break;
            case LeftCurlyBracketPercentSign:
                {
                alt145=2;
                }
                break;
            case RULE_BOOLEAN:
            case RULE_BOOLEAN_ONLY_ANSIBLE:
                {
                alt145=3;
                }
                break;
            case RULE_NULL:
                {
                alt145=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }

            switch (alt145) {
                case 1 :
                    // InternalAnsibleDslParser.g:11835:3: this_EJinjaExpressionEvaluation_0= ruleEJinjaExpressionEvaluation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEBooleanPassedAccess().getEJinjaExpressionEvaluationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaExpressionEvaluation_0=ruleEJinjaExpressionEvaluation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaExpressionEvaluation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11844:3: this_EJinjaStatement_1= ruleEJinjaStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEBooleanPassedAccess().getEJinjaStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EJinjaStatement_1=ruleEJinjaStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EJinjaStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:11853:3: ( (lv_boolean_passed_2_0= ruleEBooleanAnsible ) )
                    {
                    // InternalAnsibleDslParser.g:11853:3: ( (lv_boolean_passed_2_0= ruleEBooleanAnsible ) )
                    // InternalAnsibleDslParser.g:11854:4: (lv_boolean_passed_2_0= ruleEBooleanAnsible )
                    {
                    // InternalAnsibleDslParser.g:11854:4: (lv_boolean_passed_2_0= ruleEBooleanAnsible )
                    // InternalAnsibleDslParser.g:11855:5: lv_boolean_passed_2_0= ruleEBooleanAnsible
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEBooleanPassedAccess().getBoolean_passedEBooleanAnsibleParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_boolean_passed_2_0=ruleEBooleanAnsible();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEBooleanPassedRule());
                      					}
                      					set(
                      						current,
                      						"boolean_passed",
                      						lv_boolean_passed_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.EBooleanAnsible");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:11873:3: ( (lv_boolean_passed_null_3_0= RULE_NULL ) )
                    {
                    // InternalAnsibleDslParser.g:11873:3: ( (lv_boolean_passed_null_3_0= RULE_NULL ) )
                    // InternalAnsibleDslParser.g:11874:4: (lv_boolean_passed_null_3_0= RULE_NULL )
                    {
                    // InternalAnsibleDslParser.g:11874:4: (lv_boolean_passed_null_3_0= RULE_NULL )
                    // InternalAnsibleDslParser.g:11875:5: lv_boolean_passed_null_3_0= RULE_NULL
                    {
                    lv_boolean_passed_null_3_0=(Token)match(input,RULE_NULL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_boolean_passed_null_3_0, grammarAccess.getEBooleanPassedAccess().getBoolean_passed_nullNULLTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEBooleanPassedRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"boolean_passed_null",
                      						lv_boolean_passed_null_3_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.NULL");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEBooleanPassed"


    // $ANTLR start "entryRuleEBooleanAnsible"
    // InternalAnsibleDslParser.g:11895:1: entryRuleEBooleanAnsible returns [EObject current=null] : iv_ruleEBooleanAnsible= ruleEBooleanAnsible EOF ;
    public final EObject entryRuleEBooleanAnsible() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEBooleanAnsible = null;


        try {
            // InternalAnsibleDslParser.g:11895:56: (iv_ruleEBooleanAnsible= ruleEBooleanAnsible EOF )
            // InternalAnsibleDslParser.g:11896:2: iv_ruleEBooleanAnsible= ruleEBooleanAnsible EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEBooleanAnsibleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEBooleanAnsible=ruleEBooleanAnsible();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEBooleanAnsible; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEBooleanAnsible"


    // $ANTLR start "ruleEBooleanAnsible"
    // InternalAnsibleDslParser.g:11902:1: ruleEBooleanAnsible returns [EObject current=null] : ( ( (lv_boolean_ansible_0_0= RULE_BOOLEAN ) ) | ( (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE ) ) ) ;
    public final EObject ruleEBooleanAnsible() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_ansible_0_0=null;
        Token lv_boolean_ansible_1_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11908:2: ( ( ( (lv_boolean_ansible_0_0= RULE_BOOLEAN ) ) | ( (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE ) ) ) )
            // InternalAnsibleDslParser.g:11909:2: ( ( (lv_boolean_ansible_0_0= RULE_BOOLEAN ) ) | ( (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE ) ) )
            {
            // InternalAnsibleDslParser.g:11909:2: ( ( (lv_boolean_ansible_0_0= RULE_BOOLEAN ) ) | ( (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE ) ) )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==RULE_BOOLEAN) ) {
                alt146=1;
            }
            else if ( (LA146_0==RULE_BOOLEAN_ONLY_ANSIBLE) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalAnsibleDslParser.g:11910:3: ( (lv_boolean_ansible_0_0= RULE_BOOLEAN ) )
                    {
                    // InternalAnsibleDslParser.g:11910:3: ( (lv_boolean_ansible_0_0= RULE_BOOLEAN ) )
                    // InternalAnsibleDslParser.g:11911:4: (lv_boolean_ansible_0_0= RULE_BOOLEAN )
                    {
                    // InternalAnsibleDslParser.g:11911:4: (lv_boolean_ansible_0_0= RULE_BOOLEAN )
                    // InternalAnsibleDslParser.g:11912:5: lv_boolean_ansible_0_0= RULE_BOOLEAN
                    {
                    lv_boolean_ansible_0_0=(Token)match(input,RULE_BOOLEAN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_boolean_ansible_0_0, grammarAccess.getEBooleanAnsibleAccess().getBoolean_ansibleBOOLEANTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEBooleanAnsibleRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"boolean_ansible",
                      						lv_boolean_ansible_0_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.BOOLEAN");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11929:3: ( (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE ) )
                    {
                    // InternalAnsibleDslParser.g:11929:3: ( (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE ) )
                    // InternalAnsibleDslParser.g:11930:4: (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE )
                    {
                    // InternalAnsibleDslParser.g:11930:4: (lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE )
                    // InternalAnsibleDslParser.g:11931:5: lv_boolean_ansible_1_0= RULE_BOOLEAN_ONLY_ANSIBLE
                    {
                    lv_boolean_ansible_1_0=(Token)match(input,RULE_BOOLEAN_ONLY_ANSIBLE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_boolean_ansible_1_0, grammarAccess.getEBooleanAnsibleAccess().getBoolean_ansibleBOOLEAN_ONLY_ANSIBLETerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEBooleanAnsibleRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"boolean_ansible",
                      						lv_boolean_ansible_1_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.BOOLEAN_ONLY_ANSIBLE");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEBooleanAnsible"


    // $ANTLR start "entryRuleENumber"
    // InternalAnsibleDslParser.g:11951:1: entryRuleENumber returns [EObject current=null] : iv_ruleENumber= ruleENumber EOF ;
    public final EObject entryRuleENumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleENumber = null;


        try {
            // InternalAnsibleDslParser.g:11951:48: (iv_ruleENumber= ruleENumber EOF )
            // InternalAnsibleDslParser.g:11952:2: iv_ruleENumber= ruleENumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getENumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleENumber=ruleENumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleENumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleENumber"


    // $ANTLR start "ruleENumber"
    // InternalAnsibleDslParser.g:11958:1: ruleENumber returns [EObject current=null] : ( ( (lv_number_0_0= RULE_OCTAL_NUMBER ) ) | ( (lv_number_1_0= RULE_HEXADECIMAL_NUMBER ) ) | ( (lv_number_2_0= RULE_SIMPLE_NUMBER ) ) | ( (lv_number_3_0= RULE_EXPONENTIAL_NUMBER ) ) | ( (lv_number_4_0= RULE_INTEGER ) ) ) ;
    public final EObject ruleENumber() throws RecognitionException {
        EObject current = null;

        Token lv_number_0_0=null;
        Token lv_number_1_0=null;
        Token lv_number_2_0=null;
        Token lv_number_3_0=null;
        Token lv_number_4_0=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:11964:2: ( ( ( (lv_number_0_0= RULE_OCTAL_NUMBER ) ) | ( (lv_number_1_0= RULE_HEXADECIMAL_NUMBER ) ) | ( (lv_number_2_0= RULE_SIMPLE_NUMBER ) ) | ( (lv_number_3_0= RULE_EXPONENTIAL_NUMBER ) ) | ( (lv_number_4_0= RULE_INTEGER ) ) ) )
            // InternalAnsibleDslParser.g:11965:2: ( ( (lv_number_0_0= RULE_OCTAL_NUMBER ) ) | ( (lv_number_1_0= RULE_HEXADECIMAL_NUMBER ) ) | ( (lv_number_2_0= RULE_SIMPLE_NUMBER ) ) | ( (lv_number_3_0= RULE_EXPONENTIAL_NUMBER ) ) | ( (lv_number_4_0= RULE_INTEGER ) ) )
            {
            // InternalAnsibleDslParser.g:11965:2: ( ( (lv_number_0_0= RULE_OCTAL_NUMBER ) ) | ( (lv_number_1_0= RULE_HEXADECIMAL_NUMBER ) ) | ( (lv_number_2_0= RULE_SIMPLE_NUMBER ) ) | ( (lv_number_3_0= RULE_EXPONENTIAL_NUMBER ) ) | ( (lv_number_4_0= RULE_INTEGER ) ) )
            int alt147=5;
            switch ( input.LA(1) ) {
            case RULE_OCTAL_NUMBER:
                {
                alt147=1;
                }
                break;
            case RULE_HEXADECIMAL_NUMBER:
                {
                alt147=2;
                }
                break;
            case RULE_SIMPLE_NUMBER:
                {
                alt147=3;
                }
                break;
            case RULE_EXPONENTIAL_NUMBER:
                {
                alt147=4;
                }
                break;
            case RULE_INTEGER:
                {
                alt147=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }

            switch (alt147) {
                case 1 :
                    // InternalAnsibleDslParser.g:11966:3: ( (lv_number_0_0= RULE_OCTAL_NUMBER ) )
                    {
                    // InternalAnsibleDslParser.g:11966:3: ( (lv_number_0_0= RULE_OCTAL_NUMBER ) )
                    // InternalAnsibleDslParser.g:11967:4: (lv_number_0_0= RULE_OCTAL_NUMBER )
                    {
                    // InternalAnsibleDslParser.g:11967:4: (lv_number_0_0= RULE_OCTAL_NUMBER )
                    // InternalAnsibleDslParser.g:11968:5: lv_number_0_0= RULE_OCTAL_NUMBER
                    {
                    lv_number_0_0=(Token)match(input,RULE_OCTAL_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_number_0_0, grammarAccess.getENumberAccess().getNumberOCTAL_NUMBERTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getENumberRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"number",
                      						lv_number_0_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.OCTAL_NUMBER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsibleDslParser.g:11985:3: ( (lv_number_1_0= RULE_HEXADECIMAL_NUMBER ) )
                    {
                    // InternalAnsibleDslParser.g:11985:3: ( (lv_number_1_0= RULE_HEXADECIMAL_NUMBER ) )
                    // InternalAnsibleDslParser.g:11986:4: (lv_number_1_0= RULE_HEXADECIMAL_NUMBER )
                    {
                    // InternalAnsibleDslParser.g:11986:4: (lv_number_1_0= RULE_HEXADECIMAL_NUMBER )
                    // InternalAnsibleDslParser.g:11987:5: lv_number_1_0= RULE_HEXADECIMAL_NUMBER
                    {
                    lv_number_1_0=(Token)match(input,RULE_HEXADECIMAL_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_number_1_0, grammarAccess.getENumberAccess().getNumberHEXADECIMAL_NUMBERTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getENumberRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"number",
                      						lv_number_1_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.HEXADECIMAL_NUMBER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsibleDslParser.g:12004:3: ( (lv_number_2_0= RULE_SIMPLE_NUMBER ) )
                    {
                    // InternalAnsibleDslParser.g:12004:3: ( (lv_number_2_0= RULE_SIMPLE_NUMBER ) )
                    // InternalAnsibleDslParser.g:12005:4: (lv_number_2_0= RULE_SIMPLE_NUMBER )
                    {
                    // InternalAnsibleDslParser.g:12005:4: (lv_number_2_0= RULE_SIMPLE_NUMBER )
                    // InternalAnsibleDslParser.g:12006:5: lv_number_2_0= RULE_SIMPLE_NUMBER
                    {
                    lv_number_2_0=(Token)match(input,RULE_SIMPLE_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_number_2_0, grammarAccess.getENumberAccess().getNumberSIMPLE_NUMBERTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getENumberRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"number",
                      						lv_number_2_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.SIMPLE_NUMBER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsibleDslParser.g:12023:3: ( (lv_number_3_0= RULE_EXPONENTIAL_NUMBER ) )
                    {
                    // InternalAnsibleDslParser.g:12023:3: ( (lv_number_3_0= RULE_EXPONENTIAL_NUMBER ) )
                    // InternalAnsibleDslParser.g:12024:4: (lv_number_3_0= RULE_EXPONENTIAL_NUMBER )
                    {
                    // InternalAnsibleDslParser.g:12024:4: (lv_number_3_0= RULE_EXPONENTIAL_NUMBER )
                    // InternalAnsibleDslParser.g:12025:5: lv_number_3_0= RULE_EXPONENTIAL_NUMBER
                    {
                    lv_number_3_0=(Token)match(input,RULE_EXPONENTIAL_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_number_3_0, grammarAccess.getENumberAccess().getNumberEXPONENTIAL_NUMBERTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getENumberRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.EXPONENTIAL_NUMBER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsibleDslParser.g:12042:3: ( (lv_number_4_0= RULE_INTEGER ) )
                    {
                    // InternalAnsibleDslParser.g:12042:3: ( (lv_number_4_0= RULE_INTEGER ) )
                    // InternalAnsibleDslParser.g:12043:4: (lv_number_4_0= RULE_INTEGER )
                    {
                    // InternalAnsibleDslParser.g:12043:4: (lv_number_4_0= RULE_INTEGER )
                    // InternalAnsibleDslParser.g:12044:5: lv_number_4_0= RULE_INTEGER
                    {
                    lv_number_4_0=(Token)match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_number_4_0, grammarAccess.getENumberAccess().getNumberINTEGERTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getENumberRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"number",
                      						lv_number_4_0,
                      						"org.sodalite.sdl.ansible.AnsibleDsl.INTEGER");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleENumber"


    // $ANTLR start "entryRuleQUALIFIED_NAME"
    // InternalAnsibleDslParser.g:12064:1: entryRuleQUALIFIED_NAME returns [String current=null] : iv_ruleQUALIFIED_NAME= ruleQUALIFIED_NAME EOF ;
    public final String entryRuleQUALIFIED_NAME() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQUALIFIED_NAME = null;


        try {
            // InternalAnsibleDslParser.g:12064:54: (iv_ruleQUALIFIED_NAME= ruleQUALIFIED_NAME EOF )
            // InternalAnsibleDslParser.g:12065:2: iv_ruleQUALIFIED_NAME= ruleQUALIFIED_NAME EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQUALIFIED_NAMERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQUALIFIED_NAME=ruleQUALIFIED_NAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQUALIFIED_NAME.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQUALIFIED_NAME"


    // $ANTLR start "ruleQUALIFIED_NAME"
    // InternalAnsibleDslParser.g:12071:1: ruleQUALIFIED_NAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )+ ) ;
    public final AntlrDatatypeRuleToken ruleQUALIFIED_NAME() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;


        	enterRule();

        try {
            // InternalAnsibleDslParser.g:12077:2: ( (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )+ ) )
            // InternalAnsibleDslParser.g:12078:2: (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )+ )
            {
            // InternalAnsibleDslParser.g:12078:2: (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )+ )
            // InternalAnsibleDslParser.g:12079:3: this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )+
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalAnsibleDslParser.g:12086:3: (kw= FullStop this_ID_2= RULE_ID )+
            int cnt148=0;
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==FullStop) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalAnsibleDslParser.g:12087:4: kw= FullStop this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,FullStop,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_2, grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt148 >= 1 ) break loop148;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(148, input);
                        throw eee;
                }
                cnt148++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQUALIFIED_NAME"

    // $ANTLR start synpred1_InternalAnsibleDslParser
    public final void synpred1_InternalAnsibleDslParser_fragment() throws RecognitionException {   
        // InternalAnsibleDslParser.g:7474:4: ( ruleEStringPassed )
        // InternalAnsibleDslParser.g:7474:5: ruleEStringPassed
        {
        pushFollow(FOLLOW_2);
        ruleEStringPassed();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalAnsibleDslParser

    // Delegated rules

    public final boolean synpred1_InternalAnsibleDslParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalAnsibleDslParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA13 dfa13 = new DFA13(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA121 dfa121 = new DFA121(this);
    static final String dfa_1s = "\32\uffff";
    static final String dfa_2s = "\1\4\31\uffff";
    static final String dfa_3s = "\1\u00a5\31\uffff";
    static final String dfa_4s = "\1\uffff\1\31\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30";
    static final String dfa_5s = "\1\0\31\uffff}>";
    static final String[] dfa_6s = {
            "\1\24\1\uffff\1\4\5\uffff\1\16\3\uffff\1\26\1\uffff\1\6\3\uffff\1\11\3\uffff\1\5\1\uffff\1\17\1\20\1\23\3\uffff\1\14\16\uffff\1\13\1\uffff\1\12\2\uffff\1\22\6\uffff\1\30\1\27\1\21\6\uffff\1\2\1\25\2\uffff\1\10\2\uffff\1\31\15\uffff\1\7\4\uffff\1\3\16\uffff\1\15\65\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 630:6: ( ({...}? => ( ({...}? => (otherlv_4= Play_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Hosts ( (lv_hosts_7_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_8_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_9_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_10_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= No_log ( (lv_no_log_12_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Debugger ( (lv_debugger_14_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Module_defaults ( (lv_module_defaults_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Environment ( (lv_environment_18_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Collections ( (lv_collections_20_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Tags_attribute ( (lv_tags_22_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Vars this_BEGIN_24= RULE_BEGIN ( (lv_variable_declarations_25_0= ruleEVariableDeclaration ) )+ this_END_26= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_play_exe_settings_27_0= ruleEPlayExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEPlayErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_facts_settings_29_0= ruleEFactsSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Vars_files ( (lv_vars_files_31_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Vars_prompt ( (lv_vars_prompt_33_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= Force_handlers ( (lv_force_handlers_35_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_external_file_inclusion_36_0= ruleEExternalFileInclusion ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Pre_tasks this_BEGIN_38= RULE_BEGIN ( (lv_pre_tasks_list_39_0= ruleEBlockTask ) )+ this_END_40= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roles_inclusions_41_0= ruleERoleInclusions ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Tasks_list this_BEGIN_43= RULE_BEGIN ( (lv_tasks_list_44_0= ruleEBlockTask ) )+ this_END_45= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_46= Post_tasks this_BEGIN_47= RULE_BEGIN ( (lv_post_tasks_list_48_0= ruleEBlockTask ) )+ this_END_49= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_50= Handlers this_BEGIN_51= RULE_BEGIN ( (lv_handlers_52_0= ruleEHandler ) )+ this_END_53= RULE_END ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA13_0 = input.LA(1);

                         
                        int index13_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA13_0==RULE_END) ) {s = 1;}

                        else if ( LA13_0 == Play_name && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA13_0 == Hosts && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA13_0 == Privilege_escalation && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 2) ) {s = 4;}

                        else if ( LA13_0 == Validation_mode && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 3) ) {s = 5;}

                        else if ( LA13_0 == Connection_info && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 4) ) {s = 6;}

                        else if ( LA13_0 == No_log && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 5) ) {s = 7;}

                        else if ( LA13_0 == Debugger && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 6) ) {s = 8;}

                        else if ( LA13_0 == Module_defaults && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 7) ) {s = 9;}

                        else if ( LA13_0 == Environment && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 8) ) {s = 10;}

                        else if ( LA13_0 == Collections && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 9) ) {s = 11;}

                        else if ( LA13_0 == Tags_attribute && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 10) ) {s = 12;}

                        else if ( LA13_0 == Vars && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 11) ) {s = 13;}

                        else if ( LA13_0 == Play_exe_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 12) ) {s = 14;}

                        else if ( LA13_0 == Error_handling && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 13) ) {s = 15;}

                        else if ( LA13_0 == Facts_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 14) ) {s = 16;}

                        else if ( LA13_0 == Vars_files && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 15) ) {s = 17;}

                        else if ( LA13_0 == Vars_prompt && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 16) ) {s = 18;}

                        else if ( LA13_0 == Force_handlers && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 17) ) {s = 19;}

                        else if ( LA13_0 == External_file_inclusion && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 18) ) {s = 20;}

                        else if ( LA13_0 == Pre_tasks && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 19) ) {s = 21;}

                        else if ( LA13_0 == Roles_inclusions && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 20) ) {s = 22;}

                        else if ( LA13_0 == Tasks_list && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 21) ) {s = 23;}

                        else if ( LA13_0 == Post_tasks && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 22) ) {s = 24;}

                        else if ( LA13_0 == Handlers && getUnorderedGroupHelper().canSelect(grammarAccess.getEPlayAccess().getUnorderedGroup_3(), 23) ) {s = 25;}

                         
                        input.seek(index13_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 13, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\24\uffff";
    static final String dfa_8s = "\1\6\23\uffff";
    static final String dfa_9s = "\1\u00a5\23\uffff";
    static final String dfa_10s = "\1\uffff\1\23\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22";
    static final String dfa_11s = "\1\0\23\uffff}>";
    static final String[] dfa_12s = {
            "\1\3\13\uffff\1\5\3\uffff\1\10\3\uffff\1\4\1\uffff\1\20\5\uffff\1\13\5\uffff\1\23\2\uffff\1\15\3\uffff\1\22\1\uffff\1\12\1\uffff\1\11\4\uffff\1\2\2\uffff\1\16\16\uffff\1\7\20\uffff\1\6\11\uffff\1\21\11\uffff\1\14\1\17\64\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()+ loopback of 1483:6: ( ({...}? => ( ({...}? => (otherlv_3= Block_name ( (lv_name_4_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Tasks this_BEGIN_30= RULE_BEGIN ( (lv_tasks_31_0= ruleETask ) )+ this_END_32= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Rescue_tasks this_BEGIN_34= RULE_BEGIN ( (lv_rescue_tasks_35_0= ruleETask ) )+ this_END_36= RULE_END ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= Always_tasks this_BEGIN_38= RULE_BEGIN ( (lv_always_tasks_39_0= ruleETask ) )+ this_END_40= RULE_END ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_0 = input.LA(1);

                         
                        int index18_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA18_0==RULE_END) ) {s = 1;}

                        else if ( LA18_0 == Block_name && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 0) ) {s = 2;}

                        else if ( LA18_0 == Privilege_escalation && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 1) ) {s = 3;}

                        else if ( LA18_0 == Validation_mode && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 2) ) {s = 4;}

                        else if ( LA18_0 == Connection_info && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 3) ) {s = 5;}

                        else if ( LA18_0 == No_log && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 4) ) {s = 6;}

                        else if ( LA18_0 == Debugger && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 5) ) {s = 7;}

                        else if ( LA18_0 == Module_defaults && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 6) ) {s = 8;}

                        else if ( LA18_0 == Environment && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 7) ) {s = 9;}

                        else if ( LA18_0 == Collections && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 8) ) {s = 10;}

                        else if ( LA18_0 == Tags_attribute && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 9) ) {s = 11;}

                        else if ( LA18_0 == Vars && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 10) ) {s = 12;}

                        else if ( LA18_0 == Exe_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 11) ) {s = 13;}

                        else if ( LA18_0 == Delegation && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 12) ) {s = 14;}

                        else if ( LA18_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 13) ) {s = 15;}

                        else if ( LA18_0 == Error_handling && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 14) ) {s = 16;}

                        else if ( LA18_0 == Tasks && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 15) ) {s = 17;}

                        else if ( LA18_0 == Rescue_tasks && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 16) ) {s = 18;}

                        else if ( LA18_0 == Always_tasks && getUnorderedGroupHelper().canSelect(grammarAccess.getEBlockAccess().getUnorderedGroup_2(), 17) ) {s = 19;}

                         
                        input.seek(index18_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\30\uffff";
    static final String dfa_14s = "\1\5\27\uffff";
    static final String dfa_15s = "\1\u00a5\27\uffff";
    static final String dfa_16s = "\1\uffff\1\27\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26";
    static final String dfa_17s = "\1\0\27\uffff}>";
    static final String[] dfa_18s = {
            "\1\22\1\3\13\uffff\1\5\3\uffff\1\10\3\uffff\1\4\1\uffff\1\20\5\uffff\1\13\10\uffff\1\15\5\uffff\1\12\1\uffff\1\11\7\uffff\1\16\15\uffff\1\2\1\7\4\uffff\1\27\7\uffff\1\21\2\uffff\1\24\1\6\1\25\13\uffff\1\23\2\uffff\1\26\3\uffff\1\14\1\17\64\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "()+ loopback of 2144:6: ( ({...}? => ( ({...}? => (otherlv_4= Task_name ( (lv_name_5_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_0 = input.LA(1);

                         
                        int index21_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA21_0==RULE_END) ) {s = 1;}

                        else if ( LA21_0 == Task_name && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA21_0 == Privilege_escalation && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA21_0 == Validation_mode && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 2) ) {s = 4;}

                        else if ( LA21_0 == Connection_info && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 3) ) {s = 5;}

                        else if ( LA21_0 == No_log && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 4) ) {s = 6;}

                        else if ( LA21_0 == Debugger && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 5) ) {s = 7;}

                        else if ( LA21_0 == Module_defaults && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 6) ) {s = 8;}

                        else if ( LA21_0 == Environment && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 7) ) {s = 9;}

                        else if ( LA21_0 == Collections && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 8) ) {s = 10;}

                        else if ( LA21_0 == Tags_attribute && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 9) ) {s = 11;}

                        else if ( LA21_0 == Vars && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 10) ) {s = 12;}

                        else if ( LA21_0 == Exe_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 11) ) {s = 13;}

                        else if ( LA21_0 == Delegation && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 12) ) {s = 14;}

                        else if ( LA21_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 13) ) {s = 15;}

                        else if ( LA21_0 == Error_handling && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 14) ) {s = 16;}

                        else if ( LA21_0 == Action && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 15) ) {s = 17;}

                        else if ( LA21_0 == Asynchronous_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 16) ) {s = 18;}

                        else if ( LA21_0 == Args && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 17) ) {s = 19;}

                        else if ( LA21_0 == Module && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 18) ) {s = 20;}

                        else if ( LA21_0 == Notify && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 19) ) {s = 21;}

                        else if ( LA21_0 == Loop && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 20) ) {s = 22;}

                        else if ( LA21_0 == Register && getUnorderedGroupHelper().canSelect(grammarAccess.getETaskAccess().getUnorderedGroup_3(), 21) ) {s = 23;}

                         
                        input.seek(index21_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\31\uffff";
    static final String dfa_20s = "\1\5\30\uffff";
    static final String dfa_21s = "\1\u00a5\30\uffff";
    static final String dfa_22s = "\1\uffff\1\30\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27";
    static final String dfa_23s = "\1\0\30\uffff}>";
    static final String[] dfa_24s = {
            "\1\22\1\3\13\uffff\1\5\3\uffff\1\10\3\uffff\1\4\1\uffff\1\20\5\uffff\1\13\10\uffff\1\15\1\uffff\1\2\3\uffff\1\12\1\uffff\1\11\7\uffff\1\16\16\uffff\1\7\4\uffff\1\27\7\uffff\1\21\1\uffff\1\30\1\24\1\6\1\25\13\uffff\1\23\2\uffff\1\26\3\uffff\1\14\1\17\64\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "()+ loopback of 2918:6: ( ({...}? => ( ({...}? => (otherlv_4= Handler_name ( (lv_name_5_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_privilege_escalation_6_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_7_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_8_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= No_log ( (lv_no_log_10_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Debugger ( (lv_debugger_12_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= Module_defaults ( (lv_module_defaults_14_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Environment ( (lv_environment_16_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Collections ( (lv_collections_18_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Tags_attribute ( (lv_tags_20_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Vars this_BEGIN_22= RULE_BEGIN ( (lv_variable_declarations_23_0= ruleEVariableDeclaration ) )+ this_END_24= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_25_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_26_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= When ( (lv_when_expression_28_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_29_0= ruleETaskHandlerErrorHandling ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_30= Action ( (lv_action_31_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_asynchronous_settings_32_0= ruleEAsynchronousSettings ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Args ( (lv_args_34_0= ruleEDictionaryPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_module_35_0= ruleEModuleCall ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= Notify ( (lv_notifiables_37_0= ruleENotifiable ) ) (otherlv_38= Comma ( (lv_notifiables_39_0= ruleENotifiable ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_loop_40_0= ruleELoop ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_register_41_0= ruleERegisterVariable ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Listen ( (otherlv_43= RULE_STRING ) ) (otherlv_44= Comma ( (otherlv_45= RULE_STRING ) ) )* ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_0 = input.LA(1);

                         
                        int index25_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_0==RULE_END) ) {s = 1;}

                        else if ( LA25_0 == Handler_name && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA25_0 == Privilege_escalation && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA25_0 == Validation_mode && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 2) ) {s = 4;}

                        else if ( LA25_0 == Connection_info && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 3) ) {s = 5;}

                        else if ( LA25_0 == No_log && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 4) ) {s = 6;}

                        else if ( LA25_0 == Debugger && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 5) ) {s = 7;}

                        else if ( LA25_0 == Module_defaults && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 6) ) {s = 8;}

                        else if ( LA25_0 == Environment && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 7) ) {s = 9;}

                        else if ( LA25_0 == Collections && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 8) ) {s = 10;}

                        else if ( LA25_0 == Tags_attribute && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 9) ) {s = 11;}

                        else if ( LA25_0 == Vars && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 10) ) {s = 12;}

                        else if ( LA25_0 == Exe_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 11) ) {s = 13;}

                        else if ( LA25_0 == Delegation && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 12) ) {s = 14;}

                        else if ( LA25_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 13) ) {s = 15;}

                        else if ( LA25_0 == Error_handling && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 14) ) {s = 16;}

                        else if ( LA25_0 == Action && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 15) ) {s = 17;}

                        else if ( LA25_0 == Asynchronous_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 16) ) {s = 18;}

                        else if ( LA25_0 == Args && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 17) ) {s = 19;}

                        else if ( LA25_0 == Module && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 18) ) {s = 20;}

                        else if ( LA25_0 == Notify && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 19) ) {s = 21;}

                        else if ( LA25_0 == Loop && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 20) ) {s = 22;}

                        else if ( LA25_0 == Register && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 21) ) {s = 23;}

                        else if ( LA25_0 == Listen && getUnorderedGroupHelper().canSelect(grammarAccess.getEHandlerAccess().getUnorderedGroup_3(), 22) ) {s = 24;}

                         
                        input.seek(index25_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\20\uffff";
    static final String dfa_26s = "\1\6\17\uffff";
    static final String dfa_27s = "\1\u00a5\17\uffff";
    static final String dfa_28s = "\1\uffff\1\17\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16";
    static final String dfa_29s = "\1\0\17\uffff}>";
    static final String[] dfa_30s = {
            "\1\2\13\uffff\1\4\3\uffff\1\7\3\uffff\1\3\1\uffff\1\17\5\uffff\1\12\10\uffff\1\14\5\uffff\1\11\1\uffff\1\10\7\uffff\1\15\16\uffff\1\6\20\uffff\1\5\23\uffff\1\13\1\16\64\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "()* loopback of 4007:7: ( ({...}? => ( ({...}? => ( (lv_privilege_escalation_5_0= ruleEPrivilegeEscalation ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_validation_mode_6_0= ruleEValidationMode ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_connection_7_0= ruleEConnection ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= No_log ( (lv_no_log_9_0= ruleEBooleanPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= Debugger ( (lv_debugger_11_0= ruleEStringPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= Module_defaults ( (lv_module_defaults_13_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= Environment ( (lv_environment_15_0= ruleEValuePassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= Collections ( (lv_collections_17_0= ruleECollectionListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Tags_attribute ( (lv_tags_19_0= ruleEListPassed ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Vars this_BEGIN_21= RULE_BEGIN ( (lv_variable_declarations_22_0= ruleEVariableDeclaration ) )+ this_END_23= RULE_END ) ) ) ) | ({...}? => ( ({...}? => ( (lv_exe_settings_24_0= ruleEExecutionExeSettings ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_delegation_25_0= ruleEDelegation ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= When ( (lv_when_expression_27_0= ruleECondition ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_error_handling_28_0= ruleEBlockAndRoleErrorHandling ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_0 = input.LA(1);

                         
                        int index32_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA32_0==RULE_END) ) {s = 1;}

                        else if ( LA32_0 == Privilege_escalation && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 0) ) {s = 2;}

                        else if ( LA32_0 == Validation_mode && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 1) ) {s = 3;}

                        else if ( LA32_0 == Connection_info && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 2) ) {s = 4;}

                        else if ( LA32_0 == No_log && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 3) ) {s = 5;}

                        else if ( LA32_0 == Debugger && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 4) ) {s = 6;}

                        else if ( LA32_0 == Module_defaults && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 5) ) {s = 7;}

                        else if ( LA32_0 == Environment && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 6) ) {s = 8;}

                        else if ( LA32_0 == Collections && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 7) ) {s = 9;}

                        else if ( LA32_0 == Tags_attribute && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 8) ) {s = 10;}

                        else if ( LA32_0 == Vars && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 9) ) {s = 11;}

                        else if ( LA32_0 == Exe_settings && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 10) ) {s = 12;}

                        else if ( LA32_0 == Delegation && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 11) ) {s = 13;}

                        else if ( LA32_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 12) ) {s = 14;}

                        else if ( LA32_0 == Error_handling && getUnorderedGroupHelper().canSelect(grammarAccess.getERoleInclusionAccess().getUnorderedGroup_2_2(), 13) ) {s = 15;}

                         
                        input.seek(index32_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\16\uffff";
    static final String dfa_32s = "\6\uffff\6\14\2\uffff";
    static final String dfa_33s = "\14\u0090\2\uffff";
    static final String dfa_34s = "\1\u00a2\5\u0090\1\u00a2\5\u0095\2\uffff";
    static final String dfa_35s = "\14\uffff\1\1\1\2";
    static final String dfa_36s = "\16\uffff}>";
    static final String[] dfa_37s = {
            "\1\6\14\uffff\1\1\1\2\1\3\1\4\1\uffff\1\5",
            "\1\6",
            "\1\6",
            "\1\6",
            "\1\6",
            "\1\6",
            "\1\15\4\uffff\1\14\7\uffff\1\7\1\10\1\11\1\12\1\uffff\1\13",
            "\1\15\4\uffff\1\14",
            "\1\15\4\uffff\1\14",
            "\1\15\4\uffff\1\14",
            "\1\15\4\uffff\1\14",
            "\1\15\4\uffff\1\14",
            "",
            ""
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_31;
            this.eof = dfa_32;
            this.min = dfa_33;
            this.max = dfa_34;
            this.accept = dfa_35;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "10441:2: ( ( ( (lv_start_0_0= ruleENumber ) )? ( (lv_colon_1_0= Colon ) ) ( (lv_stop_2_0= ruleENumber ) )? ) | ( ( (lv_start_3_0= ruleENumber ) )? ( (lv_first_colon_4_0= Colon ) ) ( (lv_step_5_0= ruleENumber ) )? ( (lv_second_colon_6_0= Colon ) ) ( (lv_stop_7_0= ruleENumber ) )? ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000001000400000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xE04A000474451050L,0x00008001080024C0L,0x0000002000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000880030L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000E000030L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000005DFED80030L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000100030L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000500030L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002800000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000001004000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000001004000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L,0x0000002000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x090A890414440040L,0x0001802008000400L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x090A890414440040L,0x0001802008000400L,0x0000002000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000A20D00L,0x0040000000001000L,0x0000005DFA500100L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x080A080414440060L,0x000189001C808600L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x080A080414440060L,0x000189001C808600L,0x0000002000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000400030L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x080A080414440060L,0x000189001C808600L,0x0000002000001000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x080A280414440060L,0x000189001E808600L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x080A280414440060L,0x000189001E808600L,0x0000002000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x080A280414440060L,0x000189001E808600L,0x0000002000001000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004800880030L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001000004000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x1000000000008000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004DE0880030L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x080A080414440040L,0x0001800008000400L,0x0000002000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000100000L,0x0000000000100000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0008008000000008L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000A00004802L,0x0000002000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000005E8000030L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000002080000L,0x0000000000200000L,0x0000002000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000A20D00L,0x0040000000001000L,0x0000004DFA500100L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0081021000000000L,0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0200000000000000L,0x0000020000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0420000200000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000420070000L,0x0000002000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000050000L,0x0000002000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000004000002200L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000004000002280L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0010044000002200L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000102080000000L,0x0000000000000001L,0x0000002000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0004000008000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000200040000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000004000000030L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000030L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000100000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000800000030L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001200L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000002L,0x7080000000000000L,0x00000000000A0000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0C00000000000000L,0x000000000000AC80L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000104000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000A20D00L,0x0000000000001000L,0x0000004DFA500000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002801L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000800000001L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000A20D00L,0x0040000000001000L,0x0000004DFA510100L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000005E0000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000005E0010000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004801000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001001000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004800000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000201000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000002000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000A20D00L,0x0040000000001000L,0x0000004DFA700100L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000800000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});

}
