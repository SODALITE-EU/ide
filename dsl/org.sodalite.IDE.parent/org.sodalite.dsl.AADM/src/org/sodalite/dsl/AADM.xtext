/*******************************************************************************
 * Copyright (c) 2019 Atos Spain S.A.
 * This program and the accompanying materials
 * are made available under the terms of the Apache Public License 2.0 (APL2)
 * which accompanies this distribution, and is available at
 * https://apache.org/licenses/LICENSE-2.0
 *
 * Contributors:
 *     Jesús Gorroñogoitia - Design and implementation
 *******************************************************************************/
//grammar org.sodalite.dsl.AADM with org.eclipse.xtext.common.Terminals
grammar org.sodalite.dsl.AADM with org.sodalite.dsl.RM

generate aADM "http://www.sodalite.org/dsl/AADM"
//import "http://www.sodalite.org/dsl/RM" as rm
import "http://www.sodalite.org/dsl/optimization/Optimization" as opt
//import "http://www.eclipse.org/emf/2002/Ecore" as ecore

AADM_Model:
	('description:' description=STRING)? &
	('module:' module=ID) &
	('import:' imports+=ID)* &
	('inputs:'
		BEGIN
		inputs = EInputs
		END)? &
	('node_templates:'
		BEGIN
		nodeTemplates=ENodeTemplates
		END)? &
	('policies:'
		BEGIN
		policies=EPolicies
		END)? &
	('outputs:'
		BEGIN
		outputs = EOutputs
		END)?
;


ENodeTemplates:
	{ENodeTemplates} (nodeTemplates+=ENodeTemplate)*;

ENodeTemplate:
	name = ID ':'
	BEGIN
		node=ENodeTemplateBody
	END
;

ENodeTemplateBody:
	('type:' type=EPREFIX_TYPE) &
	('description:' description=STRING)? &
	('optimization:' optimization=[opt::Optimization_Model|QUALIFIED_NAME])? &
	('properties:'
	BEGIN
		properties=EPropertyAssignments
	END)? &
	('attributes:'
	BEGIN
		attributes=EAttributeAssignments
	END)? &
	('requirements:'
	BEGIN
		requirements=ERequirementAssignments
	END)? &
	('capabilities:'
	BEGIN
		capabilities=ECapabilityAssignments
	END)? &
	('artifacts:'
	BEGIN
		artifacts=EArtifacts
	END)?
;

ERequirementAssignments:
	{ERequirementAssignments} (requirements+=ERequirementAssignment)*;

ERequirementAssignment:
	name = ID ':'
	BEGIN
		('node:' node=EPREFIX_ID)
	END;

ECapabilityAssignments:
	{ECapabilityAssignments} (capabilities+=ECapabilityAssignment)*;

ECapabilityAssignment:
	name = ID ':'
	BEGIN
		('properties:'
		BEGIN
			properties=EPropertyAssignments
		END)? 
	END;

EAttributeAssignments:
	{EAttributeAssignments} (attributes+=EAttributeAssignment)*;

EAttributeAssignment:
	name = ID ':' value=EAssignmentValue;

EPolicies:
	{EPolicies} (policies+=EPolicyDefinition)*;
	
EPolicyDefinition:
	name = ID ':'
	BEGIN
		policy=EPolicyDefinitionBody
	END
;

EPolicyDefinitionBody:
	('type:' type=EPREFIX_TYPE) &
	('description:' description=STRING)? &
	('properties:'
	BEGIN
		properties=EPropertyAssignments
	END)? &
	('targets:' '[' targets=ETarget ']')? &
	('triggers:'
	BEGIN
		triggers=ETriggerDefinitions
	END)?
;

ETriggerDefinitions:
	{ETriggerDefinitions} (triggers+=ETriggerDefinition)*;

ETarget:
	target+=EPREFIX_ID (',' target+=EPREFIX_ID)*;

