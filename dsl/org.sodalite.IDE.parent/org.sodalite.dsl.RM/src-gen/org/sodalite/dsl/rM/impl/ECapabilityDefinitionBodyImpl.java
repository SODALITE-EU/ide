/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.rM.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.sodalite.dsl.rM.EAttributes;
import org.sodalite.dsl.rM.ECapabilityDefinitionBody;
import org.sodalite.dsl.rM.ECapabilityType;
import org.sodalite.dsl.rM.EProperties;
import org.sodalite.dsl.rM.EValidSourceType;
import org.sodalite.dsl.rM.RMPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ECapability Definition Body</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.dsl.rM.impl.ECapabilityDefinitionBodyImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.sodalite.dsl.rM.impl.ECapabilityDefinitionBodyImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.sodalite.dsl.rM.impl.ECapabilityDefinitionBodyImpl#getProperties <em>Properties</em>}</li>
 *   <li>{@link org.sodalite.dsl.rM.impl.ECapabilityDefinitionBodyImpl#getAttributes <em>Attributes</em>}</li>
 *   <li>{@link org.sodalite.dsl.rM.impl.ECapabilityDefinitionBodyImpl#getValid_source_types <em>Valid source types</em>}</li>
 *   <li>{@link org.sodalite.dsl.rM.impl.ECapabilityDefinitionBodyImpl#getOccurrences_start <em>Occurrences start</em>}</li>
 *   <li>{@link org.sodalite.dsl.rM.impl.ECapabilityDefinitionBodyImpl#getOccurrences_end <em>Occurrences end</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ECapabilityDefinitionBodyImpl extends MinimalEObjectImpl.Container implements ECapabilityDefinitionBody
{
  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected ECapabilityType type;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EProperties properties;

  /**
   * The cached value of the '{@link #getAttributes() <em>Attributes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributes()
   * @generated
   * @ordered
   */
  protected EAttributes attributes;

  /**
   * The cached value of the '{@link #getValid_source_types() <em>Valid source types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValid_source_types()
   * @generated
   * @ordered
   */
  protected EList<EValidSourceType> valid_source_types;

  /**
   * The default value of the '{@link #getOccurrences_start() <em>Occurrences start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOccurrences_start()
   * @generated
   * @ordered
   */
  protected static final String OCCURRENCES_START_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOccurrences_start() <em>Occurrences start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOccurrences_start()
   * @generated
   * @ordered
   */
  protected String occurrences_start = OCCURRENCES_START_EDEFAULT;

  /**
   * The default value of the '{@link #getOccurrences_end() <em>Occurrences end</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOccurrences_end()
   * @generated
   * @ordered
   */
  protected static final String OCCURRENCES_END_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOccurrences_end() <em>Occurrences end</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOccurrences_end()
   * @generated
   * @ordered
   */
  protected String occurrences_end = OCCURRENCES_END_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ECapabilityDefinitionBodyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RMPackage.Literals.ECAPABILITY_DEFINITION_BODY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ECapabilityType getType()
  {
    if (type != null && type.eIsProxy())
    {
      InternalEObject oldType = (InternalEObject)type;
      type = (ECapabilityType)eResolveProxy(oldType);
      if (type != oldType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RMPackage.ECAPABILITY_DEFINITION_BODY__TYPE, oldType, type));
      }
    }
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ECapabilityType basicGetType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(ECapabilityType newType)
  {
    ECapabilityType oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EProperties getProperties()
  {
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProperties(EProperties newProperties, NotificationChain msgs)
  {
    EProperties oldProperties = properties;
    properties = newProperties;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES, oldProperties, newProperties);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProperties(EProperties newProperties)
  {
    if (newProperties != properties)
    {
      NotificationChain msgs = null;
      if (properties != null)
        msgs = ((InternalEObject)properties).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES, null, msgs);
      if (newProperties != null)
        msgs = ((InternalEObject)newProperties).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES, null, msgs);
      msgs = basicSetProperties(newProperties, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES, newProperties, newProperties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttributes getAttributes()
  {
    return attributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributes(EAttributes newAttributes, NotificationChain msgs)
  {
    EAttributes oldAttributes = attributes;
    attributes = newAttributes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES, oldAttributes, newAttributes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributes(EAttributes newAttributes)
  {
    if (newAttributes != attributes)
    {
      NotificationChain msgs = null;
      if (attributes != null)
        msgs = ((InternalEObject)attributes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES, null, msgs);
      if (newAttributes != null)
        msgs = ((InternalEObject)newAttributes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES, null, msgs);
      msgs = basicSetAttributes(newAttributes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES, newAttributes, newAttributes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EValidSourceType> getValid_source_types()
  {
    if (valid_source_types == null)
    {
      valid_source_types = new EObjectContainmentEList<EValidSourceType>(EValidSourceType.class, this, RMPackage.ECAPABILITY_DEFINITION_BODY__VALID_SOURCE_TYPES);
    }
    return valid_source_types;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOccurrences_start()
  {
    return occurrences_start;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOccurrences_start(String newOccurrences_start)
  {
    String oldOccurrences_start = occurrences_start;
    occurrences_start = newOccurrences_start;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_START, oldOccurrences_start, occurrences_start));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOccurrences_end()
  {
    return occurrences_end;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOccurrences_end(String newOccurrences_end)
  {
    String oldOccurrences_end = occurrences_end;
    occurrences_end = newOccurrences_end;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_END, oldOccurrences_end, occurrences_end));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES:
        return basicSetProperties(null, msgs);
      case RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES:
        return basicSetAttributes(null, msgs);
      case RMPackage.ECAPABILITY_DEFINITION_BODY__VALID_SOURCE_TYPES:
        return ((InternalEList<?>)getValid_source_types()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RMPackage.ECAPABILITY_DEFINITION_BODY__TYPE:
        if (resolve) return getType();
        return basicGetType();
      case RMPackage.ECAPABILITY_DEFINITION_BODY__DESCRIPTION:
        return getDescription();
      case RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES:
        return getProperties();
      case RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES:
        return getAttributes();
      case RMPackage.ECAPABILITY_DEFINITION_BODY__VALID_SOURCE_TYPES:
        return getValid_source_types();
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_START:
        return getOccurrences_start();
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_END:
        return getOccurrences_end();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RMPackage.ECAPABILITY_DEFINITION_BODY__TYPE:
        setType((ECapabilityType)newValue);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES:
        setProperties((EProperties)newValue);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES:
        setAttributes((EAttributes)newValue);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__VALID_SOURCE_TYPES:
        getValid_source_types().clear();
        getValid_source_types().addAll((Collection<? extends EValidSourceType>)newValue);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_START:
        setOccurrences_start((String)newValue);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_END:
        setOccurrences_end((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RMPackage.ECAPABILITY_DEFINITION_BODY__TYPE:
        setType((ECapabilityType)null);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES:
        setProperties((EProperties)null);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES:
        setAttributes((EAttributes)null);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__VALID_SOURCE_TYPES:
        getValid_source_types().clear();
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_START:
        setOccurrences_start(OCCURRENCES_START_EDEFAULT);
        return;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_END:
        setOccurrences_end(OCCURRENCES_END_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RMPackage.ECAPABILITY_DEFINITION_BODY__TYPE:
        return type != null;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case RMPackage.ECAPABILITY_DEFINITION_BODY__PROPERTIES:
        return properties != null;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__ATTRIBUTES:
        return attributes != null;
      case RMPackage.ECAPABILITY_DEFINITION_BODY__VALID_SOURCE_TYPES:
        return valid_source_types != null && !valid_source_types.isEmpty();
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_START:
        return OCCURRENCES_START_EDEFAULT == null ? occurrences_start != null : !OCCURRENCES_START_EDEFAULT.equals(occurrences_start);
      case RMPackage.ECAPABILITY_DEFINITION_BODY__OCCURRENCES_END:
        return OCCURRENCES_END_EDEFAULT == null ? occurrences_end != null : !OCCURRENCES_END_EDEFAULT.equals(occurrences_end);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (description: ");
    result.append(description);
    result.append(", occurrences_start: ");
    result.append(occurrences_start);
    result.append(", occurrences_end: ");
    result.append(occurrences_end);
    result.append(')');
    return result.toString();
  }

} //ECapabilityDefinitionBodyImpl
