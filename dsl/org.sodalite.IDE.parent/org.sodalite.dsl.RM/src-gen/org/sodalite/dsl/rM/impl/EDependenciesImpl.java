/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.rM.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.sodalite.dsl.rM.EDependencies;
import org.sodalite.dsl.rM.EDependencyFiles;
import org.sodalite.dsl.rM.RMPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>EDependencies</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.dsl.rM.impl.EDependenciesImpl#getFiles <em>Files</em>}</li>
 *   <li>{@link org.sodalite.dsl.rM.impl.EDependenciesImpl#getRelative_path <em>Relative path</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EDependenciesImpl extends MinimalEObjectImpl.Container implements EDependencies
{
  /**
   * The cached value of the '{@link #getFiles() <em>Files</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFiles()
   * @generated
   * @ordered
   */
  protected EDependencyFiles files;

  /**
   * The default value of the '{@link #getRelative_path() <em>Relative path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelative_path()
   * @generated
   * @ordered
   */
  protected static final String RELATIVE_PATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRelative_path() <em>Relative path</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelative_path()
   * @generated
   * @ordered
   */
  protected String relative_path = RELATIVE_PATH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EDependenciesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RMPackage.Literals.EDEPENDENCIES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EDependencyFiles getFiles()
  {
    return files;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFiles(EDependencyFiles newFiles, NotificationChain msgs)
  {
    EDependencyFiles oldFiles = files;
    files = newFiles;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RMPackage.EDEPENDENCIES__FILES, oldFiles, newFiles);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFiles(EDependencyFiles newFiles)
  {
    if (newFiles != files)
    {
      NotificationChain msgs = null;
      if (files != null)
        msgs = ((InternalEObject)files).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RMPackage.EDEPENDENCIES__FILES, null, msgs);
      if (newFiles != null)
        msgs = ((InternalEObject)newFiles).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RMPackage.EDEPENDENCIES__FILES, null, msgs);
      msgs = basicSetFiles(newFiles, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.EDEPENDENCIES__FILES, newFiles, newFiles));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRelative_path()
  {
    return relative_path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelative_path(String newRelative_path)
  {
    String oldRelative_path = relative_path;
    relative_path = newRelative_path;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RMPackage.EDEPENDENCIES__RELATIVE_PATH, oldRelative_path, relative_path));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RMPackage.EDEPENDENCIES__FILES:
        return basicSetFiles(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RMPackage.EDEPENDENCIES__FILES:
        return getFiles();
      case RMPackage.EDEPENDENCIES__RELATIVE_PATH:
        return getRelative_path();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RMPackage.EDEPENDENCIES__FILES:
        setFiles((EDependencyFiles)newValue);
        return;
      case RMPackage.EDEPENDENCIES__RELATIVE_PATH:
        setRelative_path((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RMPackage.EDEPENDENCIES__FILES:
        setFiles((EDependencyFiles)null);
        return;
      case RMPackage.EDEPENDENCIES__RELATIVE_PATH:
        setRelative_path(RELATIVE_PATH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RMPackage.EDEPENDENCIES__FILES:
        return files != null;
      case RMPackage.EDEPENDENCIES__RELATIVE_PATH:
        return RELATIVE_PATH_EDEFAULT == null ? relative_path != null : !RELATIVE_PATH_EDEFAULT.equals(relative_path);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (relative_path: ");
    result.append(relative_path);
    result.append(')');
    return result.toString();
  }

} //EDependenciesImpl
