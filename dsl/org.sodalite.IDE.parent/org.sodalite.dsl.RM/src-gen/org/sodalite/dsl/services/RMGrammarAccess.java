/*
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RMGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RM_ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.RM_Model");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cData_typesKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cDataTypesAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDataTypesEDataTypesParserRuleCall_0_2_0 = (RuleCall)cDataTypesAssignment_0_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cArtifact_typesKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cArtifactTypesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cArtifactTypesEArtifactTypesParserRuleCall_1_2_0 = (RuleCall)cArtifactTypesAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cCapability_typesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cCapabilityTypesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cCapabilityTypesECapabilityTypesParserRuleCall_2_2_0 = (RuleCall)cCapabilityTypesAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cInterface_typesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cInterfaceTypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cInterfaceTypesEInterfaceTypesParserRuleCall_3_2_0 = (RuleCall)cInterfaceTypesAssignment_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cRelationship_typesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cRelationshipTypesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRelationshipTypesERelationshipTypesParserRuleCall_4_2_0 = (RuleCall)cRelationshipTypesAssignment_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cNode_typesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cNodeTypesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cNodeTypesENodeTypesParserRuleCall_5_2_0 = (RuleCall)cNodeTypesAssignment_5_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Keyword cPolicy_typesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cPolicyTypesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cPolicyTypesEPolicyTypesParserRuleCall_6_2_0 = (RuleCall)cPolicyTypesAssignment_6_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
		
		//RM_Model:
		//	('data_types:'
		//	BEGIN
		//	dataTypes=EDataTypes
		//	END)? & ('artifact_types:'
		//	BEGIN
		//	artifactTypes=EArtifactTypes
		//	END)? & ('capability_types:'
		//	BEGIN
		//	capabilityTypes=ECapabilityTypes
		//	END)? & ('interface_types:'
		//	BEGIN
		//	interfaceTypes=EInterfaceTypes
		//	END)? & ('relationship_types:'
		//	BEGIN
		//	relationshipTypes=ERelationshipTypes
		//	END)? & ('node_types:'
		//	BEGIN
		//	nodeTypes=ENodeTypes
		//	END)? & ('policy_types:'
		//	BEGIN
		//	policyTypes=EPolicyTypes
		//	END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//('data_types:' BEGIN dataTypes=EDataTypes END)? & ('artifact_types:' BEGIN artifactTypes=EArtifactTypes END)? &
		//('capability_types:' BEGIN capabilityTypes=ECapabilityTypes END)? & ('interface_types:' BEGIN
		//interfaceTypes=EInterfaceTypes END)? & ('relationship_types:' BEGIN relationshipTypes=ERelationshipTypes END)? &
		//('node_types:' BEGIN nodeTypes=ENodeTypes END)? & ('policy_types:' BEGIN policyTypes=EPolicyTypes END)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('data_types:' BEGIN dataTypes=EDataTypes END)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'data_types:'
		public Keyword getData_typesKeyword_0_0() { return cData_typesKeyword_0_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0_1() { return cBEGINTerminalRuleCall_0_1; }
		
		//dataTypes=EDataTypes
		public Assignment getDataTypesAssignment_0_2() { return cDataTypesAssignment_0_2; }
		
		//EDataTypes
		public RuleCall getDataTypesEDataTypesParserRuleCall_0_2_0() { return cDataTypesEDataTypesParserRuleCall_0_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_0_3() { return cENDTerminalRuleCall_0_3; }
		
		//('artifact_types:' BEGIN artifactTypes=EArtifactTypes END)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'artifact_types:'
		public Keyword getArtifact_typesKeyword_1_0() { return cArtifact_typesKeyword_1_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_1() { return cBEGINTerminalRuleCall_1_1; }
		
		//artifactTypes=EArtifactTypes
		public Assignment getArtifactTypesAssignment_1_2() { return cArtifactTypesAssignment_1_2; }
		
		//EArtifactTypes
		public RuleCall getArtifactTypesEArtifactTypesParserRuleCall_1_2_0() { return cArtifactTypesEArtifactTypesParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
		
		//('capability_types:' BEGIN capabilityTypes=ECapabilityTypes END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'capability_types:'
		public Keyword getCapability_typesKeyword_2_0() { return cCapability_typesKeyword_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_1() { return cBEGINTerminalRuleCall_2_1; }
		
		//capabilityTypes=ECapabilityTypes
		public Assignment getCapabilityTypesAssignment_2_2() { return cCapabilityTypesAssignment_2_2; }
		
		//ECapabilityTypes
		public RuleCall getCapabilityTypesECapabilityTypesParserRuleCall_2_2_0() { return cCapabilityTypesECapabilityTypesParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
		
		//('interface_types:' BEGIN interfaceTypes=EInterfaceTypes END)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'interface_types:'
		public Keyword getInterface_typesKeyword_3_0() { return cInterface_typesKeyword_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3_1() { return cBEGINTerminalRuleCall_3_1; }
		
		//interfaceTypes=EInterfaceTypes
		public Assignment getInterfaceTypesAssignment_3_2() { return cInterfaceTypesAssignment_3_2; }
		
		//EInterfaceTypes
		public RuleCall getInterfaceTypesEInterfaceTypesParserRuleCall_3_2_0() { return cInterfaceTypesEInterfaceTypesParserRuleCall_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3_3() { return cENDTerminalRuleCall_3_3; }
		
		//('relationship_types:' BEGIN relationshipTypes=ERelationshipTypes END)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'relationship_types:'
		public Keyword getRelationship_typesKeyword_4_0() { return cRelationship_typesKeyword_4_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4_1() { return cBEGINTerminalRuleCall_4_1; }
		
		//relationshipTypes=ERelationshipTypes
		public Assignment getRelationshipTypesAssignment_4_2() { return cRelationshipTypesAssignment_4_2; }
		
		//ERelationshipTypes
		public RuleCall getRelationshipTypesERelationshipTypesParserRuleCall_4_2_0() { return cRelationshipTypesERelationshipTypesParserRuleCall_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4_3() { return cENDTerminalRuleCall_4_3; }
		
		//('node_types:' BEGIN nodeTypes=ENodeTypes END)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'node_types:'
		public Keyword getNode_typesKeyword_5_0() { return cNode_typesKeyword_5_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_5_1() { return cBEGINTerminalRuleCall_5_1; }
		
		//nodeTypes=ENodeTypes
		public Assignment getNodeTypesAssignment_5_2() { return cNodeTypesAssignment_5_2; }
		
		//ENodeTypes
		public RuleCall getNodeTypesENodeTypesParserRuleCall_5_2_0() { return cNodeTypesENodeTypesParserRuleCall_5_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5_3() { return cENDTerminalRuleCall_5_3; }
		
		//('policy_types:' BEGIN policyTypes=EPolicyTypes END)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'policy_types:'
		public Keyword getPolicy_typesKeyword_6_0() { return cPolicy_typesKeyword_6_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_6_1() { return cBEGINTerminalRuleCall_6_1; }
		
		//policyTypes=EPolicyTypes
		public Assignment getPolicyTypesAssignment_6_2() { return cPolicyTypesAssignment_6_2; }
		
		//EPolicyTypes
		public RuleCall getPolicyTypesEPolicyTypesParserRuleCall_6_2_0() { return cPolicyTypesEPolicyTypesParserRuleCall_6_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_6_3() { return cENDTerminalRuleCall_6_3; }
	}
	public class EDataTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EDataTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEDataTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDataTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDataTypesEDataTypeParserRuleCall_1_0 = (RuleCall)cDataTypesAssignment_1.eContents().get(0);
		
		//EDataTypes:
		//	{EDataTypes} dataTypes+=EDataType+;
		@Override public ParserRule getRule() { return rule; }
		
		//{EDataTypes} dataTypes+=EDataType+
		public Group getGroup() { return cGroup; }
		
		//{EDataTypes}
		public Action getEDataTypesAction_0() { return cEDataTypesAction_0; }
		
		//dataTypes+=EDataType+
		public Assignment getDataTypesAssignment_1() { return cDataTypesAssignment_1; }
		
		//EDataType
		public RuleCall getDataTypesEDataTypeParserRuleCall_1_0() { return cDataTypesEDataTypeParserRuleCall_1_0; }
	}
	public class EDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEDataTypeNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cDataAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDataEDataTypeBodyParserRuleCall_3_0 = (RuleCall)cDataAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EDataType:
		//	name=EDataTypeName ':'
		//	BEGIN
		//	data=EDataTypeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EDataTypeName ':' BEGIN data=EDataTypeBody END
		public Group getGroup() { return cGroup; }
		
		//name=EDataTypeName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EDataTypeName
		public RuleCall getNameEDataTypeNameParserRuleCall_0_0() { return cNameEDataTypeNameParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//data=EDataTypeBody
		public Assignment getDataAssignment_3() { return cDataAssignment_3; }
		
		//EDataTypeBody
		public RuleCall getDataEDataTypeBodyParserRuleCall_3_0() { return cDataEDataTypeBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EDataTypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EDataTypeBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEDataTypeBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDerived_fromKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cSuperTypeEDataTypeCrossReference_1_0_1_0 = (CrossReference)cSuperTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cSuperTypeEDataTypeEDataTypeNameParserRuleCall_1_0_1_0_1 = (RuleCall)cSuperTypeEDataTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cConstraintsKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
		private final Assignment cConstraintsAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cConstraintsEConstraintsParserRuleCall_1_2_2_0 = (RuleCall)cConstraintsAssignment_1_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cPropertiesKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_3_1 = (RuleCall)cGroup_1_3.eContents().get(1);
		private final Assignment cPropertiesAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cPropertiesEPropertiesParserRuleCall_1_3_2_0 = (RuleCall)cPropertiesAssignment_1_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3_3 = (RuleCall)cGroup_1_3.eContents().get(3);
		
		//EDataTypeBody:
		//	{EDataTypeBody} (('derived_from:' superType=[EDataType|EDataTypeName])? & ('description:' description=STRING)? &
		//	('constraints:'
		//	BEGIN
		//	constraints=EConstraints
		//	END)? & ('properties:'
		//	BEGIN
		//	properties=EProperties
		//	END)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{EDataTypeBody} (('derived_from:' superType=[EDataType|EDataTypeName])? & ('description:' description=STRING)? &
		//('constraints:' BEGIN constraints=EConstraints END)? & ('properties:' BEGIN properties=EProperties END)?)
		public Group getGroup() { return cGroup; }
		
		//{EDataTypeBody}
		public Action getEDataTypeBodyAction_0() { return cEDataTypeBodyAction_0; }
		
		//(('derived_from:' superType=[EDataType|EDataTypeName])? & ('description:' description=STRING)? & ('constraints:' BEGIN
		//constraints=EConstraints END)? & ('properties:' BEGIN properties=EProperties END)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('derived_from:' superType=[EDataType|EDataTypeName])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'derived_from:'
		public Keyword getDerived_fromKeyword_1_0_0() { return cDerived_fromKeyword_1_0_0; }
		
		//superType=[EDataType|EDataTypeName]
		public Assignment getSuperTypeAssignment_1_0_1() { return cSuperTypeAssignment_1_0_1; }
		
		//[EDataType|EDataTypeName]
		public CrossReference getSuperTypeEDataTypeCrossReference_1_0_1_0() { return cSuperTypeEDataTypeCrossReference_1_0_1_0; }
		
		//EDataTypeName
		public RuleCall getSuperTypeEDataTypeEDataTypeNameParserRuleCall_1_0_1_0_1() { return cSuperTypeEDataTypeEDataTypeNameParserRuleCall_1_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
		
		//('constraints:' BEGIN constraints=EConstraints END)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'constraints:'
		public Keyword getConstraintsKeyword_1_2_0() { return cConstraintsKeyword_1_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_2_1() { return cBEGINTerminalRuleCall_1_2_1; }
		
		//constraints=EConstraints
		public Assignment getConstraintsAssignment_1_2_2() { return cConstraintsAssignment_1_2_2; }
		
		//EConstraints
		public RuleCall getConstraintsEConstraintsParserRuleCall_1_2_2_0() { return cConstraintsEConstraintsParserRuleCall_1_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2_3() { return cENDTerminalRuleCall_1_2_3; }
		
		//('properties:' BEGIN properties=EProperties END)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_1_3_0() { return cPropertiesKeyword_1_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_3_1() { return cBEGINTerminalRuleCall_1_3_1; }
		
		//properties=EProperties
		public Assignment getPropertiesAssignment_1_3_2() { return cPropertiesAssignment_1_3_2; }
		
		//EProperties
		public RuleCall getPropertiesEPropertiesParserRuleCall_1_3_2_0() { return cPropertiesEPropertiesParserRuleCall_1_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3_3() { return cENDTerminalRuleCall_1_3_3; }
	}
	public class EDataTypeNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EDataTypeName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQUALIFIED_NAMETerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPRIMITIVE_DATA_TYPETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDataTypeName:
		//	QUALIFIED_NAME | PRIMITIVE_DATA_TYPE;
		@Override public ParserRule getRule() { return rule; }
		
		//QUALIFIED_NAME | PRIMITIVE_DATA_TYPE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//QUALIFIED_NAME
		public RuleCall getQUALIFIED_NAMETerminalRuleCall_0() { return cQUALIFIED_NAMETerminalRuleCall_0; }
		
		//PRIMITIVE_DATA_TYPE
		public RuleCall getPRIMITIVE_DATA_TYPETerminalRuleCall_1() { return cPRIMITIVE_DATA_TYPETerminalRuleCall_1; }
	}
	public class EArtifactTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EArtifactTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEArtifactTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cArtifactTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cArtifactTypesEArtifactTypeParserRuleCall_1_0 = (RuleCall)cArtifactTypesAssignment_1.eContents().get(0);
		
		//EArtifactTypes:
		//	{EArtifactTypes} artifactTypes+=EArtifactType+;
		@Override public ParserRule getRule() { return rule; }
		
		//{EArtifactTypes} artifactTypes+=EArtifactType+
		public Group getGroup() { return cGroup; }
		
		//{EArtifactTypes}
		public Action getEArtifactTypesAction_0() { return cEArtifactTypesAction_0; }
		
		//artifactTypes+=EArtifactType+
		public Assignment getArtifactTypesAssignment_1() { return cArtifactTypesAssignment_1; }
		
		//EArtifactType
		public RuleCall getArtifactTypesEArtifactTypeParserRuleCall_1_0() { return cArtifactTypesEArtifactTypeParserRuleCall_1_0; }
	}
	public class EArtifactTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EArtifactType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQUALIFIED_NAMETerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cArtifactAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArtifactEArtifactTypeBodyParserRuleCall_3_0 = (RuleCall)cArtifactAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EArtifactType:
		//	name=QUALIFIED_NAME ':'
		//	BEGIN
		//	artifact=EArtifactTypeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QUALIFIED_NAME ':' BEGIN artifact=EArtifactTypeBody END
		public Group getGroup() { return cGroup; }
		
		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMETerminalRuleCall_0_0() { return cNameQUALIFIED_NAMETerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//artifact=EArtifactTypeBody
		public Assignment getArtifactAssignment_3() { return cArtifactAssignment_3; }
		
		//EArtifactTypeBody
		public RuleCall getArtifactEArtifactTypeBodyParserRuleCall_3_0() { return cArtifactEArtifactTypeBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EArtifactTypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EArtifactTypeBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEArtifactTypeBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDerived_fromKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cSuperTypeEArtifactTypeCrossReference_1_0_1_0 = (CrossReference)cSuperTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cSuperTypeEArtifactTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1 = (RuleCall)cSuperTypeEArtifactTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cMime_typeKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cMime_typeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMime_typeSTRINGTerminalRuleCall_1_2_1_0 = (RuleCall)cMime_typeAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cFile_extKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cFile_extAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cFile_extSTRINGTerminalRuleCall_1_3_1_0 = (RuleCall)cFile_extAssignment_1_3_1.eContents().get(0);
		
		//EArtifactTypeBody:
		//	{EArtifactTypeBody} (('derived_from:' superType=[EArtifactType|QUALIFIED_NAME])? & ('description:'
		//	description=STRING)? & ('mime_type:' mime_type=STRING)? & ('file_ext:'+ file_ext=STRING)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{EArtifactTypeBody} (('derived_from:' superType=[EArtifactType|QUALIFIED_NAME])? & ('description:' description=STRING)?
		//& ('mime_type:' mime_type=STRING)? & ('file_ext:'+ file_ext=STRING)?)
		public Group getGroup() { return cGroup; }
		
		//{EArtifactTypeBody}
		public Action getEArtifactTypeBodyAction_0() { return cEArtifactTypeBodyAction_0; }
		
		//(('derived_from:' superType=[EArtifactType|QUALIFIED_NAME])? & ('description:' description=STRING)? & ('mime_type:'
		//mime_type=STRING)? & ('file_ext:'+ file_ext=STRING)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('derived_from:' superType=[EArtifactType|QUALIFIED_NAME])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'derived_from:'
		public Keyword getDerived_fromKeyword_1_0_0() { return cDerived_fromKeyword_1_0_0; }
		
		//superType=[EArtifactType|QUALIFIED_NAME]
		public Assignment getSuperTypeAssignment_1_0_1() { return cSuperTypeAssignment_1_0_1; }
		
		//[EArtifactType|QUALIFIED_NAME]
		public CrossReference getSuperTypeEArtifactTypeCrossReference_1_0_1_0() { return cSuperTypeEArtifactTypeCrossReference_1_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getSuperTypeEArtifactTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1() { return cSuperTypeEArtifactTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
		
		//('mime_type:' mime_type=STRING)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'mime_type:'
		public Keyword getMime_typeKeyword_1_2_0() { return cMime_typeKeyword_1_2_0; }
		
		//mime_type=STRING
		public Assignment getMime_typeAssignment_1_2_1() { return cMime_typeAssignment_1_2_1; }
		
		//STRING
		public RuleCall getMime_typeSTRINGTerminalRuleCall_1_2_1_0() { return cMime_typeSTRINGTerminalRuleCall_1_2_1_0; }
		
		//('file_ext:'+ file_ext=STRING)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'file_ext:'+
		public Keyword getFile_extKeyword_1_3_0() { return cFile_extKeyword_1_3_0; }
		
		//file_ext=STRING
		public Assignment getFile_extAssignment_1_3_1() { return cFile_extAssignment_1_3_1; }
		
		//STRING
		public RuleCall getFile_extSTRINGTerminalRuleCall_1_3_1_0() { return cFile_extSTRINGTerminalRuleCall_1_3_1_0; }
	}
	public class ECapabilityTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ECapabilityTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cECapabilityTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCapabilityTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCapabilityTypesECapabilityTypeParserRuleCall_1_0 = (RuleCall)cCapabilityTypesAssignment_1.eContents().get(0);
		
		//ECapabilityTypes:
		//	{ECapabilityTypes} capabilityTypes+=ECapabilityType+;
		@Override public ParserRule getRule() { return rule; }
		
		//{ECapabilityTypes} capabilityTypes+=ECapabilityType+
		public Group getGroup() { return cGroup; }
		
		//{ECapabilityTypes}
		public Action getECapabilityTypesAction_0() { return cECapabilityTypesAction_0; }
		
		//capabilityTypes+=ECapabilityType+
		public Assignment getCapabilityTypesAssignment_1() { return cCapabilityTypesAssignment_1; }
		
		//ECapabilityType
		public RuleCall getCapabilityTypesECapabilityTypeParserRuleCall_1_0() { return cCapabilityTypesECapabilityTypeParserRuleCall_1_0; }
	}
	public class ECapabilityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ECapabilityType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQUALIFIED_NAMETerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cCapabilityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCapabilityECapabilityTypeBodyParserRuleCall_3_0 = (RuleCall)cCapabilityAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ECapabilityType:
		//	name=QUALIFIED_NAME ':'
		//	BEGIN
		//	capability=ECapabilityTypeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QUALIFIED_NAME ':' BEGIN capability=ECapabilityTypeBody END
		public Group getGroup() { return cGroup; }
		
		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMETerminalRuleCall_0_0() { return cNameQUALIFIED_NAMETerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//capability=ECapabilityTypeBody
		public Assignment getCapabilityAssignment_3() { return cCapabilityAssignment_3; }
		
		//ECapabilityTypeBody
		public RuleCall getCapabilityECapabilityTypeBodyParserRuleCall_3_0() { return cCapabilityECapabilityTypeBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ECapabilityTypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ECapabilityTypeBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cECapabilityTypeBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDerived_fromKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cSuperTypeECapabilityTypeCrossReference_1_0_1_0 = (CrossReference)cSuperTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cSuperTypeECapabilityTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1 = (RuleCall)cSuperTypeECapabilityTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cPropertiesKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
		private final Assignment cPropertiesAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cPropertiesEPropertiesParserRuleCall_1_2_2_0 = (RuleCall)cPropertiesAssignment_1_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cAttributesKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_3_1 = (RuleCall)cGroup_1_3.eContents().get(1);
		private final Assignment cAtributesAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cAtributesEAttributesParserRuleCall_1_3_2_0 = (RuleCall)cAtributesAssignment_1_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3_3 = (RuleCall)cGroup_1_3.eContents().get(3);
		
		//ECapabilityTypeBody:
		//	{ECapabilityTypeBody} (('derived_from:' superType=[ECapabilityType|QUALIFIED_NAME])? & ('description:'
		//	description=STRING)? & ('properties:'
		//	BEGIN
		//	properties=EProperties
		//	END)? & ('attributes:'
		//	BEGIN
		//	atributes=EAttributes
		//	END)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{ECapabilityTypeBody} (('derived_from:' superType=[ECapabilityType|QUALIFIED_NAME])? & ('description:'
		//description=STRING)? & ('properties:' BEGIN properties=EProperties END)? & ('attributes:' BEGIN atributes=EAttributes
		//END)?)
		public Group getGroup() { return cGroup; }
		
		//{ECapabilityTypeBody}
		public Action getECapabilityTypeBodyAction_0() { return cECapabilityTypeBodyAction_0; }
		
		//(('derived_from:' superType=[ECapabilityType|QUALIFIED_NAME])? & ('description:' description=STRING)? & ('properties:'
		//BEGIN properties=EProperties END)? & ('attributes:' BEGIN atributes=EAttributes END)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('derived_from:' superType=[ECapabilityType|QUALIFIED_NAME])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'derived_from:'
		public Keyword getDerived_fromKeyword_1_0_0() { return cDerived_fromKeyword_1_0_0; }
		
		//superType=[ECapabilityType|QUALIFIED_NAME]
		public Assignment getSuperTypeAssignment_1_0_1() { return cSuperTypeAssignment_1_0_1; }
		
		//[ECapabilityType|QUALIFIED_NAME]
		public CrossReference getSuperTypeECapabilityTypeCrossReference_1_0_1_0() { return cSuperTypeECapabilityTypeCrossReference_1_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getSuperTypeECapabilityTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1() { return cSuperTypeECapabilityTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
		
		//('properties:' BEGIN properties=EProperties END)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_1_2_0() { return cPropertiesKeyword_1_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_2_1() { return cBEGINTerminalRuleCall_1_2_1; }
		
		//properties=EProperties
		public Assignment getPropertiesAssignment_1_2_2() { return cPropertiesAssignment_1_2_2; }
		
		//EProperties
		public RuleCall getPropertiesEPropertiesParserRuleCall_1_2_2_0() { return cPropertiesEPropertiesParserRuleCall_1_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2_3() { return cENDTerminalRuleCall_1_2_3; }
		
		//('attributes:' BEGIN atributes=EAttributes END)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'attributes:'
		public Keyword getAttributesKeyword_1_3_0() { return cAttributesKeyword_1_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_3_1() { return cBEGINTerminalRuleCall_1_3_1; }
		
		//atributes=EAttributes
		public Assignment getAtributesAssignment_1_3_2() { return cAtributesAssignment_1_3_2; }
		
		//EAttributes
		public RuleCall getAtributesEAttributesParserRuleCall_1_3_2_0() { return cAtributesEAttributesParserRuleCall_1_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3_3() { return cENDTerminalRuleCall_1_3_3; }
	}
	public class EInterfaceTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInterfaceTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEInterfaceTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cInterfaceTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInterfaceTypesEInterfaceTypeParserRuleCall_1_0 = (RuleCall)cInterfaceTypesAssignment_1.eContents().get(0);
		
		//EInterfaceTypes:
		//	{EInterfaceTypes} interfaceTypes+=EInterfaceType+;
		@Override public ParserRule getRule() { return rule; }
		
		//{EInterfaceTypes} interfaceTypes+=EInterfaceType+
		public Group getGroup() { return cGroup; }
		
		//{EInterfaceTypes}
		public Action getEInterfaceTypesAction_0() { return cEInterfaceTypesAction_0; }
		
		//interfaceTypes+=EInterfaceType+
		public Assignment getInterfaceTypesAssignment_1() { return cInterfaceTypesAssignment_1; }
		
		//EInterfaceType
		public RuleCall getInterfaceTypesEInterfaceTypeParserRuleCall_1_0() { return cInterfaceTypesEInterfaceTypeParserRuleCall_1_0; }
	}
	public class EInterfaceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInterfaceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQUALIFIED_NAMETerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cInterfaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInterfaceEInterfaceTypeBodyParserRuleCall_3_0 = (RuleCall)cInterfaceAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EInterfaceType:
		//	name=QUALIFIED_NAME ':'
		//	BEGIN
		//	interface=EInterfaceTypeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QUALIFIED_NAME ':' BEGIN interface=EInterfaceTypeBody END
		public Group getGroup() { return cGroup; }
		
		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMETerminalRuleCall_0_0() { return cNameQUALIFIED_NAMETerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//interface=EInterfaceTypeBody
		public Assignment getInterfaceAssignment_3() { return cInterfaceAssignment_3; }
		
		//EInterfaceTypeBody
		public RuleCall getInterfaceEInterfaceTypeBodyParserRuleCall_3_0() { return cInterfaceEInterfaceTypeBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EInterfaceTypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInterfaceTypeBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEInterfaceTypeBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDerived_fromKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cSuperTypeEInterfaceTypeCrossReference_1_0_1_0 = (CrossReference)cSuperTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cSuperTypeEInterfaceTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1 = (RuleCall)cSuperTypeEInterfaceTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cInputsKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
		private final Assignment cInputsAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cInputsEPropertiesParserRuleCall_1_2_2_0 = (RuleCall)cInputsAssignment_1_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cOperationsKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_3_1 = (RuleCall)cGroup_1_3.eContents().get(1);
		private final Assignment cOperationsAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cOperationsEOperationsParserRuleCall_1_3_2_0 = (RuleCall)cOperationsAssignment_1_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3_3 = (RuleCall)cGroup_1_3.eContents().get(3);
		
		//EInterfaceTypeBody:
		//	{EInterfaceTypeBody} (('derived_from:' superType=[EInterfaceType|QUALIFIED_NAME])? & ('description:'
		//	description=STRING)? & ('inputs:'
		//	BEGIN
		//	inputs=EProperties
		//	END)? & ('operations:'
		//	BEGIN
		//	operations=EOperations
		//	END)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{EInterfaceTypeBody} (('derived_from:' superType=[EInterfaceType|QUALIFIED_NAME])? & ('description:'
		//description=STRING)? & ('inputs:' BEGIN inputs=EProperties END)? & ('operations:' BEGIN operations=EOperations END)?)
		public Group getGroup() { return cGroup; }
		
		//{EInterfaceTypeBody}
		public Action getEInterfaceTypeBodyAction_0() { return cEInterfaceTypeBodyAction_0; }
		
		//(('derived_from:' superType=[EInterfaceType|QUALIFIED_NAME])? & ('description:' description=STRING)? & ('inputs:' BEGIN
		//inputs=EProperties END)? & ('operations:' BEGIN operations=EOperations END)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('derived_from:' superType=[EInterfaceType|QUALIFIED_NAME])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'derived_from:'
		public Keyword getDerived_fromKeyword_1_0_0() { return cDerived_fromKeyword_1_0_0; }
		
		//superType=[EInterfaceType|QUALIFIED_NAME]
		public Assignment getSuperTypeAssignment_1_0_1() { return cSuperTypeAssignment_1_0_1; }
		
		//[EInterfaceType|QUALIFIED_NAME]
		public CrossReference getSuperTypeEInterfaceTypeCrossReference_1_0_1_0() { return cSuperTypeEInterfaceTypeCrossReference_1_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getSuperTypeEInterfaceTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1() { return cSuperTypeEInterfaceTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
		
		//('inputs:' BEGIN inputs=EProperties END)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'inputs:'
		public Keyword getInputsKeyword_1_2_0() { return cInputsKeyword_1_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_2_1() { return cBEGINTerminalRuleCall_1_2_1; }
		
		//inputs=EProperties
		public Assignment getInputsAssignment_1_2_2() { return cInputsAssignment_1_2_2; }
		
		//EProperties
		public RuleCall getInputsEPropertiesParserRuleCall_1_2_2_0() { return cInputsEPropertiesParserRuleCall_1_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2_3() { return cENDTerminalRuleCall_1_2_3; }
		
		//('operations:' BEGIN operations=EOperations END)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'operations:'
		public Keyword getOperationsKeyword_1_3_0() { return cOperationsKeyword_1_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_3_1() { return cBEGINTerminalRuleCall_1_3_1; }
		
		//operations=EOperations
		public Assignment getOperationsAssignment_1_3_2() { return cOperationsAssignment_1_3_2; }
		
		//EOperations
		public RuleCall getOperationsEOperationsParserRuleCall_1_3_2_0() { return cOperationsEOperationsParserRuleCall_1_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3_3() { return cENDTerminalRuleCall_1_3_3; }
	}
	public class EPolicyTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EPolicyTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEPolicyTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPolicyTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPolicyTypesEPolicyTypeParserRuleCall_1_0 = (RuleCall)cPolicyTypesAssignment_1.eContents().get(0);
		
		//EPolicyTypes:
		//	{EPolicyTypes} policyTypes+=EPolicyType+;
		@Override public ParserRule getRule() { return rule; }
		
		//{EPolicyTypes} policyTypes+=EPolicyType+
		public Group getGroup() { return cGroup; }
		
		//{EPolicyTypes}
		public Action getEPolicyTypesAction_0() { return cEPolicyTypesAction_0; }
		
		//policyTypes+=EPolicyType+
		public Assignment getPolicyTypesAssignment_1() { return cPolicyTypesAssignment_1; }
		
		//EPolicyType
		public RuleCall getPolicyTypesEPolicyTypeParserRuleCall_1_0() { return cPolicyTypesEPolicyTypeParserRuleCall_1_0; }
	}
	public class EPolicyTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EPolicyType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQUALIFIED_NAMETerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPolicyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPolicyEPolicyTypeBodyParserRuleCall_3_0 = (RuleCall)cPolicyAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EPolicyType:
		//	name=QUALIFIED_NAME ':'
		//	BEGIN
		//	policy=EPolicyTypeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QUALIFIED_NAME ':' BEGIN policy=EPolicyTypeBody END
		public Group getGroup() { return cGroup; }
		
		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMETerminalRuleCall_0_0() { return cNameQUALIFIED_NAMETerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//policy=EPolicyTypeBody
		public Assignment getPolicyAssignment_3() { return cPolicyAssignment_3; }
		
		//EPolicyTypeBody
		public RuleCall getPolicyEPolicyTypeBodyParserRuleCall_3_0() { return cPolicyEPolicyTypeBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EPolicyTypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EPolicyTypeBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEPolicyTypeBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDerived_fromKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cSuperTypeEPolicyTypeCrossReference_1_0_1_0 = (CrossReference)cSuperTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cSuperTypeEPolicyTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1 = (RuleCall)cSuperTypeEPolicyTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		
		//EPolicyTypeBody:
		//	{EPolicyTypeBody} (('derived_from:' superType=[EPolicyType|QUALIFIED_NAME])? & ('description:' description=STRING)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{EPolicyTypeBody} (('derived_from:' superType=[EPolicyType|QUALIFIED_NAME])? & ('description:' description=STRING)?)
		public Group getGroup() { return cGroup; }
		
		//{EPolicyTypeBody}
		public Action getEPolicyTypeBodyAction_0() { return cEPolicyTypeBodyAction_0; }
		
		//(('derived_from:' superType=[EPolicyType|QUALIFIED_NAME])? & ('description:' description=STRING)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('derived_from:' superType=[EPolicyType|QUALIFIED_NAME])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'derived_from:'
		public Keyword getDerived_fromKeyword_1_0_0() { return cDerived_fromKeyword_1_0_0; }
		
		//superType=[EPolicyType|QUALIFIED_NAME]
		public Assignment getSuperTypeAssignment_1_0_1() { return cSuperTypeAssignment_1_0_1; }
		
		//[EPolicyType|QUALIFIED_NAME]
		public CrossReference getSuperTypeEPolicyTypeCrossReference_1_0_1_0() { return cSuperTypeEPolicyTypeCrossReference_1_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getSuperTypeEPolicyTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1() { return cSuperTypeEPolicyTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
	}
	public class ENodeTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ENodeTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cENodeTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNodeTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodeTypesENodeTypeParserRuleCall_1_0 = (RuleCall)cNodeTypesAssignment_1.eContents().get(0);
		
		//ENodeTypes:
		//	{ENodeTypes} nodeTypes+=ENodeType+;
		@Override public ParserRule getRule() { return rule; }
		
		//{ENodeTypes} nodeTypes+=ENodeType+
		public Group getGroup() { return cGroup; }
		
		//{ENodeTypes}
		public Action getENodeTypesAction_0() { return cENodeTypesAction_0; }
		
		//nodeTypes+=ENodeType+
		public Assignment getNodeTypesAssignment_1() { return cNodeTypesAssignment_1; }
		
		//ENodeType
		public RuleCall getNodeTypesENodeTypeParserRuleCall_1_0() { return cNodeTypesENodeTypeParserRuleCall_1_0; }
	}
	public class ENodeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ENodeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQUALIFIED_NAMETerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodeENodeTypeBodyParserRuleCall_3_0 = (RuleCall)cNodeAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ENodeType:
		//	name=QUALIFIED_NAME ':'
		//	BEGIN
		//	node=ENodeTypeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QUALIFIED_NAME ':' BEGIN node=ENodeTypeBody END
		public Group getGroup() { return cGroup; }
		
		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMETerminalRuleCall_0_0() { return cNameQUALIFIED_NAMETerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//node=ENodeTypeBody
		public Assignment getNodeAssignment_3() { return cNodeAssignment_3; }
		
		//ENodeTypeBody
		public RuleCall getNodeENodeTypeBodyParserRuleCall_3_0() { return cNodeENodeTypeBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ENodeTypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ENodeTypeBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cENodeTypeBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDerived_fromKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cSuperTypeENodeTypeCrossReference_1_0_1_0 = (CrossReference)cSuperTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cSuperTypeENodeTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1 = (RuleCall)cSuperTypeENodeTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cPropertiesKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
		private final Assignment cPropertiesAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cPropertiesEPropertiesParserRuleCall_1_2_2_0 = (RuleCall)cPropertiesAssignment_1_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cAttributesKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_3_1 = (RuleCall)cGroup_1_3.eContents().get(1);
		private final Assignment cAttributesAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cAttributesEAttributesParserRuleCall_1_3_2_0 = (RuleCall)cAttributesAssignment_1_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3_3 = (RuleCall)cGroup_1_3.eContents().get(3);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cInterfacesKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_4_1 = (RuleCall)cGroup_1_4.eContents().get(1);
		private final Assignment cInterfacesAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cInterfacesEInterfacesParserRuleCall_1_4_2_0 = (RuleCall)cInterfacesAssignment_1_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4_3 = (RuleCall)cGroup_1_4.eContents().get(3);
		private final Group cGroup_1_5 = (Group)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cCapabilitiesKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_5_1 = (RuleCall)cGroup_1_5.eContents().get(1);
		private final Assignment cCapabilitiesAssignment_1_5_2 = (Assignment)cGroup_1_5.eContents().get(2);
		private final RuleCall cCapabilitiesECapabilitiesParserRuleCall_1_5_2_0 = (RuleCall)cCapabilitiesAssignment_1_5_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_5_3 = (RuleCall)cGroup_1_5.eContents().get(3);
		private final Group cGroup_1_6 = (Group)cUnorderedGroup_1.eContents().get(6);
		private final Keyword cRequirementsKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_6_1 = (RuleCall)cGroup_1_6.eContents().get(1);
		private final Assignment cRequirementsAssignment_1_6_2 = (Assignment)cGroup_1_6.eContents().get(2);
		private final RuleCall cRequirementsERequirementsParserRuleCall_1_6_2_0 = (RuleCall)cRequirementsAssignment_1_6_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_6_3 = (RuleCall)cGroup_1_6.eContents().get(3);
		
		//ENodeTypeBody:
		//	{ENodeTypeBody} (('derived_from:' superType=[ENodeType|QUALIFIED_NAME])? & ('description:' description=STRING)? &
		//	('properties:'
		//	BEGIN
		//	properties=EProperties
		//	END)? & ('attributes:'
		//	BEGIN
		//	attributes=EAttributes
		//	END)? & ('interfaces:'
		//	BEGIN
		//	interfaces=EInterfaces
		//	END)? & ('capabilities:'
		//	BEGIN
		//	capabilities=ECapabilities
		//	END)? & ('requirements:'
		//	BEGIN
		//	requirements=ERequirements
		//	END)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{ENodeTypeBody} (('derived_from:' superType=[ENodeType|QUALIFIED_NAME])? & ('description:' description=STRING)? &
		//('properties:' BEGIN properties=EProperties END)? & ('attributes:' BEGIN attributes=EAttributes END)? & ('interfaces:'
		//BEGIN interfaces=EInterfaces END)? & ('capabilities:' BEGIN capabilities=ECapabilities END)? & ('requirements:' BEGIN
		//requirements=ERequirements END)?)
		public Group getGroup() { return cGroup; }
		
		//{ENodeTypeBody}
		public Action getENodeTypeBodyAction_0() { return cENodeTypeBodyAction_0; }
		
		//(('derived_from:' superType=[ENodeType|QUALIFIED_NAME])? & ('description:' description=STRING)? & ('properties:' BEGIN
		//properties=EProperties END)? & ('attributes:' BEGIN attributes=EAttributes END)? & ('interfaces:' BEGIN
		//interfaces=EInterfaces END)? & ('capabilities:' BEGIN capabilities=ECapabilities END)? & ('requirements:' BEGIN
		//requirements=ERequirements END)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('derived_from:' superType=[ENodeType|QUALIFIED_NAME])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'derived_from:'
		public Keyword getDerived_fromKeyword_1_0_0() { return cDerived_fromKeyword_1_0_0; }
		
		//superType=[ENodeType|QUALIFIED_NAME]
		public Assignment getSuperTypeAssignment_1_0_1() { return cSuperTypeAssignment_1_0_1; }
		
		//[ENodeType|QUALIFIED_NAME]
		public CrossReference getSuperTypeENodeTypeCrossReference_1_0_1_0() { return cSuperTypeENodeTypeCrossReference_1_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getSuperTypeENodeTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1() { return cSuperTypeENodeTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
		
		//('properties:' BEGIN properties=EProperties END)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_1_2_0() { return cPropertiesKeyword_1_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_2_1() { return cBEGINTerminalRuleCall_1_2_1; }
		
		//properties=EProperties
		public Assignment getPropertiesAssignment_1_2_2() { return cPropertiesAssignment_1_2_2; }
		
		//EProperties
		public RuleCall getPropertiesEPropertiesParserRuleCall_1_2_2_0() { return cPropertiesEPropertiesParserRuleCall_1_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2_3() { return cENDTerminalRuleCall_1_2_3; }
		
		//('attributes:' BEGIN attributes=EAttributes END)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'attributes:'
		public Keyword getAttributesKeyword_1_3_0() { return cAttributesKeyword_1_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_3_1() { return cBEGINTerminalRuleCall_1_3_1; }
		
		//attributes=EAttributes
		public Assignment getAttributesAssignment_1_3_2() { return cAttributesAssignment_1_3_2; }
		
		//EAttributes
		public RuleCall getAttributesEAttributesParserRuleCall_1_3_2_0() { return cAttributesEAttributesParserRuleCall_1_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3_3() { return cENDTerminalRuleCall_1_3_3; }
		
		//('interfaces:' BEGIN interfaces=EInterfaces END)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'interfaces:'
		public Keyword getInterfacesKeyword_1_4_0() { return cInterfacesKeyword_1_4_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_4_1() { return cBEGINTerminalRuleCall_1_4_1; }
		
		//interfaces=EInterfaces
		public Assignment getInterfacesAssignment_1_4_2() { return cInterfacesAssignment_1_4_2; }
		
		//EInterfaces
		public RuleCall getInterfacesEInterfacesParserRuleCall_1_4_2_0() { return cInterfacesEInterfacesParserRuleCall_1_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4_3() { return cENDTerminalRuleCall_1_4_3; }
		
		//('capabilities:' BEGIN capabilities=ECapabilities END)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'capabilities:'
		public Keyword getCapabilitiesKeyword_1_5_0() { return cCapabilitiesKeyword_1_5_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_5_1() { return cBEGINTerminalRuleCall_1_5_1; }
		
		//capabilities=ECapabilities
		public Assignment getCapabilitiesAssignment_1_5_2() { return cCapabilitiesAssignment_1_5_2; }
		
		//ECapabilities
		public RuleCall getCapabilitiesECapabilitiesParserRuleCall_1_5_2_0() { return cCapabilitiesECapabilitiesParserRuleCall_1_5_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_5_3() { return cENDTerminalRuleCall_1_5_3; }
		
		//('requirements:' BEGIN requirements=ERequirements END)?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'requirements:'
		public Keyword getRequirementsKeyword_1_6_0() { return cRequirementsKeyword_1_6_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_6_1() { return cBEGINTerminalRuleCall_1_6_1; }
		
		//requirements=ERequirements
		public Assignment getRequirementsAssignment_1_6_2() { return cRequirementsAssignment_1_6_2; }
		
		//ERequirements
		public RuleCall getRequirementsERequirementsParserRuleCall_1_6_2_0() { return cRequirementsERequirementsParserRuleCall_1_6_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_6_3() { return cENDTerminalRuleCall_1_6_3; }
	}
	public class ERelationshipTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ERelationshipTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cERelationshipTypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cRelationshipTypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRelationshipTypesERelationshipTypeParserRuleCall_1_0 = (RuleCall)cRelationshipTypesAssignment_1.eContents().get(0);
		
		//ERelationshipTypes:
		//	{ERelationshipTypes} relationshipTypes+=ERelationshipType+;
		@Override public ParserRule getRule() { return rule; }
		
		//{ERelationshipTypes} relationshipTypes+=ERelationshipType+
		public Group getGroup() { return cGroup; }
		
		//{ERelationshipTypes}
		public Action getERelationshipTypesAction_0() { return cERelationshipTypesAction_0; }
		
		//relationshipTypes+=ERelationshipType+
		public Assignment getRelationshipTypesAssignment_1() { return cRelationshipTypesAssignment_1; }
		
		//ERelationshipType
		public RuleCall getRelationshipTypesERelationshipTypeParserRuleCall_1_0() { return cRelationshipTypesERelationshipTypeParserRuleCall_1_0; }
	}
	public class ERelationshipTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ERelationshipType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQUALIFIED_NAMETerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRelationshipERelationshipTypeBodyParserRuleCall_3_0 = (RuleCall)cRelationshipAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ERelationshipType:
		//	name=QUALIFIED_NAME ':'
		//	BEGIN
		//	relationship=ERelationshipTypeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QUALIFIED_NAME ':' BEGIN relationship=ERelationshipTypeBody END
		public Group getGroup() { return cGroup; }
		
		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMETerminalRuleCall_0_0() { return cNameQUALIFIED_NAMETerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//relationship=ERelationshipTypeBody
		public Assignment getRelationshipAssignment_3() { return cRelationshipAssignment_3; }
		
		//ERelationshipTypeBody
		public RuleCall getRelationshipERelationshipTypeBodyParserRuleCall_3_0() { return cRelationshipERelationshipTypeBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ERelationshipTypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ERelationshipTypeBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cERelationshipTypeBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDerived_fromKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cSuperTypeERelationshipTypeCrossReference_1_0_1_0 = (CrossReference)cSuperTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cSuperTypeERelationshipTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1 = (RuleCall)cSuperTypeERelationshipTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cPropertiesKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
		private final Assignment cPropertiesAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cPropertiesEPropertiesParserRuleCall_1_2_2_0 = (RuleCall)cPropertiesAssignment_1_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cAttributesKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_3_1 = (RuleCall)cGroup_1_3.eContents().get(1);
		private final Assignment cAtributesAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cAtributesEAttributesParserRuleCall_1_3_2_0 = (RuleCall)cAtributesAssignment_1_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3_3 = (RuleCall)cGroup_1_3.eContents().get(3);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cInterfacesKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_4_1 = (RuleCall)cGroup_1_4.eContents().get(1);
		private final Assignment cInterfacesAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cInterfacesEInterfacesParserRuleCall_1_4_2_0 = (RuleCall)cInterfacesAssignment_1_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_4_3 = (RuleCall)cGroup_1_4.eContents().get(3);
		private final Group cGroup_1_5 = (Group)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cValid_target_typesKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_5_1 = (Keyword)cGroup_1_5.eContents().get(1);
		private final Assignment cValid_target_typesAssignment_1_5_2 = (Assignment)cGroup_1_5.eContents().get(2);
		private final RuleCall cValid_target_typesEValidTargetTypesParserRuleCall_1_5_2_0 = (RuleCall)cValid_target_typesAssignment_1_5_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_5_3 = (Keyword)cGroup_1_5.eContents().get(3);
		
		//ERelationshipTypeBody:
		//	{ERelationshipTypeBody} (('derived_from:' superType=[ERelationshipType|QUALIFIED_NAME])? & ('description:'
		//	description=STRING)? & ('properties:'
		//	BEGIN
		//	properties=EProperties
		//	END)? & ('attributes:'
		//	BEGIN
		//	atributes=EAttributes
		//	END)? & ('interfaces:'
		//	BEGIN
		//	interfaces=EInterfaces
		//	END)? & ('valid_target_types:' '[' valid_target_types=EValidTargetTypes "]")?);
		@Override public ParserRule getRule() { return rule; }
		
		//{ERelationshipTypeBody} (('derived_from:' superType=[ERelationshipType|QUALIFIED_NAME])? & ('description:'
		//description=STRING)? & ('properties:' BEGIN properties=EProperties END)? & ('attributes:' BEGIN atributes=EAttributes
		//END)? & ('interfaces:' BEGIN interfaces=EInterfaces END)? & ('valid_target_types:' '['
		//valid_target_types=EValidTargetTypes "]")?)
		public Group getGroup() { return cGroup; }
		
		//{ERelationshipTypeBody}
		public Action getERelationshipTypeBodyAction_0() { return cERelationshipTypeBodyAction_0; }
		
		//(('derived_from:' superType=[ERelationshipType|QUALIFIED_NAME])? & ('description:' description=STRING)? & ('properties:'
		//BEGIN properties=EProperties END)? & ('attributes:' BEGIN atributes=EAttributes END)? & ('interfaces:' BEGIN
		//interfaces=EInterfaces END)? & ('valid_target_types:' '[' valid_target_types=EValidTargetTypes "]")?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('derived_from:' superType=[ERelationshipType|QUALIFIED_NAME])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'derived_from:'
		public Keyword getDerived_fromKeyword_1_0_0() { return cDerived_fromKeyword_1_0_0; }
		
		//superType=[ERelationshipType|QUALIFIED_NAME]
		public Assignment getSuperTypeAssignment_1_0_1() { return cSuperTypeAssignment_1_0_1; }
		
		//[ERelationshipType|QUALIFIED_NAME]
		public CrossReference getSuperTypeERelationshipTypeCrossReference_1_0_1_0() { return cSuperTypeERelationshipTypeCrossReference_1_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getSuperTypeERelationshipTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1() { return cSuperTypeERelationshipTypeQUALIFIED_NAMETerminalRuleCall_1_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
		
		//('properties:' BEGIN properties=EProperties END)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_1_2_0() { return cPropertiesKeyword_1_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_2_1() { return cBEGINTerminalRuleCall_1_2_1; }
		
		//properties=EProperties
		public Assignment getPropertiesAssignment_1_2_2() { return cPropertiesAssignment_1_2_2; }
		
		//EProperties
		public RuleCall getPropertiesEPropertiesParserRuleCall_1_2_2_0() { return cPropertiesEPropertiesParserRuleCall_1_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2_3() { return cENDTerminalRuleCall_1_2_3; }
		
		//('attributes:' BEGIN atributes=EAttributes END)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'attributes:'
		public Keyword getAttributesKeyword_1_3_0() { return cAttributesKeyword_1_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_3_1() { return cBEGINTerminalRuleCall_1_3_1; }
		
		//atributes=EAttributes
		public Assignment getAtributesAssignment_1_3_2() { return cAtributesAssignment_1_3_2; }
		
		//EAttributes
		public RuleCall getAtributesEAttributesParserRuleCall_1_3_2_0() { return cAtributesEAttributesParserRuleCall_1_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3_3() { return cENDTerminalRuleCall_1_3_3; }
		
		//('interfaces:' BEGIN interfaces=EInterfaces END)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'interfaces:'
		public Keyword getInterfacesKeyword_1_4_0() { return cInterfacesKeyword_1_4_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_4_1() { return cBEGINTerminalRuleCall_1_4_1; }
		
		//interfaces=EInterfaces
		public Assignment getInterfacesAssignment_1_4_2() { return cInterfacesAssignment_1_4_2; }
		
		//EInterfaces
		public RuleCall getInterfacesEInterfacesParserRuleCall_1_4_2_0() { return cInterfacesEInterfacesParserRuleCall_1_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_4_3() { return cENDTerminalRuleCall_1_4_3; }
		
		//('valid_target_types:' '[' valid_target_types=EValidTargetTypes "]")?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'valid_target_types:'
		public Keyword getValid_target_typesKeyword_1_5_0() { return cValid_target_typesKeyword_1_5_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_5_1() { return cLeftSquareBracketKeyword_1_5_1; }
		
		//valid_target_types=EValidTargetTypes
		public Assignment getValid_target_typesAssignment_1_5_2() { return cValid_target_typesAssignment_1_5_2; }
		
		//EValidTargetTypes
		public RuleCall getValid_target_typesEValidTargetTypesParserRuleCall_1_5_2_0() { return cValid_target_typesEValidTargetTypesParserRuleCall_1_5_2_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_1_5_3() { return cRightSquareBracketKeyword_1_5_3; }
	}
	public class EValidTargetTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EValidTargetTypes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTargetTypesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTargetTypesECapabilityTypeRefParserRuleCall_0_0 = (RuleCall)cTargetTypesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSourceTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSourceTypeECapabilityTypeRefParserRuleCall_1_1_0 = (RuleCall)cSourceTypeAssignment_1_1.eContents().get(0);
		
		//EValidTargetTypes:
		//	targetTypes+=ECapabilityTypeRef (',' sourceType+=ECapabilityTypeRef)*;
		@Override public ParserRule getRule() { return rule; }
		
		//targetTypes+=ECapabilityTypeRef (',' sourceType+=ECapabilityTypeRef)*
		public Group getGroup() { return cGroup; }
		
		//targetTypes+=ECapabilityTypeRef
		public Assignment getTargetTypesAssignment_0() { return cTargetTypesAssignment_0; }
		
		//ECapabilityTypeRef
		public RuleCall getTargetTypesECapabilityTypeRefParserRuleCall_0_0() { return cTargetTypesECapabilityTypeRefParserRuleCall_0_0; }
		
		//(',' sourceType+=ECapabilityTypeRef)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//sourceType+=ECapabilityTypeRef
		public Assignment getSourceTypeAssignment_1_1() { return cSourceTypeAssignment_1_1; }
		
		//ECapabilityTypeRef
		public RuleCall getSourceTypeECapabilityTypeRefParserRuleCall_1_1_0() { return cSourceTypeECapabilityTypeRefParserRuleCall_1_1_0; }
	}
	public class ECapabilityTypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ECapabilityTypeRef");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cNameECapabilityTypeCrossReference_0 = (CrossReference)cNameAssignment.eContents().get(0);
		private final RuleCall cNameECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1 = (RuleCall)cNameECapabilityTypeCrossReference_0.eContents().get(1);
		
		//ECapabilityTypeRef:
		//	name=[ECapabilityType|QUALIFIED_NAME];
		@Override public ParserRule getRule() { return rule; }
		
		//name=[ECapabilityType|QUALIFIED_NAME]
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//[ECapabilityType|QUALIFIED_NAME]
		public CrossReference getNameECapabilityTypeCrossReference_0() { return cNameECapabilityTypeCrossReference_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1() { return cNameECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1; }
	}
	public class EPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEPropertiesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPropertiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertiesEPropertyDefinitionParserRuleCall_1_0 = (RuleCall)cPropertiesAssignment_1.eContents().get(0);
		
		//EProperties:
		//	{EProperties} properties+=EPropertyDefinition*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EProperties} properties+=EPropertyDefinition*
		public Group getGroup() { return cGroup; }
		
		//{EProperties}
		public Action getEPropertiesAction_0() { return cEPropertiesAction_0; }
		
		//properties+=EPropertyDefinition*
		public Assignment getPropertiesAssignment_1() { return cPropertiesAssignment_1; }
		
		//EPropertyDefinition
		public RuleCall getPropertiesEPropertyDefinitionParserRuleCall_1_0() { return cPropertiesEPropertyDefinitionParserRuleCall_1_0; }
	}
	public class EPropertyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EPropertyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPropertyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertyEPropertyDefinitionBodyParserRuleCall_3_0 = (RuleCall)cPropertyAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EPropertyDefinition:
		//	name=ID ':'
		//	BEGIN
		//	property=EPropertyDefinitionBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' BEGIN property=EPropertyDefinitionBody END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//property=EPropertyDefinitionBody
		public Assignment getPropertyAssignment_3() { return cPropertyAssignment_3; }
		
		//EPropertyDefinitionBody
		public RuleCall getPropertyEPropertyDefinitionBodyParserRuleCall_3_0() { return cPropertyEPropertyDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EPropertyDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EPropertyDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cTypeEDataTypeCrossReference_0_1_0 = (CrossReference)cTypeAssignment_0_1.eContents().get(0);
		private final RuleCall cTypeEDataTypeEDataTypeNameParserRuleCall_0_1_0_1 = (RuleCall)cTypeEDataTypeCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cDescriptionAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cRequiredKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRequiredAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRequiredBOOLEANTerminalRuleCall_2_1_0 = (RuleCall)cRequiredAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cDefaultKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefaultAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDefaultEValueExpressionParserRuleCall_3_1_0 = (RuleCall)cDefaultAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cStatusKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cStatusAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cStatusSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cStatusAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cConstraintsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cConstraintsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cConstraintsEConstraintsParserRuleCall_5_2_0 = (RuleCall)cConstraintsAssignment_5_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Keyword cEntry_schemaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEntry_schemaAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cEntry_schemaEDataTypeCrossReference_6_1_0 = (CrossReference)cEntry_schemaAssignment_6_1.eContents().get(0);
		private final RuleCall cEntry_schemaEDataTypeEDataTypeNameParserRuleCall_6_1_0_1 = (RuleCall)cEntry_schemaEDataTypeCrossReference_6_1_0.eContents().get(1);
		
		//EPropertyDefinitionBody:
		//	'type:' type=[EDataType|EDataTypeName] & ('description:' description=STRING)? & ('required:' required=BOOLEAN)? &
		//	('default:' default=EValueExpression)? & ('status:' status=STRING)? & ('constraints:'
		//	BEGIN
		//	constraints=EConstraints
		//	END)? & ('entry_schema:' entry_schema=[EDataType|EDataTypeName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'type:' type=[EDataType|EDataTypeName] & ('description:' description=STRING)? & ('required:' required=BOOLEAN)? &
		//('default:' default=EValueExpression)? & ('status:' status=STRING)? & ('constraints:' BEGIN constraints=EConstraints
		//END)? & ('entry_schema:' entry_schema=[EDataType|EDataTypeName])?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'type:' type=[EDataType|EDataTypeName]
		public Group getGroup_0() { return cGroup_0; }
		
		//'type:'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//type=[EDataType|EDataTypeName]
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//[EDataType|EDataTypeName]
		public CrossReference getTypeEDataTypeCrossReference_0_1_0() { return cTypeEDataTypeCrossReference_0_1_0; }
		
		//EDataTypeName
		public RuleCall getTypeEDataTypeEDataTypeNameParserRuleCall_0_1_0_1() { return cTypeEDataTypeEDataTypeNameParserRuleCall_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_0() { return cDescriptionKeyword_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1() { return cDescriptionAssignment_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_0; }
		
		//('required:' required=BOOLEAN)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'required:'
		public Keyword getRequiredKeyword_2_0() { return cRequiredKeyword_2_0; }
		
		//required=BOOLEAN
		public Assignment getRequiredAssignment_2_1() { return cRequiredAssignment_2_1; }
		
		//BOOLEAN
		public RuleCall getRequiredBOOLEANTerminalRuleCall_2_1_0() { return cRequiredBOOLEANTerminalRuleCall_2_1_0; }
		
		//('default:' default=EValueExpression)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'default:'
		public Keyword getDefaultKeyword_3_0() { return cDefaultKeyword_3_0; }
		
		//default=EValueExpression
		public Assignment getDefaultAssignment_3_1() { return cDefaultAssignment_3_1; }
		
		//EValueExpression
		public RuleCall getDefaultEValueExpressionParserRuleCall_3_1_0() { return cDefaultEValueExpressionParserRuleCall_3_1_0; }
		
		//('status:' status=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'status:'
		public Keyword getStatusKeyword_4_0() { return cStatusKeyword_4_0; }
		
		//status=STRING
		public Assignment getStatusAssignment_4_1() { return cStatusAssignment_4_1; }
		
		//STRING
		public RuleCall getStatusSTRINGTerminalRuleCall_4_1_0() { return cStatusSTRINGTerminalRuleCall_4_1_0; }
		
		//('constraints:' BEGIN constraints=EConstraints END)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'constraints:'
		public Keyword getConstraintsKeyword_5_0() { return cConstraintsKeyword_5_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_5_1() { return cBEGINTerminalRuleCall_5_1; }
		
		//constraints=EConstraints
		public Assignment getConstraintsAssignment_5_2() { return cConstraintsAssignment_5_2; }
		
		//EConstraints
		public RuleCall getConstraintsEConstraintsParserRuleCall_5_2_0() { return cConstraintsEConstraintsParserRuleCall_5_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5_3() { return cENDTerminalRuleCall_5_3; }
		
		//('entry_schema:' entry_schema=[EDataType|EDataTypeName])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'entry_schema:'
		public Keyword getEntry_schemaKeyword_6_0() { return cEntry_schemaKeyword_6_0; }
		
		//entry_schema=[EDataType|EDataTypeName]
		public Assignment getEntry_schemaAssignment_6_1() { return cEntry_schemaAssignment_6_1; }
		
		//[EDataType|EDataTypeName]
		public CrossReference getEntry_schemaEDataTypeCrossReference_6_1_0() { return cEntry_schemaEDataTypeCrossReference_6_1_0; }
		
		//EDataTypeName
		public RuleCall getEntry_schemaEDataTypeEDataTypeNameParserRuleCall_6_1_0_1() { return cEntry_schemaEDataTypeEDataTypeNameParserRuleCall_6_1_0_1; }
	}
	public class EAttributesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EAttributes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEAttributesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAttributesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAttributesEAttributeDefinitionParserRuleCall_1_0 = (RuleCall)cAttributesAssignment_1.eContents().get(0);
		
		//EAttributes:
		//	{EAttributes} attributes+=EAttributeDefinition*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EAttributes} attributes+=EAttributeDefinition*
		public Group getGroup() { return cGroup; }
		
		//{EAttributes}
		public Action getEAttributesAction_0() { return cEAttributesAction_0; }
		
		//attributes+=EAttributeDefinition*
		public Assignment getAttributesAssignment_1() { return cAttributesAssignment_1; }
		
		//EAttributeDefinition
		public RuleCall getAttributesEAttributeDefinitionParserRuleCall_1_0() { return cAttributesEAttributeDefinitionParserRuleCall_1_0; }
	}
	public class EAttributeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EAttributeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributeEAttributeDefinitionBodyParserRuleCall_3_0 = (RuleCall)cAttributeAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EAttributeDefinition:
		//	name=ID ':'
		//	BEGIN
		//	attribute=EAttributeDefinitionBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' BEGIN attribute=EAttributeDefinitionBody END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//attribute=EAttributeDefinitionBody
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//EAttributeDefinitionBody
		public RuleCall getAttributeEAttributeDefinitionBodyParserRuleCall_3_0() { return cAttributeEAttributeDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EAttributeDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EAttributeDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cTypeEDataTypeCrossReference_0_1_0 = (CrossReference)cTypeAssignment_0_1.eContents().get(0);
		private final RuleCall cTypeEDataTypeEDataTypeNameParserRuleCall_0_1_0_1 = (RuleCall)cTypeEDataTypeCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cDescriptionAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultEValueExpressionParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cStatusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cStatusAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cStatusSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cStatusAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cEntry_schemaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEntry_schemaAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cEntry_schemaEDataTypeCrossReference_4_1_0 = (CrossReference)cEntry_schemaAssignment_4_1.eContents().get(0);
		private final RuleCall cEntry_schemaEDataTypeEDataTypeNameParserRuleCall_4_1_0_1 = (RuleCall)cEntry_schemaEDataTypeCrossReference_4_1_0.eContents().get(1);
		
		//EAttributeDefinitionBody:
		//	'type:' type=[EDataType|EDataTypeName] & ('description:' description=STRING)? & ('default:' default=EValueExpression)?
		//	& ('status:' status=STRING)? & ('entry_schema:' entry_schema=[EDataType|EDataTypeName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'type:' type=[EDataType|EDataTypeName] & ('description:' description=STRING)? & ('default:' default=EValueExpression)? &
		//('status:' status=STRING)? & ('entry_schema:' entry_schema=[EDataType|EDataTypeName])?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'type:' type=[EDataType|EDataTypeName]
		public Group getGroup_0() { return cGroup_0; }
		
		//'type:'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//type=[EDataType|EDataTypeName]
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//[EDataType|EDataTypeName]
		public CrossReference getTypeEDataTypeCrossReference_0_1_0() { return cTypeEDataTypeCrossReference_0_1_0; }
		
		//EDataTypeName
		public RuleCall getTypeEDataTypeEDataTypeNameParserRuleCall_0_1_0_1() { return cTypeEDataTypeEDataTypeNameParserRuleCall_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_0() { return cDescriptionKeyword_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1() { return cDescriptionAssignment_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_0; }
		
		//('default:' default=EValueExpression)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default:'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=EValueExpression
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//EValueExpression
		public RuleCall getDefaultEValueExpressionParserRuleCall_2_1_0() { return cDefaultEValueExpressionParserRuleCall_2_1_0; }
		
		//('status:' status=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'status:'
		public Keyword getStatusKeyword_3_0() { return cStatusKeyword_3_0; }
		
		//status=STRING
		public Assignment getStatusAssignment_3_1() { return cStatusAssignment_3_1; }
		
		//STRING
		public RuleCall getStatusSTRINGTerminalRuleCall_3_1_0() { return cStatusSTRINGTerminalRuleCall_3_1_0; }
		
		//('entry_schema:' entry_schema=[EDataType|EDataTypeName])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'entry_schema:'
		public Keyword getEntry_schemaKeyword_4_0() { return cEntry_schemaKeyword_4_0; }
		
		//entry_schema=[EDataType|EDataTypeName]
		public Assignment getEntry_schemaAssignment_4_1() { return cEntry_schemaAssignment_4_1; }
		
		//[EDataType|EDataTypeName]
		public CrossReference getEntry_schemaEDataTypeCrossReference_4_1_0() { return cEntry_schemaEDataTypeCrossReference_4_1_0; }
		
		//EDataTypeName
		public RuleCall getEntry_schemaEDataTypeEDataTypeNameParserRuleCall_4_1_0_1() { return cEntry_schemaEDataTypeEDataTypeNameParserRuleCall_4_1_0_1; }
	}
	public class EInterfacesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInterfaces");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEInterfacesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cInterfacesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInterfacesEInterfaceDefinitionParserRuleCall_1_0 = (RuleCall)cInterfacesAssignment_1.eContents().get(0);
		
		//EInterfaces:
		//	{EInterfaces} interfaces+=EInterfaceDefinition*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EInterfaces} interfaces+=EInterfaceDefinition*
		public Group getGroup() { return cGroup; }
		
		//{EInterfaces}
		public Action getEInterfacesAction_0() { return cEInterfacesAction_0; }
		
		//interfaces+=EInterfaceDefinition*
		public Assignment getInterfacesAssignment_1() { return cInterfacesAssignment_1; }
		
		//EInterfaceDefinition
		public RuleCall getInterfacesEInterfaceDefinitionParserRuleCall_1_0() { return cInterfacesEInterfaceDefinitionParserRuleCall_1_0; }
	}
	public class EInterfaceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInterfaceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cInterfaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInterfaceEInterfaceDefinitionBodyParserRuleCall_3_0 = (RuleCall)cInterfaceAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EInterfaceDefinition:
		//	name=ID ':'
		//	BEGIN
		//	interface=EInterfaceDefinitionBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' BEGIN interface=EInterfaceDefinitionBody END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//interface=EInterfaceDefinitionBody
		public Assignment getInterfaceAssignment_3() { return cInterfaceAssignment_3; }
		
		//EInterfaceDefinitionBody
		public RuleCall getInterfaceEInterfaceDefinitionBodyParserRuleCall_3_0() { return cInterfaceEInterfaceDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EInterfaceDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInterfaceDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cTypeEInterfaceTypeCrossReference_0_1_0 = (CrossReference)cTypeAssignment_0_1.eContents().get(0);
		private final RuleCall cTypeEInterfaceTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1 = (RuleCall)cTypeEInterfaceTypeCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cInputsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cInputsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cInputsEPropertiesParserRuleCall_1_2_0 = (RuleCall)cInputsAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cOperationsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cOperationsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cOperationsEOperationsParserRuleCall_2_2_0 = (RuleCall)cOperationsAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//EInterfaceDefinitionBody:
		//	'type:' type=[EInterfaceType|QUALIFIED_NAME] & ('inputs:'
		//	BEGIN
		//	inputs=EProperties
		//	END)? & ('operations:'
		//	BEGIN
		//	operations=EOperations
		//	END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'type:' type=[EInterfaceType|QUALIFIED_NAME] & ('inputs:' BEGIN inputs=EProperties END)? & ('operations:' BEGIN
		//operations=EOperations END)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'type:' type=[EInterfaceType|QUALIFIED_NAME]
		public Group getGroup_0() { return cGroup_0; }
		
		//'type:'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//type=[EInterfaceType|QUALIFIED_NAME]
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//[EInterfaceType|QUALIFIED_NAME]
		public CrossReference getTypeEInterfaceTypeCrossReference_0_1_0() { return cTypeEInterfaceTypeCrossReference_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getTypeEInterfaceTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1() { return cTypeEInterfaceTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1; }
		
		//('inputs:' BEGIN inputs=EProperties END)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'inputs:'
		public Keyword getInputsKeyword_1_0() { return cInputsKeyword_1_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_1() { return cBEGINTerminalRuleCall_1_1; }
		
		//inputs=EProperties
		public Assignment getInputsAssignment_1_2() { return cInputsAssignment_1_2; }
		
		//EProperties
		public RuleCall getInputsEPropertiesParserRuleCall_1_2_0() { return cInputsEPropertiesParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
		
		//('operations:' BEGIN operations=EOperations END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'operations:'
		public Keyword getOperationsKeyword_2_0() { return cOperationsKeyword_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_1() { return cBEGINTerminalRuleCall_2_1; }
		
		//operations=EOperations
		public Assignment getOperationsAssignment_2_2() { return cOperationsAssignment_2_2; }
		
		//EOperations
		public RuleCall getOperationsEOperationsParserRuleCall_2_2_0() { return cOperationsEOperationsParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class EOperationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EOperations");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEOperationsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperationsEOperationDefinitionParserRuleCall_1_0 = (RuleCall)cOperationsAssignment_1.eContents().get(0);
		
		//EOperations:
		//	{EOperations} operations+=EOperationDefinition*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EOperations} operations+=EOperationDefinition*
		public Group getGroup() { return cGroup; }
		
		//{EOperations}
		public Action getEOperationsAction_0() { return cEOperationsAction_0; }
		
		//operations+=EOperationDefinition*
		public Assignment getOperationsAssignment_1() { return cOperationsAssignment_1; }
		
		//EOperationDefinition
		public RuleCall getOperationsEOperationDefinitionParserRuleCall_1_0() { return cOperationsEOperationDefinitionParserRuleCall_1_0; }
	}
	public class EOperationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EOperationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOperationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperationEOperationDefinitionBodyParserRuleCall_3_0 = (RuleCall)cOperationAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EOperationDefinition:
		//	name=ID ':'
		//	BEGIN
		//	operation=EOperationDefinitionBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' BEGIN operation=EOperationDefinitionBody END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//operation=EOperationDefinitionBody
		public Assignment getOperationAssignment_3() { return cOperationAssignment_3; }
		
		//EOperationDefinitionBody
		public RuleCall getOperationEOperationDefinitionBodyParserRuleCall_3_0() { return cOperationEOperationDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EOperationDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EOperationDefinitionBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEOperationDefinitionBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_0_1_0 = (RuleCall)cDescriptionAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cInputsKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Assignment cInputsAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cInputsEInputsParserRuleCall_1_1_2_0 = (RuleCall)cInputsAssignment_1_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_1_3 = (RuleCall)cGroup_1_1.eContents().get(3);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cImplementationKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
		private final Assignment cImplementationAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cImplementationEImplementationParserRuleCall_1_2_2_0 = (RuleCall)cImplementationAssignment_1_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
		
		//EOperationDefinitionBody:
		//	{EOperationDefinitionBody} (('description:' description=STRING)? & ('inputs:'
		//	BEGIN
		//	inputs=EInputs
		//	END)? & ('implementation:'
		//	BEGIN
		//	implementation=EImplementation
		//	END)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{EOperationDefinitionBody} (('description:' description=STRING)? & ('inputs:' BEGIN inputs=EInputs END)? &
		//('implementation:' BEGIN implementation=EImplementation END)?)
		public Group getGroup() { return cGroup; }
		
		//{EOperationDefinitionBody}
		public Action getEOperationDefinitionBodyAction_0() { return cEOperationDefinitionBodyAction_0; }
		
		//(('description:' description=STRING)? & ('inputs:' BEGIN inputs=EInputs END)? & ('implementation:' BEGIN
		//implementation=EImplementation END)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_0_0() { return cDescriptionKeyword_1_0_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_0_1() { return cDescriptionAssignment_1_0_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_0_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_0_1_0; }
		
		//('inputs:' BEGIN inputs=EInputs END)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'inputs:'
		public Keyword getInputsKeyword_1_1_0() { return cInputsKeyword_1_1_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_1_1() { return cBEGINTerminalRuleCall_1_1_1; }
		
		//inputs=EInputs
		public Assignment getInputsAssignment_1_1_2() { return cInputsAssignment_1_1_2; }
		
		//EInputs
		public RuleCall getInputsEInputsParserRuleCall_1_1_2_0() { return cInputsEInputsParserRuleCall_1_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_1_3() { return cENDTerminalRuleCall_1_1_3; }
		
		//('implementation:' BEGIN implementation=EImplementation END)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'implementation:'
		public Keyword getImplementationKeyword_1_2_0() { return cImplementationKeyword_1_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_2_1() { return cBEGINTerminalRuleCall_1_2_1; }
		
		//implementation=EImplementation
		public Assignment getImplementationAssignment_1_2_2() { return cImplementationAssignment_1_2_2; }
		
		//EImplementation
		public RuleCall getImplementationEImplementationParserRuleCall_1_2_2_0() { return cImplementationEImplementationParserRuleCall_1_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2_3() { return cENDTerminalRuleCall_1_2_3; }
	}
	public class EImplementationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EImplementation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrimaryAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPrimaryEPrimaryParserRuleCall_0_0 = (RuleCall)cPrimaryAssignment_0.eContents().get(0);
		private final Assignment cDependenciesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDependenciesEDependenciesParserRuleCall_1_0 = (RuleCall)cDependenciesAssignment_1.eContents().get(0);
		
		//EImplementation:
		//	primary=EPrimary dependencies=EDependencies?;
		@Override public ParserRule getRule() { return rule; }
		
		//primary=EPrimary dependencies=EDependencies?
		public Group getGroup() { return cGroup; }
		
		//primary=EPrimary
		public Assignment getPrimaryAssignment_0() { return cPrimaryAssignment_0; }
		
		//EPrimary
		public RuleCall getPrimaryEPrimaryParserRuleCall_0_0() { return cPrimaryEPrimaryParserRuleCall_0_0; }
		
		//dependencies=EDependencies?
		public Assignment getDependenciesAssignment_1() { return cDependenciesAssignment_1; }
		
		//EDependencies
		public RuleCall getDependenciesEDependenciesParserRuleCall_1_0() { return cDependenciesEDependenciesParserRuleCall_1_0; }
	}
	public class EPrimaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EPrimary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cPrimaryKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cFileAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cFileSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cFileAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cRelative_pathKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cRelative_pathAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRelative_pathSTRINGTerminalRuleCall_1_2_0 = (RuleCall)cRelative_pathAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//EPrimary:
		//	('primary:' file=STRING) (BEGIN 'relative_path:' relative_path=STRING END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//('primary:' file=STRING) (BEGIN 'relative_path:' relative_path=STRING END)?
		public Group getGroup() { return cGroup; }
		
		//('primary:' file=STRING)
		public Group getGroup_0() { return cGroup_0; }
		
		//'primary:'
		public Keyword getPrimaryKeyword_0_0() { return cPrimaryKeyword_0_0; }
		
		//file=STRING
		public Assignment getFileAssignment_0_1() { return cFileAssignment_0_1; }
		
		//STRING
		public RuleCall getFileSTRINGTerminalRuleCall_0_1_0() { return cFileSTRINGTerminalRuleCall_0_1_0; }
		
		//(BEGIN 'relative_path:' relative_path=STRING END)?
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//'relative_path:'
		public Keyword getRelative_pathKeyword_1_1() { return cRelative_pathKeyword_1_1; }
		
		//relative_path=STRING
		public Assignment getRelative_pathAssignment_1_2() { return cRelative_pathAssignment_1_2; }
		
		//STRING
		public RuleCall getRelative_pathSTRINGTerminalRuleCall_1_2_0() { return cRelative_pathSTRINGTerminalRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class EDependenciesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EDependencies");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDependenciesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFilesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFilesEDependencyFilesParserRuleCall_2_0 = (RuleCall)cFilesAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cBEGINTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Keyword cRelative_pathKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRelative_pathAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRelative_pathSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cRelative_pathAssignment_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		
		//EDependencies:
		//	'dependencies:' '[' files=EDependencyFiles? ']' (BEGIN 'relative_path:' relative_path=STRING END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'dependencies:' '[' files=EDependencyFiles? ']' (BEGIN 'relative_path:' relative_path=STRING END)?
		public Group getGroup() { return cGroup; }
		
		//'dependencies:'
		public Keyword getDependenciesKeyword_0() { return cDependenciesKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//files=EDependencyFiles?
		public Assignment getFilesAssignment_2() { return cFilesAssignment_2; }
		
		//EDependencyFiles
		public RuleCall getFilesEDependencyFilesParserRuleCall_2_0() { return cFilesEDependencyFilesParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
		
		//(BEGIN 'relative_path:' relative_path=STRING END)?
		public Group getGroup_4() { return cGroup_4; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4_0() { return cBEGINTerminalRuleCall_4_0; }
		
		//'relative_path:'
		public Keyword getRelative_pathKeyword_4_1() { return cRelative_pathKeyword_4_1; }
		
		//relative_path=STRING
		public Assignment getRelative_pathAssignment_4_2() { return cRelative_pathAssignment_4_2; }
		
		//STRING
		public RuleCall getRelative_pathSTRINGTerminalRuleCall_4_2_0() { return cRelative_pathSTRINGTerminalRuleCall_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4_3() { return cENDTerminalRuleCall_4_3; }
	}
	public class EDependencyFilesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EDependencyFiles");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFilesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFilesSTRINGTerminalRuleCall_0_0 = (RuleCall)cFilesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cFilesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cFilesSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cFilesAssignment_1_1.eContents().get(0);
		
		//EDependencyFiles:
		//	files+=STRING (',' files+=STRING)*;
		@Override public ParserRule getRule() { return rule; }
		
		//files+=STRING (',' files+=STRING)*
		public Group getGroup() { return cGroup; }
		
		//files+=STRING
		public Assignment getFilesAssignment_0() { return cFilesAssignment_0; }
		
		//STRING
		public RuleCall getFilesSTRINGTerminalRuleCall_0_0() { return cFilesSTRINGTerminalRuleCall_0_0; }
		
		//(',' files+=STRING)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//files+=STRING
		public Assignment getFilesAssignment_1_1() { return cFilesAssignment_1_1; }
		
		//STRING
		public RuleCall getFilesSTRINGTerminalRuleCall_1_1_0() { return cFilesSTRINGTerminalRuleCall_1_1_0; }
	}
	public class EInputsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInputs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEInputsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cInputsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInputsEParameterDefinitionParserRuleCall_1_0 = (RuleCall)cInputsAssignment_1.eContents().get(0);
		
		//EInputs:
		//	{EInputs} inputs+=EParameterDefinition*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EInputs} inputs+=EParameterDefinition*
		public Group getGroup() { return cGroup; }
		
		//{EInputs}
		public Action getEInputsAction_0() { return cEInputsAction_0; }
		
		//inputs+=EParameterDefinition*
		public Assignment getInputsAssignment_1() { return cInputsAssignment_1; }
		
		//EParameterDefinition
		public RuleCall getInputsEParameterDefinitionParserRuleCall_1_0() { return cInputsEParameterDefinitionParserRuleCall_1_0; }
	}
	public class EParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EParameterDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cParameterAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParameterEParameterDefinitionBodyParserRuleCall_3_0 = (RuleCall)cParameterAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		////inputs of operation definition in NodeTypes are ParameterDefinition
		//EParameterDefinition:
		//	name=ID ':'
		//	BEGIN
		//	parameter=EParameterDefinitionBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' BEGIN parameter=EParameterDefinitionBody END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//parameter=EParameterDefinitionBody
		public Assignment getParameterAssignment_3() { return cParameterAssignment_3; }
		
		//EParameterDefinitionBody
		public RuleCall getParameterEParameterDefinitionBodyParserRuleCall_3_0() { return cParameterEParameterDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EParameterDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EParameterDefinitionBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEParameterDefinitionBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cTypeEDataTypeCrossReference_1_0_1_0 = (CrossReference)cTypeAssignment_1_0_1.eContents().get(0);
		private final RuleCall cTypeEDataTypeEDataTypeNameParserRuleCall_1_0_1_0_1 = (RuleCall)cTypeEDataTypeCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cValueKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cValueEValueExpressionParserRuleCall_1_1_1_0 = (RuleCall)cValueAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cDefaultKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cDefaultAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDefaultEValueExpressionParserRuleCall_1_2_1_0 = (RuleCall)cDefaultAssignment_1_2_1.eContents().get(0);
		
		//EParameterDefinitionBody:
		//	{EParameterDefinitionBody} (('type:' type=[EDataType|EDataTypeName])? & ('value:' value=EValueExpression)? &
		//	('default:' default=EValueExpression)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{EParameterDefinitionBody} (('type:' type=[EDataType|EDataTypeName])? & ('value:' value=EValueExpression)? & ('default:'
		//default=EValueExpression)?)
		public Group getGroup() { return cGroup; }
		
		//{EParameterDefinitionBody}
		public Action getEParameterDefinitionBodyAction_0() { return cEParameterDefinitionBodyAction_0; }
		
		//(('type:' type=[EDataType|EDataTypeName])? & ('value:' value=EValueExpression)? & ('default:'
		//default=EValueExpression)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('type:' type=[EDataType|EDataTypeName])?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'type:'
		public Keyword getTypeKeyword_1_0_0() { return cTypeKeyword_1_0_0; }
		
		//type=[EDataType|EDataTypeName]
		public Assignment getTypeAssignment_1_0_1() { return cTypeAssignment_1_0_1; }
		
		//[EDataType|EDataTypeName]
		public CrossReference getTypeEDataTypeCrossReference_1_0_1_0() { return cTypeEDataTypeCrossReference_1_0_1_0; }
		
		//EDataTypeName
		public RuleCall getTypeEDataTypeEDataTypeNameParserRuleCall_1_0_1_0_1() { return cTypeEDataTypeEDataTypeNameParserRuleCall_1_0_1_0_1; }
		
		//('value:' value=EValueExpression)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'value:'
		public Keyword getValueKeyword_1_1_0() { return cValueKeyword_1_1_0; }
		
		//value=EValueExpression
		public Assignment getValueAssignment_1_1_1() { return cValueAssignment_1_1_1; }
		
		//EValueExpression
		public RuleCall getValueEValueExpressionParserRuleCall_1_1_1_0() { return cValueEValueExpressionParserRuleCall_1_1_1_0; }
		
		//('default:' default=EValueExpression)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'default:'
		public Keyword getDefaultKeyword_1_2_0() { return cDefaultKeyword_1_2_0; }
		
		//default=EValueExpression
		public Assignment getDefaultAssignment_1_2_1() { return cDefaultAssignment_1_2_1; }
		
		//EValueExpression
		public RuleCall getDefaultEValueExpressionParserRuleCall_1_2_1_0() { return cDefaultEValueExpressionParserRuleCall_1_2_1_0; }
	}
	public class EValueExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EValueExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESingleValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EValueExpression:
		//	ESingleValue | EFunction;
		@Override public ParserRule getRule() { return rule; }
		
		//ESingleValue | EFunction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESingleValue
		public RuleCall getESingleValueParserRuleCall_0() { return cESingleValueParserRuleCall_0; }
		
		//EFunction
		public RuleCall getEFunctionParserRuleCall_1() { return cEFunctionParserRuleCall_1; }
	}
	public class EFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGetPropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGetAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGetInputParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EFunction:
		//	GetProperty | GetAttribute | GetInput;
		@Override public ParserRule getRule() { return rule; }
		
		//GetProperty | GetAttribute | GetInput
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GetProperty
		public RuleCall getGetPropertyParserRuleCall_0() { return cGetPropertyParserRuleCall_0; }
		
		//GetAttribute
		public RuleCall getGetAttributeParserRuleCall_1() { return cGetAttributeParserRuleCall_1; }
		
		//GetInput
		public RuleCall getGetInputParserRuleCall_2() { return cGetInputParserRuleCall_2; }
	}
	public class GetInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.GetInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGet_inputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInputAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cInputEParameterDefinitionCrossReference_1_0 = (CrossReference)cInputAssignment_1.eContents().get(0);
		private final RuleCall cInputEParameterDefinitionIDTerminalRuleCall_1_0_1 = (RuleCall)cInputEParameterDefinitionCrossReference_1_0.eContents().get(1);
		
		//GetInput:
		//	'get_input:' input=[EParameterDefinition];
		@Override public ParserRule getRule() { return rule; }
		
		//'get_input:' input=[EParameterDefinition]
		public Group getGroup() { return cGroup; }
		
		//'get_input:'
		public Keyword getGet_inputKeyword_0() { return cGet_inputKeyword_0; }
		
		//input=[EParameterDefinition]
		public Assignment getInputAssignment_1() { return cInputAssignment_1; }
		
		//[EParameterDefinition]
		public CrossReference getInputEParameterDefinitionCrossReference_1_0() { return cInputEParameterDefinitionCrossReference_1_0; }
		
		//ID
		public RuleCall getInputEParameterDefinitionIDTerminalRuleCall_1_0_1() { return cInputEParameterDefinitionIDTerminalRuleCall_1_0_1; }
	}
	public class GetAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.GetAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGet_attributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeGetAttributeBodyParserRuleCall_2_0 = (RuleCall)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//GetAttribute:
		//	'get_attribute:'
		//	BEGIN
		//	attribute=GetAttributeBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//'get_attribute:' BEGIN attribute=GetAttributeBody END
		public Group getGroup() { return cGroup; }
		
		//'get_attribute:'
		public Keyword getGet_attributeKeyword_0() { return cGet_attributeKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//attribute=GetAttributeBody
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//GetAttributeBody
		public RuleCall getAttributeGetAttributeBodyParserRuleCall_2_0() { return cAttributeGetAttributeBodyParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class GetAttributeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.GetAttributeBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cAttributeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cAttributeEAttributeDefinitionCrossReference_0_1_0 = (CrossReference)cAttributeAssignment_0_1.eContents().get(0);
		private final RuleCall cAttributeEAttributeDefinitionQUALIFIED_NAMETerminalRuleCall_0_1_0_1 = (RuleCall)cAttributeEAttributeDefinitionCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cEntityKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEntityAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEntityENTITYTerminalRuleCall_1_1_0 = (RuleCall)cEntityAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cReq_capKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cReq_capAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cReq_capEReqOrCapCrossReference_2_1_0 = (CrossReference)cReq_capAssignment_2_1.eContents().get(0);
		private final RuleCall cReq_capEReqOrCapQUALIFIED_NAMETerminalRuleCall_2_1_0_1 = (RuleCall)cReq_capEReqOrCapCrossReference_2_1_0.eContents().get(1);
		
		//GetAttributeBody:
		//	'attribute:' attribute=[EAttributeDefinition|QUALIFIED_NAME] & 'entity:' entity=ENTITY & ('req_cap:'
		//	req_cap=[EReqOrCap|QUALIFIED_NAME])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute:' attribute=[EAttributeDefinition|QUALIFIED_NAME] & 'entity:' entity=ENTITY & ('req_cap:'
		//req_cap=[EReqOrCap|QUALIFIED_NAME])?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'attribute:' attribute=[EAttributeDefinition|QUALIFIED_NAME]
		public Group getGroup_0() { return cGroup_0; }
		
		//'attribute:'
		public Keyword getAttributeKeyword_0_0() { return cAttributeKeyword_0_0; }
		
		//attribute=[EAttributeDefinition|QUALIFIED_NAME]
		public Assignment getAttributeAssignment_0_1() { return cAttributeAssignment_0_1; }
		
		//[EAttributeDefinition|QUALIFIED_NAME]
		public CrossReference getAttributeEAttributeDefinitionCrossReference_0_1_0() { return cAttributeEAttributeDefinitionCrossReference_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getAttributeEAttributeDefinitionQUALIFIED_NAMETerminalRuleCall_0_1_0_1() { return cAttributeEAttributeDefinitionQUALIFIED_NAMETerminalRuleCall_0_1_0_1; }
		
		//'entity:' entity=ENTITY
		public Group getGroup_1() { return cGroup_1; }
		
		//'entity:'
		public Keyword getEntityKeyword_1_0() { return cEntityKeyword_1_0; }
		
		//entity=ENTITY
		public Assignment getEntityAssignment_1_1() { return cEntityAssignment_1_1; }
		
		//ENTITY
		public RuleCall getEntityENTITYTerminalRuleCall_1_1_0() { return cEntityENTITYTerminalRuleCall_1_1_0; }
		
		//('req_cap:' req_cap=[EReqOrCap|QUALIFIED_NAME])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'req_cap:'
		public Keyword getReq_capKeyword_2_0() { return cReq_capKeyword_2_0; }
		
		//req_cap=[EReqOrCap|QUALIFIED_NAME]
		public Assignment getReq_capAssignment_2_1() { return cReq_capAssignment_2_1; }
		
		//[EReqOrCap|QUALIFIED_NAME]
		public CrossReference getReq_capEReqOrCapCrossReference_2_1_0() { return cReq_capEReqOrCapCrossReference_2_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getReq_capEReqOrCapQUALIFIED_NAMETerminalRuleCall_2_1_0_1() { return cReq_capEReqOrCapQUALIFIED_NAMETerminalRuleCall_2_1_0_1; }
	}
	public class GetPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.GetProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGet_propertyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cPropertyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertyGetPropertyBodyParserRuleCall_2_0 = (RuleCall)cPropertyAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//GetProperty:
		//	'get_property:'
		//	BEGIN
		//	property=GetPropertyBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//'get_property:' BEGIN property=GetPropertyBody END
		public Group getGroup() { return cGroup; }
		
		//'get_property:'
		public Keyword getGet_propertyKeyword_0() { return cGet_propertyKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//property=GetPropertyBody
		public Assignment getPropertyAssignment_2() { return cPropertyAssignment_2; }
		
		//GetPropertyBody
		public RuleCall getPropertyGetPropertyBodyParserRuleCall_2_0() { return cPropertyGetPropertyBodyParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class GetPropertyBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.GetPropertyBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cPropertyKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPropertyAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cPropertyEPropertyDefinitionCrossReference_0_1_0 = (CrossReference)cPropertyAssignment_0_1.eContents().get(0);
		private final RuleCall cPropertyEPropertyDefinitionQUALIFIED_NAMETerminalRuleCall_0_1_0_1 = (RuleCall)cPropertyEPropertyDefinitionCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cEntityKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEntityAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEntityENTITYTerminalRuleCall_1_1_0 = (RuleCall)cEntityAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cReq_capKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cReq_capAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cReq_capEReqOrCapCrossReference_2_1_0 = (CrossReference)cReq_capAssignment_2_1.eContents().get(0);
		private final RuleCall cReq_capEReqOrCapQUALIFIED_NAMETerminalRuleCall_2_1_0_1 = (RuleCall)cReq_capEReqOrCapCrossReference_2_1_0.eContents().get(1);
		
		//GetPropertyBody:
		//	'property:' property=[EPropertyDefinition|QUALIFIED_NAME] & 'entity:' entity=ENTITY & ('req_cap:'
		//	req_cap=[EReqOrCap|QUALIFIED_NAME])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'property:' property=[EPropertyDefinition|QUALIFIED_NAME] & 'entity:' entity=ENTITY & ('req_cap:'
		//req_cap=[EReqOrCap|QUALIFIED_NAME])?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'property:' property=[EPropertyDefinition|QUALIFIED_NAME]
		public Group getGroup_0() { return cGroup_0; }
		
		//'property:'
		public Keyword getPropertyKeyword_0_0() { return cPropertyKeyword_0_0; }
		
		//property=[EPropertyDefinition|QUALIFIED_NAME]
		public Assignment getPropertyAssignment_0_1() { return cPropertyAssignment_0_1; }
		
		//[EPropertyDefinition|QUALIFIED_NAME]
		public CrossReference getPropertyEPropertyDefinitionCrossReference_0_1_0() { return cPropertyEPropertyDefinitionCrossReference_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getPropertyEPropertyDefinitionQUALIFIED_NAMETerminalRuleCall_0_1_0_1() { return cPropertyEPropertyDefinitionQUALIFIED_NAMETerminalRuleCall_0_1_0_1; }
		
		//'entity:' entity=ENTITY
		public Group getGroup_1() { return cGroup_1; }
		
		//'entity:'
		public Keyword getEntityKeyword_1_0() { return cEntityKeyword_1_0; }
		
		//entity=ENTITY
		public Assignment getEntityAssignment_1_1() { return cEntityAssignment_1_1; }
		
		//ENTITY
		public RuleCall getEntityENTITYTerminalRuleCall_1_1_0() { return cEntityENTITYTerminalRuleCall_1_1_0; }
		
		//('req_cap:' req_cap=[EReqOrCap|QUALIFIED_NAME])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'req_cap:'
		public Keyword getReq_capKeyword_2_0() { return cReq_capKeyword_2_0; }
		
		//req_cap=[EReqOrCap|QUALIFIED_NAME]
		public Assignment getReq_capAssignment_2_1() { return cReq_capAssignment_2_1; }
		
		//[EReqOrCap|QUALIFIED_NAME]
		public CrossReference getReq_capEReqOrCapCrossReference_2_1_0() { return cReq_capEReqOrCapCrossReference_2_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getReq_capEReqOrCapQUALIFIED_NAMETerminalRuleCall_2_1_0_1() { return cReq_capEReqOrCapQUALIFIED_NAMETerminalRuleCall_2_1_0_1; }
	}
	public class ECapabilitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ECapabilities");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cECapabilitiesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCapabilitiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCapabilitiesECapabilityDefinitionParserRuleCall_1_0 = (RuleCall)cCapabilitiesAssignment_1.eContents().get(0);
		
		//ECapabilities:
		//	{ECapabilities} capabilities+=ECapabilityDefinition*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ECapabilities} capabilities+=ECapabilityDefinition*
		public Group getGroup() { return cGroup; }
		
		//{ECapabilities}
		public Action getECapabilitiesAction_0() { return cECapabilitiesAction_0; }
		
		//capabilities+=ECapabilityDefinition*
		public Assignment getCapabilitiesAssignment_1() { return cCapabilitiesAssignment_1; }
		
		//ECapabilityDefinition
		public RuleCall getCapabilitiesECapabilityDefinitionParserRuleCall_1_0() { return cCapabilitiesECapabilityDefinitionParserRuleCall_1_0; }
	}
	public class ECapabilityDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ECapabilityDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cCapabilityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCapabilityECapabilityDefinitionBodyParserRuleCall_3_0 = (RuleCall)cCapabilityAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ECapabilityDefinition:
		//	name=ID ':'
		//	BEGIN
		//	capability=ECapabilityDefinitionBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' BEGIN capability=ECapabilityDefinitionBody END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//capability=ECapabilityDefinitionBody
		public Assignment getCapabilityAssignment_3() { return cCapabilityAssignment_3; }
		
		//ECapabilityDefinitionBody
		public RuleCall getCapabilityECapabilityDefinitionBodyParserRuleCall_3_0() { return cCapabilityECapabilityDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ECapabilityDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ECapabilityDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cTypeECapabilityTypeCrossReference_0_1_0 = (CrossReference)cTypeAssignment_0_1.eContents().get(0);
		private final RuleCall cTypeECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1 = (RuleCall)cTypeECapabilityTypeCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cDescriptionAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cPropertiesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cPropertiesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cPropertiesEPropertiesParserRuleCall_2_2_0 = (RuleCall)cPropertiesAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cAttributesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cAttributesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAttributesEAttributesParserRuleCall_3_2_0 = (RuleCall)cAttributesAssignment_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cValid_source_typesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cValid_source_typesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cValid_source_typesEValidSourceTypeParserRuleCall_4_2_0 = (RuleCall)cValid_source_typesAssignment_4_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cOccurrencesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cOccurrences_startAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cOccurrences_startEAlphaNumericValueParserRuleCall_5_2_0 = (RuleCall)cOccurrences_startAssignment_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cOccurrences_endAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cOccurrences_endEAlphaNumericValueParserRuleCall_5_4_0 = (RuleCall)cOccurrences_endAssignment_5_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		
		//ECapabilityDefinitionBody:
		//	'type:' type=[ECapabilityType|QUALIFIED_NAME] & ('description:' description=STRING)? & ('properties:'
		//	BEGIN
		//	properties=EProperties
		//	END)? & ('attributes:'
		//	BEGIN
		//	attributes=EAttributes
		//	END)? & ('valid_source_types:' '[' valid_source_types+=EValidSourceType? ']')? & ('occurrences:' '['
		//	occurrences_start=EAlphaNumericValue ',' occurrences_end=EAlphaNumericValue ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'type:' type=[ECapabilityType|QUALIFIED_NAME] & ('description:' description=STRING)? & ('properties:' BEGIN
		//properties=EProperties END)? & ('attributes:' BEGIN attributes=EAttributes END)? & ('valid_source_types:' '['
		//valid_source_types+=EValidSourceType? ']')? & ('occurrences:' '[' occurrences_start=EAlphaNumericValue ','
		//occurrences_end=EAlphaNumericValue ']')?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'type:' type=[ECapabilityType|QUALIFIED_NAME]
		public Group getGroup_0() { return cGroup_0; }
		
		//'type:'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//type=[ECapabilityType|QUALIFIED_NAME]
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//[ECapabilityType|QUALIFIED_NAME]
		public CrossReference getTypeECapabilityTypeCrossReference_0_1_0() { return cTypeECapabilityTypeCrossReference_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getTypeECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1() { return cTypeECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1; }
		
		//('description:' description=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_0() { return cDescriptionKeyword_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1() { return cDescriptionAssignment_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_0; }
		
		//('properties:' BEGIN properties=EProperties END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_2_0() { return cPropertiesKeyword_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_1() { return cBEGINTerminalRuleCall_2_1; }
		
		//properties=EProperties
		public Assignment getPropertiesAssignment_2_2() { return cPropertiesAssignment_2_2; }
		
		//EProperties
		public RuleCall getPropertiesEPropertiesParserRuleCall_2_2_0() { return cPropertiesEPropertiesParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
		
		//('attributes:' BEGIN attributes=EAttributes END)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'attributes:'
		public Keyword getAttributesKeyword_3_0() { return cAttributesKeyword_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3_1() { return cBEGINTerminalRuleCall_3_1; }
		
		//attributes=EAttributes
		public Assignment getAttributesAssignment_3_2() { return cAttributesAssignment_3_2; }
		
		//EAttributes
		public RuleCall getAttributesEAttributesParserRuleCall_3_2_0() { return cAttributesEAttributesParserRuleCall_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3_3() { return cENDTerminalRuleCall_3_3; }
		
		//('valid_source_types:' '[' valid_source_types+=EValidSourceType? ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'valid_source_types:'
		public Keyword getValid_source_typesKeyword_4_0() { return cValid_source_typesKeyword_4_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_1() { return cLeftSquareBracketKeyword_4_1; }
		
		//valid_source_types+=EValidSourceType?
		public Assignment getValid_source_typesAssignment_4_2() { return cValid_source_typesAssignment_4_2; }
		
		//EValidSourceType
		public RuleCall getValid_source_typesEValidSourceTypeParserRuleCall_4_2_0() { return cValid_source_typesEValidSourceTypeParserRuleCall_4_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_3() { return cRightSquareBracketKeyword_4_3; }
		
		//('occurrences:' '[' occurrences_start=EAlphaNumericValue ',' occurrences_end=EAlphaNumericValue ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'occurrences:'
		public Keyword getOccurrencesKeyword_5_0() { return cOccurrencesKeyword_5_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_1() { return cLeftSquareBracketKeyword_5_1; }
		
		//occurrences_start=EAlphaNumericValue
		public Assignment getOccurrences_startAssignment_5_2() { return cOccurrences_startAssignment_5_2; }
		
		//EAlphaNumericValue
		public RuleCall getOccurrences_startEAlphaNumericValueParserRuleCall_5_2_0() { return cOccurrences_startEAlphaNumericValueParserRuleCall_5_2_0; }
		
		//','
		public Keyword getCommaKeyword_5_3() { return cCommaKeyword_5_3; }
		
		//occurrences_end=EAlphaNumericValue
		public Assignment getOccurrences_endAssignment_5_4() { return cOccurrences_endAssignment_5_4; }
		
		//EAlphaNumericValue
		public RuleCall getOccurrences_endEAlphaNumericValueParserRuleCall_5_4_0() { return cOccurrences_endEAlphaNumericValueParserRuleCall_5_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_5() { return cRightSquareBracketKeyword_5_5; }
	}
	public class EValidSourceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EValidSourceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceTypesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSourceTypesENodeTypeRefParserRuleCall_0_0 = (RuleCall)cSourceTypesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSourceTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSourceTypeENodeTypeRefParserRuleCall_1_1_0 = (RuleCall)cSourceTypeAssignment_1_1.eContents().get(0);
		
		//EValidSourceType:
		//	sourceTypes+=ENodeTypeRef (',' sourceType+=ENodeTypeRef)*;
		@Override public ParserRule getRule() { return rule; }
		
		//sourceTypes+=ENodeTypeRef (',' sourceType+=ENodeTypeRef)*
		public Group getGroup() { return cGroup; }
		
		//sourceTypes+=ENodeTypeRef
		public Assignment getSourceTypesAssignment_0() { return cSourceTypesAssignment_0; }
		
		//ENodeTypeRef
		public RuleCall getSourceTypesENodeTypeRefParserRuleCall_0_0() { return cSourceTypesENodeTypeRefParserRuleCall_0_0; }
		
		//(',' sourceType+=ENodeTypeRef)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//sourceType+=ENodeTypeRef
		public Assignment getSourceTypeAssignment_1_1() { return cSourceTypeAssignment_1_1; }
		
		//ENodeTypeRef
		public RuleCall getSourceTypeENodeTypeRefParserRuleCall_1_1_0() { return cSourceTypeENodeTypeRefParserRuleCall_1_1_0; }
	}
	public class ENodeTypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ENodeTypeRef");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cNameENodeTypeCrossReference_0 = (CrossReference)cNameAssignment.eContents().get(0);
		private final RuleCall cNameENodeTypeQUALIFIED_NAMETerminalRuleCall_0_1 = (RuleCall)cNameENodeTypeCrossReference_0.eContents().get(1);
		
		//ENodeTypeRef:
		//	name=[ENodeType|QUALIFIED_NAME];
		@Override public ParserRule getRule() { return rule; }
		
		//name=[ENodeType|QUALIFIED_NAME]
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//[ENodeType|QUALIFIED_NAME]
		public CrossReference getNameENodeTypeCrossReference_0() { return cNameENodeTypeCrossReference_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameENodeTypeQUALIFIED_NAMETerminalRuleCall_0_1() { return cNameENodeTypeQUALIFIED_NAMETerminalRuleCall_0_1; }
	}
	public class ERequirementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ERequirements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cERequirementsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cRequirementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRequirementsERequirementDefinitionParserRuleCall_1_0 = (RuleCall)cRequirementsAssignment_1.eContents().get(0);
		
		//ERequirements:
		//	{ERequirements} requirements+=ERequirementDefinition*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ERequirements} requirements+=ERequirementDefinition*
		public Group getGroup() { return cGroup; }
		
		//{ERequirements}
		public Action getERequirementsAction_0() { return cERequirementsAction_0; }
		
		//requirements+=ERequirementDefinition*
		public Assignment getRequirementsAssignment_1() { return cRequirementsAssignment_1; }
		
		//ERequirementDefinition
		public RuleCall getRequirementsERequirementDefinitionParserRuleCall_1_0() { return cRequirementsERequirementDefinitionParserRuleCall_1_0; }
	}
	public class ERequirementDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ERequirementDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cRequirementAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRequirementERequirementDefinitionBodyParserRuleCall_3_0 = (RuleCall)cRequirementAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ERequirementDefinition:
		//	name=ID ':'
		//	BEGIN
		//	requirement=ERequirementDefinitionBody
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' BEGIN requirement=ERequirementDefinitionBody END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//requirement=ERequirementDefinitionBody
		public Assignment getRequirementAssignment_3() { return cRequirementAssignment_3; }
		
		//ERequirementDefinitionBody
		public RuleCall getRequirementERequirementDefinitionBodyParserRuleCall_3_0() { return cRequirementERequirementDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ERequirementDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ERequirementDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cCapabilityKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cCapabilityAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cCapabilityECapabilityTypeCrossReference_0_1_0 = (CrossReference)cCapabilityAssignment_0_1.eContents().get(0);
		private final RuleCall cCapabilityECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1 = (RuleCall)cCapabilityECapabilityTypeCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cNodeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNodeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cNodeENodeTypeCrossReference_1_1_0 = (CrossReference)cNodeAssignment_1_1.eContents().get(0);
		private final RuleCall cNodeENodeTypeQUALIFIED_NAMETerminalRuleCall_1_1_0_1 = (RuleCall)cNodeENodeTypeCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cRelationshipKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cRelationshipERelationshipTypeCrossReference_2_1_0 = (CrossReference)cRelationshipAssignment_2_1.eContents().get(0);
		private final RuleCall cRelationshipERelationshipTypeQUALIFIED_NAMETerminalRuleCall_2_1_0_1 = (RuleCall)cRelationshipERelationshipTypeCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cOccurrencesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cStartAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cStartEAlphaNumericValueParserRuleCall_3_2_0 = (RuleCall)cStartAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cEndAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cEndEAlphaNumericValueParserRuleCall_3_4_0 = (RuleCall)cEndAssignment_3_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//ERequirementDefinitionBody:
		//	'capability:' capability=[ECapabilityType|QUALIFIED_NAME] & ('node:' node=[ENodeType|QUALIFIED_NAME])? &
		//	('relationship:' relationship=[ERelationshipType|QUALIFIED_NAME])? & ('occurrences:' '[' start=EAlphaNumericValue ','
		//	end=EAlphaNumericValue ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'capability:' capability=[ECapabilityType|QUALIFIED_NAME] & ('node:' node=[ENodeType|QUALIFIED_NAME])? &
		//('relationship:' relationship=[ERelationshipType|QUALIFIED_NAME])? & ('occurrences:' '[' start=EAlphaNumericValue ','
		//end=EAlphaNumericValue ']')?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'capability:' capability=[ECapabilityType|QUALIFIED_NAME]
		public Group getGroup_0() { return cGroup_0; }
		
		//'capability:'
		public Keyword getCapabilityKeyword_0_0() { return cCapabilityKeyword_0_0; }
		
		//capability=[ECapabilityType|QUALIFIED_NAME]
		public Assignment getCapabilityAssignment_0_1() { return cCapabilityAssignment_0_1; }
		
		//[ECapabilityType|QUALIFIED_NAME]
		public CrossReference getCapabilityECapabilityTypeCrossReference_0_1_0() { return cCapabilityECapabilityTypeCrossReference_0_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getCapabilityECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1() { return cCapabilityECapabilityTypeQUALIFIED_NAMETerminalRuleCall_0_1_0_1; }
		
		//('node:' node=[ENodeType|QUALIFIED_NAME])?
		public Group getGroup_1() { return cGroup_1; }
		
		//'node:'
		public Keyword getNodeKeyword_1_0() { return cNodeKeyword_1_0; }
		
		//node=[ENodeType|QUALIFIED_NAME]
		public Assignment getNodeAssignment_1_1() { return cNodeAssignment_1_1; }
		
		//[ENodeType|QUALIFIED_NAME]
		public CrossReference getNodeENodeTypeCrossReference_1_1_0() { return cNodeENodeTypeCrossReference_1_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNodeENodeTypeQUALIFIED_NAMETerminalRuleCall_1_1_0_1() { return cNodeENodeTypeQUALIFIED_NAMETerminalRuleCall_1_1_0_1; }
		
		//('relationship:' relationship=[ERelationshipType|QUALIFIED_NAME])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'relationship:'
		public Keyword getRelationshipKeyword_2_0() { return cRelationshipKeyword_2_0; }
		
		//relationship=[ERelationshipType|QUALIFIED_NAME]
		public Assignment getRelationshipAssignment_2_1() { return cRelationshipAssignment_2_1; }
		
		//[ERelationshipType|QUALIFIED_NAME]
		public CrossReference getRelationshipERelationshipTypeCrossReference_2_1_0() { return cRelationshipERelationshipTypeCrossReference_2_1_0; }
		
		//QUALIFIED_NAME
		public RuleCall getRelationshipERelationshipTypeQUALIFIED_NAMETerminalRuleCall_2_1_0_1() { return cRelationshipERelationshipTypeQUALIFIED_NAMETerminalRuleCall_2_1_0_1; }
		
		//('occurrences:' '[' start=EAlphaNumericValue ',' end=EAlphaNumericValue ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'occurrences:'
		public Keyword getOccurrencesKeyword_3_0() { return cOccurrencesKeyword_3_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_1() { return cLeftSquareBracketKeyword_3_1; }
		
		//start=EAlphaNumericValue
		public Assignment getStartAssignment_3_2() { return cStartAssignment_3_2; }
		
		//EAlphaNumericValue
		public RuleCall getStartEAlphaNumericValueParserRuleCall_3_2_0() { return cStartEAlphaNumericValueParserRuleCall_3_2_0; }
		
		//','
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }
		
		//end=EAlphaNumericValue
		public Assignment getEndAssignment_3_4() { return cEndAssignment_3_4; }
		
		//EAlphaNumericValue
		public RuleCall getEndEAlphaNumericValueParserRuleCall_3_4_0() { return cEndEAlphaNumericValueParserRuleCall_3_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_5() { return cRightSquareBracketKeyword_3_5; }
	}
	public class EReqOrCapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EReqOrCap");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cERequirementDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cECapabilityDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EReqOrCap:
		//	ERequirementDefinition | ECapabilityDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ERequirementDefinition | ECapabilityDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ERequirementDefinition
		public RuleCall getERequirementDefinitionParserRuleCall_0() { return cERequirementDefinitionParserRuleCall_0; }
		
		//ECapabilityDefinition
		public RuleCall getECapabilityDefinitionParserRuleCall_1() { return cECapabilityDefinitionParserRuleCall_1; }
	}
	public class EConstraintsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EConstraints");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEConstraintsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cConstraintsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConstraintsEConstraintParserRuleCall_1_0 = (RuleCall)cConstraintsAssignment_1.eContents().get(0);
		
		//EConstraints:
		//	{EConstraints} constraints+=EConstraint*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EConstraints} constraints+=EConstraint*
		public Group getGroup() { return cGroup; }
		
		//{EConstraints}
		public Action getEConstraintsAction_0() { return cEConstraintsAction_0; }
		
		//constraints+=EConstraint*
		public Assignment getConstraintsAssignment_1() { return cConstraintsAssignment_1; }
		
		//EConstraint
		public RuleCall getConstraintsEConstraintParserRuleCall_1_0() { return cConstraintsEConstraintParserRuleCall_1_0; }
	}
	public class EConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EConstraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEEqualParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEGreaterThanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEGreaterOrEqualParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cELessThanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cELessOrEqualParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEInRangeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEValid_ValuesParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cELengthParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cEMinLengthParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cEMaxLengthParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//EConstraint:
		//	EEqual | EGreaterThan | EGreaterOrEqual | ELessThan | ELessOrEqual | EInRange | EValid_Values | ELength | EMinLength |
		//	EMaxLength;
		@Override public ParserRule getRule() { return rule; }
		
		//EEqual | EGreaterThan | EGreaterOrEqual | ELessThan | ELessOrEqual | EInRange | EValid_Values | ELength | EMinLength |
		//EMaxLength
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EEqual
		public RuleCall getEEqualParserRuleCall_0() { return cEEqualParserRuleCall_0; }
		
		//EGreaterThan
		public RuleCall getEGreaterThanParserRuleCall_1() { return cEGreaterThanParserRuleCall_1; }
		
		//EGreaterOrEqual
		public RuleCall getEGreaterOrEqualParserRuleCall_2() { return cEGreaterOrEqualParserRuleCall_2; }
		
		//ELessThan
		public RuleCall getELessThanParserRuleCall_3() { return cELessThanParserRuleCall_3; }
		
		//ELessOrEqual
		public RuleCall getELessOrEqualParserRuleCall_4() { return cELessOrEqualParserRuleCall_4; }
		
		//EInRange
		public RuleCall getEInRangeParserRuleCall_5() { return cEInRangeParserRuleCall_5; }
		
		//EValid_Values
		public RuleCall getEValid_ValuesParserRuleCall_6() { return cEValid_ValuesParserRuleCall_6; }
		
		//ELength
		public RuleCall getELengthParserRuleCall_7() { return cELengthParserRuleCall_7; }
		
		//EMinLength
		public RuleCall getEMinLengthParserRuleCall_8() { return cEMinLengthParserRuleCall_8; }
		
		//EMaxLength
		public RuleCall getEMaxLengthParserRuleCall_9() { return cEMaxLengthParserRuleCall_9; }
	}
	public class EMaxLengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EMaxLength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMax_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EMaxLength:
		//	'max_length:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'max_length:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'max_length:'
		public Keyword getMax_lengthKeyword_0() { return cMax_lengthKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EMinLengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EMinLength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMin_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EMinLength:
		//	'min_length:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'min_length:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'min_length:'
		public Keyword getMin_lengthKeyword_0() { return cMin_lengthKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class ELengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ELength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//ELength:
		//	'length:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'length:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'length:'
		public Keyword getLengthKeyword_0() { return cLengthKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EValid_ValuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EValid_Values");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValid_valuesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValELISTParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EValid_Values:
		//	'valid_values:' val=ELIST;
		@Override public ParserRule getRule() { return rule; }
		
		//'valid_values:' val=ELIST
		public Group getGroup() { return cGroup; }
		
		//'valid_values:'
		public Keyword getValid_valuesKeyword_0() { return cValid_valuesKeyword_0; }
		
		//val=ELIST
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//ELIST
		public RuleCall getValELISTParserRuleCall_1_0() { return cValELISTParserRuleCall_1_0; }
	}
	public class ELISTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ELIST");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cListAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cListAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cListAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cListEAlphaNumericValueParserRuleCall_2_1_0 = (RuleCall)cListAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ELIST:
		//	'[' list+=EAlphaNumericValue ("," list+=EAlphaNumericValue)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' list+=EAlphaNumericValue ("," list+=EAlphaNumericValue)* ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//list+=EAlphaNumericValue
		public Assignment getListAssignment_1() { return cListAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getListEAlphaNumericValueParserRuleCall_1_0() { return cListEAlphaNumericValueParserRuleCall_1_0; }
		
		//("," list+=EAlphaNumericValue)*
		public Group getGroup_2() { return cGroup_2; }
		
		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//list+=EAlphaNumericValue
		public Assignment getListAssignment_2_1() { return cListAssignment_2_1; }
		
		//EAlphaNumericValue
		public RuleCall getListEAlphaNumericValueParserRuleCall_2_1_0() { return cListEAlphaNumericValueParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class EInRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EInRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIn_rangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStartEAlphaNumericValueParserRuleCall_2_0 = (RuleCall)cStartAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEndEAlphaNumericValueParserRuleCall_4_0 = (RuleCall)cEndAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EInRange:
		//	'in_range:' '[' start=EAlphaNumericValue "," end=EAlphaNumericValue ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'in_range:' '[' start=EAlphaNumericValue "," end=EAlphaNumericValue ']'
		public Group getGroup() { return cGroup; }
		
		//'in_range:'
		public Keyword getIn_rangeKeyword_0() { return cIn_rangeKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//start=EAlphaNumericValue
		public Assignment getStartAssignment_2() { return cStartAssignment_2; }
		
		//EAlphaNumericValue
		public RuleCall getStartEAlphaNumericValueParserRuleCall_2_0() { return cStartEAlphaNumericValueParserRuleCall_2_0; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//end=EAlphaNumericValue
		public Assignment getEndAssignment_4() { return cEndAssignment_4; }
		
		//EAlphaNumericValue
		public RuleCall getEndEAlphaNumericValueParserRuleCall_4_0() { return cEndEAlphaNumericValueParserRuleCall_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ELessOrEqualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ELessOrEqual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLess_or_equalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//ELessOrEqual:
		//	'less_or_equal:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'less_or_equal:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'less_or_equal:'
		public Keyword getLess_or_equalKeyword_0() { return cLess_or_equalKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class ELessThanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ELessThan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLess_thanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//ELessThan:
		//	'less_than:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'less_than:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'less_than:'
		public Keyword getLess_thanKeyword_0() { return cLess_thanKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EGreaterOrEqualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EGreaterOrEqual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGreater_or_equalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EGreaterOrEqual:
		//	'greater_or_equal:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'greater_or_equal:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'greater_or_equal:'
		public Keyword getGreater_or_equalKeyword_0() { return cGreater_or_equalKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EGreaterThanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EGreaterThan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGreater_thanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EGreaterThan:
		//	'greater_than:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'greater_than:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'greater_than:'
		public Keyword getGreater_thanKeyword_0() { return cGreater_thanKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EEqualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EEqual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValESingleValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EEqual:
		//	'equal:' val=ESingleValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'equal:' val=ESingleValue
		public Group getGroup() { return cGroup; }
		
		//'equal:'
		public Keyword getEqualKeyword_0() { return cEqualKeyword_0; }
		
		//val=ESingleValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//ESingleValue
		public RuleCall getValESingleValueParserRuleCall_1_0() { return cValESingleValueParserRuleCall_1_0; }
	}
	public class EAssignmentValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EAssignmentValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESingleValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cELISTParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEMAPParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEFunctionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//EAssignmentValue:
		//	ESingleValue | ELIST | EMAP | EFunction;
		@Override public ParserRule getRule() { return rule; }
		
		//ESingleValue | ELIST | EMAP | EFunction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESingleValue
		public RuleCall getESingleValueParserRuleCall_0() { return cESingleValueParserRuleCall_0; }
		
		//ELIST
		public RuleCall getELISTParserRuleCall_1() { return cELISTParserRuleCall_1; }
		
		//EMAP
		public RuleCall getEMAPParserRuleCall_2() { return cEMAPParserRuleCall_2; }
		
		//EFunction
		public RuleCall getEFunctionParserRuleCall_3() { return cEFunctionParserRuleCall_3; }
	}
	public class ESingleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ESingleValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESTRINGParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEBOOLEANParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEFLOATParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cESIGNEDINTParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ESingleValue:
		//	ESTRING | EBOOLEAN | EFLOAT | ESIGNEDINT;
		@Override public ParserRule getRule() { return rule; }
		
		//ESTRING | EBOOLEAN | EFLOAT | ESIGNEDINT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESTRING
		public RuleCall getESTRINGParserRuleCall_0() { return cESTRINGParserRuleCall_0; }
		
		//EBOOLEAN
		public RuleCall getEBOOLEANParserRuleCall_1() { return cEBOOLEANParserRuleCall_1; }
		
		//EFLOAT
		public RuleCall getEFLOATParserRuleCall_2() { return cEFLOATParserRuleCall_2; }
		
		//ESIGNEDINT
		public RuleCall getESIGNEDINTParserRuleCall_3() { return cESIGNEDINTParserRuleCall_3; }
	}
	public class EAlphaNumericValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EAlphaNumericValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESTRINGParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEFLOATParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cESIGNEDINTParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EAlphaNumericValue:
		//	ESTRING | EFLOAT | ESIGNEDINT;
		@Override public ParserRule getRule() { return rule; }
		
		//ESTRING | EFLOAT | ESIGNEDINT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESTRING
		public RuleCall getESTRINGParserRuleCall_0() { return cESTRINGParserRuleCall_0; }
		
		//EFLOAT
		public RuleCall getEFLOATParserRuleCall_1() { return cEFLOATParserRuleCall_1; }
		
		//ESIGNEDINT
		public RuleCall getESIGNEDINTParserRuleCall_2() { return cESIGNEDINTParserRuleCall_2; }
	}
	public class ESTRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ESTRING");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ESTRING:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class EBOOLEANElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EBOOLEAN");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEANTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//EBOOLEAN:
		//	value=BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN
		public RuleCall getValueBOOLEANTerminalRuleCall_0() { return cValueBOOLEANTerminalRuleCall_0; }
	}
	public class EFLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EFLOAT");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueFLOATParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//EFLOAT:
		//	value=FLOAT;
		@Override public ParserRule getRule() { return rule; }
		
		//value=FLOAT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//FLOAT
		public RuleCall getValueFLOATParserRuleCall_0() { return cValueFLOATParserRuleCall_0; }
	}
	public class ESIGNEDINTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ESIGNEDINT");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSIGNEDINTParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ESIGNEDINT:
		//	value=SIGNEDINT;
		@Override public ParserRule getRule() { return rule; }
		
		//value=SIGNEDINT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//SIGNEDINT
		public RuleCall getValueSIGNEDINTParserRuleCall_0() { return cValueSIGNEDINTParserRuleCall_0; }
	}
	public class EMAPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EMAP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cMapAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMapEMapEntryParserRuleCall_1_0 = (RuleCall)cMapAssignment_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EMAP:
		//	BEGIN
		//	map+=EMapEntry+
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN map+=EMapEntry+ END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//map+=EMapEntry+
		public Assignment getMapAssignment_1() { return cMapAssignment_1; }
		
		//EMapEntry
		public RuleCall getMapEMapEntryParserRuleCall_1_0() { return cMapEMapEntryParserRuleCall_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2() { return cENDTerminalRuleCall_2; }
	}
	public class EMapEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.EMapEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEAssignmentValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EMapEntry:
		//	key=ID ":" value=EAssignmentValue;
		@Override public ParserRule getRule() { return rule; }
		
		//key=ID ":" value=EAssignmentValue
		public Group getGroup() { return cGroup; }
		
		//key=ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//ID
		public RuleCall getKeyIDTerminalRuleCall_0_0() { return cKeyIDTerminalRuleCall_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=EAssignmentValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EAssignmentValue
		public RuleCall getValueEAssignmentValueParserRuleCall_2_0() { return cValueEAssignmentValueParserRuleCall_2_0; }
	}
	public class SIGNEDINTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.SIGNEDINT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SIGNEDINT ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class FLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.FLOAT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FLOAT ecore::EFloat:
		//	INT? '.' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT? '.' INT
		public Group getGroup() { return cGroup; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	
	
	private final RM_ModelElements pRM_Model;
	private final EDataTypesElements pEDataTypes;
	private final EDataTypeElements pEDataType;
	private final EDataTypeBodyElements pEDataTypeBody;
	private final EDataTypeNameElements pEDataTypeName;
	private final EArtifactTypesElements pEArtifactTypes;
	private final EArtifactTypeElements pEArtifactType;
	private final EArtifactTypeBodyElements pEArtifactTypeBody;
	private final ECapabilityTypesElements pECapabilityTypes;
	private final ECapabilityTypeElements pECapabilityType;
	private final ECapabilityTypeBodyElements pECapabilityTypeBody;
	private final EInterfaceTypesElements pEInterfaceTypes;
	private final EInterfaceTypeElements pEInterfaceType;
	private final EInterfaceTypeBodyElements pEInterfaceTypeBody;
	private final EPolicyTypesElements pEPolicyTypes;
	private final EPolicyTypeElements pEPolicyType;
	private final EPolicyTypeBodyElements pEPolicyTypeBody;
	private final ENodeTypesElements pENodeTypes;
	private final ENodeTypeElements pENodeType;
	private final ENodeTypeBodyElements pENodeTypeBody;
	private final ERelationshipTypesElements pERelationshipTypes;
	private final ERelationshipTypeElements pERelationshipType;
	private final ERelationshipTypeBodyElements pERelationshipTypeBody;
	private final EValidTargetTypesElements pEValidTargetTypes;
	private final ECapabilityTypeRefElements pECapabilityTypeRef;
	private final EPropertiesElements pEProperties;
	private final EPropertyDefinitionElements pEPropertyDefinition;
	private final EPropertyDefinitionBodyElements pEPropertyDefinitionBody;
	private final EAttributesElements pEAttributes;
	private final EAttributeDefinitionElements pEAttributeDefinition;
	private final EAttributeDefinitionBodyElements pEAttributeDefinitionBody;
	private final EInterfacesElements pEInterfaces;
	private final EInterfaceDefinitionElements pEInterfaceDefinition;
	private final EInterfaceDefinitionBodyElements pEInterfaceDefinitionBody;
	private final EOperationsElements pEOperations;
	private final EOperationDefinitionElements pEOperationDefinition;
	private final EOperationDefinitionBodyElements pEOperationDefinitionBody;
	private final EImplementationElements pEImplementation;
	private final EPrimaryElements pEPrimary;
	private final EDependenciesElements pEDependencies;
	private final EDependencyFilesElements pEDependencyFiles;
	private final EInputsElements pEInputs;
	private final EParameterDefinitionElements pEParameterDefinition;
	private final EParameterDefinitionBodyElements pEParameterDefinitionBody;
	private final EValueExpressionElements pEValueExpression;
	private final EFunctionElements pEFunction;
	private final GetInputElements pGetInput;
	private final GetAttributeElements pGetAttribute;
	private final GetAttributeBodyElements pGetAttributeBody;
	private final GetPropertyElements pGetProperty;
	private final GetPropertyBodyElements pGetPropertyBody;
	private final ECapabilitiesElements pECapabilities;
	private final ECapabilityDefinitionElements pECapabilityDefinition;
	private final ECapabilityDefinitionBodyElements pECapabilityDefinitionBody;
	private final EValidSourceTypeElements pEValidSourceType;
	private final ENodeTypeRefElements pENodeTypeRef;
	private final ERequirementsElements pERequirements;
	private final ERequirementDefinitionElements pERequirementDefinition;
	private final ERequirementDefinitionBodyElements pERequirementDefinitionBody;
	private final EReqOrCapElements pEReqOrCap;
	private final EConstraintsElements pEConstraints;
	private final EConstraintElements pEConstraint;
	private final EMaxLengthElements pEMaxLength;
	private final EMinLengthElements pEMinLength;
	private final ELengthElements pELength;
	private final EValid_ValuesElements pEValid_Values;
	private final ELISTElements pELIST;
	private final EInRangeElements pEInRange;
	private final ELessOrEqualElements pELessOrEqual;
	private final ELessThanElements pELessThan;
	private final EGreaterOrEqualElements pEGreaterOrEqual;
	private final EGreaterThanElements pEGreaterThan;
	private final EEqualElements pEEqual;
	private final EAssignmentValueElements pEAssignmentValue;
	private final ESingleValueElements pESingleValue;
	private final EAlphaNumericValueElements pEAlphaNumericValue;
	private final ESTRINGElements pESTRING;
	private final EBOOLEANElements pEBOOLEAN;
	private final EFLOATElements pEFLOAT;
	private final ESIGNEDINTElements pESIGNEDINT;
	private final EMAPElements pEMAP;
	private final EMapEntryElements pEMapEntry;
	private final TerminalRule tQUALIFIED_NAME;
	private final TerminalRule tBOOLEAN;
	private final SIGNEDINTElements pSIGNEDINT;
	private final FLOATElements pFLOAT;
	private final TerminalRule tENTITY;
	private final TerminalRule tPRIMITIVE_DATA_TYPE;
	private final TerminalRule tID;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RMGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRM_Model = new RM_ModelElements();
		this.pEDataTypes = new EDataTypesElements();
		this.pEDataType = new EDataTypeElements();
		this.pEDataTypeBody = new EDataTypeBodyElements();
		this.pEDataTypeName = new EDataTypeNameElements();
		this.pEArtifactTypes = new EArtifactTypesElements();
		this.pEArtifactType = new EArtifactTypeElements();
		this.pEArtifactTypeBody = new EArtifactTypeBodyElements();
		this.pECapabilityTypes = new ECapabilityTypesElements();
		this.pECapabilityType = new ECapabilityTypeElements();
		this.pECapabilityTypeBody = new ECapabilityTypeBodyElements();
		this.pEInterfaceTypes = new EInterfaceTypesElements();
		this.pEInterfaceType = new EInterfaceTypeElements();
		this.pEInterfaceTypeBody = new EInterfaceTypeBodyElements();
		this.pEPolicyTypes = new EPolicyTypesElements();
		this.pEPolicyType = new EPolicyTypeElements();
		this.pEPolicyTypeBody = new EPolicyTypeBodyElements();
		this.pENodeTypes = new ENodeTypesElements();
		this.pENodeType = new ENodeTypeElements();
		this.pENodeTypeBody = new ENodeTypeBodyElements();
		this.pERelationshipTypes = new ERelationshipTypesElements();
		this.pERelationshipType = new ERelationshipTypeElements();
		this.pERelationshipTypeBody = new ERelationshipTypeBodyElements();
		this.pEValidTargetTypes = new EValidTargetTypesElements();
		this.pECapabilityTypeRef = new ECapabilityTypeRefElements();
		this.pEProperties = new EPropertiesElements();
		this.pEPropertyDefinition = new EPropertyDefinitionElements();
		this.pEPropertyDefinitionBody = new EPropertyDefinitionBodyElements();
		this.pEAttributes = new EAttributesElements();
		this.pEAttributeDefinition = new EAttributeDefinitionElements();
		this.pEAttributeDefinitionBody = new EAttributeDefinitionBodyElements();
		this.pEInterfaces = new EInterfacesElements();
		this.pEInterfaceDefinition = new EInterfaceDefinitionElements();
		this.pEInterfaceDefinitionBody = new EInterfaceDefinitionBodyElements();
		this.pEOperations = new EOperationsElements();
		this.pEOperationDefinition = new EOperationDefinitionElements();
		this.pEOperationDefinitionBody = new EOperationDefinitionBodyElements();
		this.pEImplementation = new EImplementationElements();
		this.pEPrimary = new EPrimaryElements();
		this.pEDependencies = new EDependenciesElements();
		this.pEDependencyFiles = new EDependencyFilesElements();
		this.pEInputs = new EInputsElements();
		this.pEParameterDefinition = new EParameterDefinitionElements();
		this.pEParameterDefinitionBody = new EParameterDefinitionBodyElements();
		this.pEValueExpression = new EValueExpressionElements();
		this.pEFunction = new EFunctionElements();
		this.pGetInput = new GetInputElements();
		this.pGetAttribute = new GetAttributeElements();
		this.pGetAttributeBody = new GetAttributeBodyElements();
		this.pGetProperty = new GetPropertyElements();
		this.pGetPropertyBody = new GetPropertyBodyElements();
		this.pECapabilities = new ECapabilitiesElements();
		this.pECapabilityDefinition = new ECapabilityDefinitionElements();
		this.pECapabilityDefinitionBody = new ECapabilityDefinitionBodyElements();
		this.pEValidSourceType = new EValidSourceTypeElements();
		this.pENodeTypeRef = new ENodeTypeRefElements();
		this.pERequirements = new ERequirementsElements();
		this.pERequirementDefinition = new ERequirementDefinitionElements();
		this.pERequirementDefinitionBody = new ERequirementDefinitionBodyElements();
		this.pEReqOrCap = new EReqOrCapElements();
		this.pEConstraints = new EConstraintsElements();
		this.pEConstraint = new EConstraintElements();
		this.pEMaxLength = new EMaxLengthElements();
		this.pEMinLength = new EMinLengthElements();
		this.pELength = new ELengthElements();
		this.pEValid_Values = new EValid_ValuesElements();
		this.pELIST = new ELISTElements();
		this.pEInRange = new EInRangeElements();
		this.pELessOrEqual = new ELessOrEqualElements();
		this.pELessThan = new ELessThanElements();
		this.pEGreaterOrEqual = new EGreaterOrEqualElements();
		this.pEGreaterThan = new EGreaterThanElements();
		this.pEEqual = new EEqualElements();
		this.pEAssignmentValue = new EAssignmentValueElements();
		this.pESingleValue = new ESingleValueElements();
		this.pEAlphaNumericValue = new EAlphaNumericValueElements();
		this.pESTRING = new ESTRINGElements();
		this.pEBOOLEAN = new EBOOLEANElements();
		this.pEFLOAT = new EFLOATElements();
		this.pESIGNEDINT = new ESIGNEDINTElements();
		this.pEMAP = new EMAPElements();
		this.pEMapEntry = new EMapEntryElements();
		this.tQUALIFIED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.QUALIFIED_NAME");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.BOOLEAN");
		this.pSIGNEDINT = new SIGNEDINTElements();
		this.pFLOAT = new FLOATElements();
		this.tENTITY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ENTITY");
		this.tPRIMITIVE_DATA_TYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.PRIMITIVE_DATA_TYPE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.ID");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.RM.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.sodalite.dsl.RM".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RM_Model:
	//	('data_types:'
	//	BEGIN
	//	dataTypes=EDataTypes
	//	END)? & ('artifact_types:'
	//	BEGIN
	//	artifactTypes=EArtifactTypes
	//	END)? & ('capability_types:'
	//	BEGIN
	//	capabilityTypes=ECapabilityTypes
	//	END)? & ('interface_types:'
	//	BEGIN
	//	interfaceTypes=EInterfaceTypes
	//	END)? & ('relationship_types:'
	//	BEGIN
	//	relationshipTypes=ERelationshipTypes
	//	END)? & ('node_types:'
	//	BEGIN
	//	nodeTypes=ENodeTypes
	//	END)? & ('policy_types:'
	//	BEGIN
	//	policyTypes=EPolicyTypes
	//	END)?;
	public RM_ModelElements getRM_ModelAccess() {
		return pRM_Model;
	}
	
	public ParserRule getRM_ModelRule() {
		return getRM_ModelAccess().getRule();
	}
	
	//EDataTypes:
	//	{EDataTypes} dataTypes+=EDataType+;
	public EDataTypesElements getEDataTypesAccess() {
		return pEDataTypes;
	}
	
	public ParserRule getEDataTypesRule() {
		return getEDataTypesAccess().getRule();
	}
	
	//EDataType:
	//	name=EDataTypeName ':'
	//	BEGIN
	//	data=EDataTypeBody
	//	END;
	public EDataTypeElements getEDataTypeAccess() {
		return pEDataType;
	}
	
	public ParserRule getEDataTypeRule() {
		return getEDataTypeAccess().getRule();
	}
	
	//EDataTypeBody:
	//	{EDataTypeBody} (('derived_from:' superType=[EDataType|EDataTypeName])? & ('description:' description=STRING)? &
	//	('constraints:'
	//	BEGIN
	//	constraints=EConstraints
	//	END)? & ('properties:'
	//	BEGIN
	//	properties=EProperties
	//	END)?);
	public EDataTypeBodyElements getEDataTypeBodyAccess() {
		return pEDataTypeBody;
	}
	
	public ParserRule getEDataTypeBodyRule() {
		return getEDataTypeBodyAccess().getRule();
	}
	
	//EDataTypeName:
	//	QUALIFIED_NAME | PRIMITIVE_DATA_TYPE;
	public EDataTypeNameElements getEDataTypeNameAccess() {
		return pEDataTypeName;
	}
	
	public ParserRule getEDataTypeNameRule() {
		return getEDataTypeNameAccess().getRule();
	}
	
	//EArtifactTypes:
	//	{EArtifactTypes} artifactTypes+=EArtifactType+;
	public EArtifactTypesElements getEArtifactTypesAccess() {
		return pEArtifactTypes;
	}
	
	public ParserRule getEArtifactTypesRule() {
		return getEArtifactTypesAccess().getRule();
	}
	
	//EArtifactType:
	//	name=QUALIFIED_NAME ':'
	//	BEGIN
	//	artifact=EArtifactTypeBody
	//	END;
	public EArtifactTypeElements getEArtifactTypeAccess() {
		return pEArtifactType;
	}
	
	public ParserRule getEArtifactTypeRule() {
		return getEArtifactTypeAccess().getRule();
	}
	
	//EArtifactTypeBody:
	//	{EArtifactTypeBody} (('derived_from:' superType=[EArtifactType|QUALIFIED_NAME])? & ('description:'
	//	description=STRING)? & ('mime_type:' mime_type=STRING)? & ('file_ext:'+ file_ext=STRING)?);
	public EArtifactTypeBodyElements getEArtifactTypeBodyAccess() {
		return pEArtifactTypeBody;
	}
	
	public ParserRule getEArtifactTypeBodyRule() {
		return getEArtifactTypeBodyAccess().getRule();
	}
	
	//ECapabilityTypes:
	//	{ECapabilityTypes} capabilityTypes+=ECapabilityType+;
	public ECapabilityTypesElements getECapabilityTypesAccess() {
		return pECapabilityTypes;
	}
	
	public ParserRule getECapabilityTypesRule() {
		return getECapabilityTypesAccess().getRule();
	}
	
	//ECapabilityType:
	//	name=QUALIFIED_NAME ':'
	//	BEGIN
	//	capability=ECapabilityTypeBody
	//	END;
	public ECapabilityTypeElements getECapabilityTypeAccess() {
		return pECapabilityType;
	}
	
	public ParserRule getECapabilityTypeRule() {
		return getECapabilityTypeAccess().getRule();
	}
	
	//ECapabilityTypeBody:
	//	{ECapabilityTypeBody} (('derived_from:' superType=[ECapabilityType|QUALIFIED_NAME])? & ('description:'
	//	description=STRING)? & ('properties:'
	//	BEGIN
	//	properties=EProperties
	//	END)? & ('attributes:'
	//	BEGIN
	//	atributes=EAttributes
	//	END)?);
	public ECapabilityTypeBodyElements getECapabilityTypeBodyAccess() {
		return pECapabilityTypeBody;
	}
	
	public ParserRule getECapabilityTypeBodyRule() {
		return getECapabilityTypeBodyAccess().getRule();
	}
	
	//EInterfaceTypes:
	//	{EInterfaceTypes} interfaceTypes+=EInterfaceType+;
	public EInterfaceTypesElements getEInterfaceTypesAccess() {
		return pEInterfaceTypes;
	}
	
	public ParserRule getEInterfaceTypesRule() {
		return getEInterfaceTypesAccess().getRule();
	}
	
	//EInterfaceType:
	//	name=QUALIFIED_NAME ':'
	//	BEGIN
	//	interface=EInterfaceTypeBody
	//	END;
	public EInterfaceTypeElements getEInterfaceTypeAccess() {
		return pEInterfaceType;
	}
	
	public ParserRule getEInterfaceTypeRule() {
		return getEInterfaceTypeAccess().getRule();
	}
	
	//EInterfaceTypeBody:
	//	{EInterfaceTypeBody} (('derived_from:' superType=[EInterfaceType|QUALIFIED_NAME])? & ('description:'
	//	description=STRING)? & ('inputs:'
	//	BEGIN
	//	inputs=EProperties
	//	END)? & ('operations:'
	//	BEGIN
	//	operations=EOperations
	//	END)?);
	public EInterfaceTypeBodyElements getEInterfaceTypeBodyAccess() {
		return pEInterfaceTypeBody;
	}
	
	public ParserRule getEInterfaceTypeBodyRule() {
		return getEInterfaceTypeBodyAccess().getRule();
	}
	
	//EPolicyTypes:
	//	{EPolicyTypes} policyTypes+=EPolicyType+;
	public EPolicyTypesElements getEPolicyTypesAccess() {
		return pEPolicyTypes;
	}
	
	public ParserRule getEPolicyTypesRule() {
		return getEPolicyTypesAccess().getRule();
	}
	
	//EPolicyType:
	//	name=QUALIFIED_NAME ':'
	//	BEGIN
	//	policy=EPolicyTypeBody
	//	END;
	public EPolicyTypeElements getEPolicyTypeAccess() {
		return pEPolicyType;
	}
	
	public ParserRule getEPolicyTypeRule() {
		return getEPolicyTypeAccess().getRule();
	}
	
	//EPolicyTypeBody:
	//	{EPolicyTypeBody} (('derived_from:' superType=[EPolicyType|QUALIFIED_NAME])? & ('description:' description=STRING)?);
	public EPolicyTypeBodyElements getEPolicyTypeBodyAccess() {
		return pEPolicyTypeBody;
	}
	
	public ParserRule getEPolicyTypeBodyRule() {
		return getEPolicyTypeBodyAccess().getRule();
	}
	
	//ENodeTypes:
	//	{ENodeTypes} nodeTypes+=ENodeType+;
	public ENodeTypesElements getENodeTypesAccess() {
		return pENodeTypes;
	}
	
	public ParserRule getENodeTypesRule() {
		return getENodeTypesAccess().getRule();
	}
	
	//ENodeType:
	//	name=QUALIFIED_NAME ':'
	//	BEGIN
	//	node=ENodeTypeBody
	//	END;
	public ENodeTypeElements getENodeTypeAccess() {
		return pENodeType;
	}
	
	public ParserRule getENodeTypeRule() {
		return getENodeTypeAccess().getRule();
	}
	
	//ENodeTypeBody:
	//	{ENodeTypeBody} (('derived_from:' superType=[ENodeType|QUALIFIED_NAME])? & ('description:' description=STRING)? &
	//	('properties:'
	//	BEGIN
	//	properties=EProperties
	//	END)? & ('attributes:'
	//	BEGIN
	//	attributes=EAttributes
	//	END)? & ('interfaces:'
	//	BEGIN
	//	interfaces=EInterfaces
	//	END)? & ('capabilities:'
	//	BEGIN
	//	capabilities=ECapabilities
	//	END)? & ('requirements:'
	//	BEGIN
	//	requirements=ERequirements
	//	END)?);
	public ENodeTypeBodyElements getENodeTypeBodyAccess() {
		return pENodeTypeBody;
	}
	
	public ParserRule getENodeTypeBodyRule() {
		return getENodeTypeBodyAccess().getRule();
	}
	
	//ERelationshipTypes:
	//	{ERelationshipTypes} relationshipTypes+=ERelationshipType+;
	public ERelationshipTypesElements getERelationshipTypesAccess() {
		return pERelationshipTypes;
	}
	
	public ParserRule getERelationshipTypesRule() {
		return getERelationshipTypesAccess().getRule();
	}
	
	//ERelationshipType:
	//	name=QUALIFIED_NAME ':'
	//	BEGIN
	//	relationship=ERelationshipTypeBody
	//	END;
	public ERelationshipTypeElements getERelationshipTypeAccess() {
		return pERelationshipType;
	}
	
	public ParserRule getERelationshipTypeRule() {
		return getERelationshipTypeAccess().getRule();
	}
	
	//ERelationshipTypeBody:
	//	{ERelationshipTypeBody} (('derived_from:' superType=[ERelationshipType|QUALIFIED_NAME])? & ('description:'
	//	description=STRING)? & ('properties:'
	//	BEGIN
	//	properties=EProperties
	//	END)? & ('attributes:'
	//	BEGIN
	//	atributes=EAttributes
	//	END)? & ('interfaces:'
	//	BEGIN
	//	interfaces=EInterfaces
	//	END)? & ('valid_target_types:' '[' valid_target_types=EValidTargetTypes "]")?);
	public ERelationshipTypeBodyElements getERelationshipTypeBodyAccess() {
		return pERelationshipTypeBody;
	}
	
	public ParserRule getERelationshipTypeBodyRule() {
		return getERelationshipTypeBodyAccess().getRule();
	}
	
	//EValidTargetTypes:
	//	targetTypes+=ECapabilityTypeRef (',' sourceType+=ECapabilityTypeRef)*;
	public EValidTargetTypesElements getEValidTargetTypesAccess() {
		return pEValidTargetTypes;
	}
	
	public ParserRule getEValidTargetTypesRule() {
		return getEValidTargetTypesAccess().getRule();
	}
	
	//ECapabilityTypeRef:
	//	name=[ECapabilityType|QUALIFIED_NAME];
	public ECapabilityTypeRefElements getECapabilityTypeRefAccess() {
		return pECapabilityTypeRef;
	}
	
	public ParserRule getECapabilityTypeRefRule() {
		return getECapabilityTypeRefAccess().getRule();
	}
	
	//EProperties:
	//	{EProperties} properties+=EPropertyDefinition*;
	public EPropertiesElements getEPropertiesAccess() {
		return pEProperties;
	}
	
	public ParserRule getEPropertiesRule() {
		return getEPropertiesAccess().getRule();
	}
	
	//EPropertyDefinition:
	//	name=ID ':'
	//	BEGIN
	//	property=EPropertyDefinitionBody
	//	END;
	public EPropertyDefinitionElements getEPropertyDefinitionAccess() {
		return pEPropertyDefinition;
	}
	
	public ParserRule getEPropertyDefinitionRule() {
		return getEPropertyDefinitionAccess().getRule();
	}
	
	//EPropertyDefinitionBody:
	//	'type:' type=[EDataType|EDataTypeName] & ('description:' description=STRING)? & ('required:' required=BOOLEAN)? &
	//	('default:' default=EValueExpression)? & ('status:' status=STRING)? & ('constraints:'
	//	BEGIN
	//	constraints=EConstraints
	//	END)? & ('entry_schema:' entry_schema=[EDataType|EDataTypeName])?;
	public EPropertyDefinitionBodyElements getEPropertyDefinitionBodyAccess() {
		return pEPropertyDefinitionBody;
	}
	
	public ParserRule getEPropertyDefinitionBodyRule() {
		return getEPropertyDefinitionBodyAccess().getRule();
	}
	
	//EAttributes:
	//	{EAttributes} attributes+=EAttributeDefinition*;
	public EAttributesElements getEAttributesAccess() {
		return pEAttributes;
	}
	
	public ParserRule getEAttributesRule() {
		return getEAttributesAccess().getRule();
	}
	
	//EAttributeDefinition:
	//	name=ID ':'
	//	BEGIN
	//	attribute=EAttributeDefinitionBody
	//	END;
	public EAttributeDefinitionElements getEAttributeDefinitionAccess() {
		return pEAttributeDefinition;
	}
	
	public ParserRule getEAttributeDefinitionRule() {
		return getEAttributeDefinitionAccess().getRule();
	}
	
	//EAttributeDefinitionBody:
	//	'type:' type=[EDataType|EDataTypeName] & ('description:' description=STRING)? & ('default:' default=EValueExpression)?
	//	& ('status:' status=STRING)? & ('entry_schema:' entry_schema=[EDataType|EDataTypeName])?;
	public EAttributeDefinitionBodyElements getEAttributeDefinitionBodyAccess() {
		return pEAttributeDefinitionBody;
	}
	
	public ParserRule getEAttributeDefinitionBodyRule() {
		return getEAttributeDefinitionBodyAccess().getRule();
	}
	
	//EInterfaces:
	//	{EInterfaces} interfaces+=EInterfaceDefinition*;
	public EInterfacesElements getEInterfacesAccess() {
		return pEInterfaces;
	}
	
	public ParserRule getEInterfacesRule() {
		return getEInterfacesAccess().getRule();
	}
	
	//EInterfaceDefinition:
	//	name=ID ':'
	//	BEGIN
	//	interface=EInterfaceDefinitionBody
	//	END;
	public EInterfaceDefinitionElements getEInterfaceDefinitionAccess() {
		return pEInterfaceDefinition;
	}
	
	public ParserRule getEInterfaceDefinitionRule() {
		return getEInterfaceDefinitionAccess().getRule();
	}
	
	//EInterfaceDefinitionBody:
	//	'type:' type=[EInterfaceType|QUALIFIED_NAME] & ('inputs:'
	//	BEGIN
	//	inputs=EProperties
	//	END)? & ('operations:'
	//	BEGIN
	//	operations=EOperations
	//	END)?;
	public EInterfaceDefinitionBodyElements getEInterfaceDefinitionBodyAccess() {
		return pEInterfaceDefinitionBody;
	}
	
	public ParserRule getEInterfaceDefinitionBodyRule() {
		return getEInterfaceDefinitionBodyAccess().getRule();
	}
	
	//EOperations:
	//	{EOperations} operations+=EOperationDefinition*;
	public EOperationsElements getEOperationsAccess() {
		return pEOperations;
	}
	
	public ParserRule getEOperationsRule() {
		return getEOperationsAccess().getRule();
	}
	
	//EOperationDefinition:
	//	name=ID ':'
	//	BEGIN
	//	operation=EOperationDefinitionBody
	//	END;
	public EOperationDefinitionElements getEOperationDefinitionAccess() {
		return pEOperationDefinition;
	}
	
	public ParserRule getEOperationDefinitionRule() {
		return getEOperationDefinitionAccess().getRule();
	}
	
	//EOperationDefinitionBody:
	//	{EOperationDefinitionBody} (('description:' description=STRING)? & ('inputs:'
	//	BEGIN
	//	inputs=EInputs
	//	END)? & ('implementation:'
	//	BEGIN
	//	implementation=EImplementation
	//	END)?);
	public EOperationDefinitionBodyElements getEOperationDefinitionBodyAccess() {
		return pEOperationDefinitionBody;
	}
	
	public ParserRule getEOperationDefinitionBodyRule() {
		return getEOperationDefinitionBodyAccess().getRule();
	}
	
	//EImplementation:
	//	primary=EPrimary dependencies=EDependencies?;
	public EImplementationElements getEImplementationAccess() {
		return pEImplementation;
	}
	
	public ParserRule getEImplementationRule() {
		return getEImplementationAccess().getRule();
	}
	
	//EPrimary:
	//	('primary:' file=STRING) (BEGIN 'relative_path:' relative_path=STRING END)?;
	public EPrimaryElements getEPrimaryAccess() {
		return pEPrimary;
	}
	
	public ParserRule getEPrimaryRule() {
		return getEPrimaryAccess().getRule();
	}
	
	//EDependencies:
	//	'dependencies:' '[' files=EDependencyFiles? ']' (BEGIN 'relative_path:' relative_path=STRING END)?;
	public EDependenciesElements getEDependenciesAccess() {
		return pEDependencies;
	}
	
	public ParserRule getEDependenciesRule() {
		return getEDependenciesAccess().getRule();
	}
	
	//EDependencyFiles:
	//	files+=STRING (',' files+=STRING)*;
	public EDependencyFilesElements getEDependencyFilesAccess() {
		return pEDependencyFiles;
	}
	
	public ParserRule getEDependencyFilesRule() {
		return getEDependencyFilesAccess().getRule();
	}
	
	//EInputs:
	//	{EInputs} inputs+=EParameterDefinition*;
	public EInputsElements getEInputsAccess() {
		return pEInputs;
	}
	
	public ParserRule getEInputsRule() {
		return getEInputsAccess().getRule();
	}
	
	////inputs of operation definition in NodeTypes are ParameterDefinition
	//EParameterDefinition:
	//	name=ID ':'
	//	BEGIN
	//	parameter=EParameterDefinitionBody
	//	END;
	public EParameterDefinitionElements getEParameterDefinitionAccess() {
		return pEParameterDefinition;
	}
	
	public ParserRule getEParameterDefinitionRule() {
		return getEParameterDefinitionAccess().getRule();
	}
	
	//EParameterDefinitionBody:
	//	{EParameterDefinitionBody} (('type:' type=[EDataType|EDataTypeName])? & ('value:' value=EValueExpression)? &
	//	('default:' default=EValueExpression)?);
	public EParameterDefinitionBodyElements getEParameterDefinitionBodyAccess() {
		return pEParameterDefinitionBody;
	}
	
	public ParserRule getEParameterDefinitionBodyRule() {
		return getEParameterDefinitionBodyAccess().getRule();
	}
	
	//EValueExpression:
	//	ESingleValue | EFunction;
	public EValueExpressionElements getEValueExpressionAccess() {
		return pEValueExpression;
	}
	
	public ParserRule getEValueExpressionRule() {
		return getEValueExpressionAccess().getRule();
	}
	
	//EFunction:
	//	GetProperty | GetAttribute | GetInput;
	public EFunctionElements getEFunctionAccess() {
		return pEFunction;
	}
	
	public ParserRule getEFunctionRule() {
		return getEFunctionAccess().getRule();
	}
	
	//GetInput:
	//	'get_input:' input=[EParameterDefinition];
	public GetInputElements getGetInputAccess() {
		return pGetInput;
	}
	
	public ParserRule getGetInputRule() {
		return getGetInputAccess().getRule();
	}
	
	//GetAttribute:
	//	'get_attribute:'
	//	BEGIN
	//	attribute=GetAttributeBody
	//	END;
	public GetAttributeElements getGetAttributeAccess() {
		return pGetAttribute;
	}
	
	public ParserRule getGetAttributeRule() {
		return getGetAttributeAccess().getRule();
	}
	
	//GetAttributeBody:
	//	'attribute:' attribute=[EAttributeDefinition|QUALIFIED_NAME] & 'entity:' entity=ENTITY & ('req_cap:'
	//	req_cap=[EReqOrCap|QUALIFIED_NAME])?;
	public GetAttributeBodyElements getGetAttributeBodyAccess() {
		return pGetAttributeBody;
	}
	
	public ParserRule getGetAttributeBodyRule() {
		return getGetAttributeBodyAccess().getRule();
	}
	
	//GetProperty:
	//	'get_property:'
	//	BEGIN
	//	property=GetPropertyBody
	//	END;
	public GetPropertyElements getGetPropertyAccess() {
		return pGetProperty;
	}
	
	public ParserRule getGetPropertyRule() {
		return getGetPropertyAccess().getRule();
	}
	
	//GetPropertyBody:
	//	'property:' property=[EPropertyDefinition|QUALIFIED_NAME] & 'entity:' entity=ENTITY & ('req_cap:'
	//	req_cap=[EReqOrCap|QUALIFIED_NAME])?;
	public GetPropertyBodyElements getGetPropertyBodyAccess() {
		return pGetPropertyBody;
	}
	
	public ParserRule getGetPropertyBodyRule() {
		return getGetPropertyBodyAccess().getRule();
	}
	
	//ECapabilities:
	//	{ECapabilities} capabilities+=ECapabilityDefinition*;
	public ECapabilitiesElements getECapabilitiesAccess() {
		return pECapabilities;
	}
	
	public ParserRule getECapabilitiesRule() {
		return getECapabilitiesAccess().getRule();
	}
	
	//ECapabilityDefinition:
	//	name=ID ':'
	//	BEGIN
	//	capability=ECapabilityDefinitionBody
	//	END;
	public ECapabilityDefinitionElements getECapabilityDefinitionAccess() {
		return pECapabilityDefinition;
	}
	
	public ParserRule getECapabilityDefinitionRule() {
		return getECapabilityDefinitionAccess().getRule();
	}
	
	//ECapabilityDefinitionBody:
	//	'type:' type=[ECapabilityType|QUALIFIED_NAME] & ('description:' description=STRING)? & ('properties:'
	//	BEGIN
	//	properties=EProperties
	//	END)? & ('attributes:'
	//	BEGIN
	//	attributes=EAttributes
	//	END)? & ('valid_source_types:' '[' valid_source_types+=EValidSourceType? ']')? & ('occurrences:' '['
	//	occurrences_start=EAlphaNumericValue ',' occurrences_end=EAlphaNumericValue ']')?;
	public ECapabilityDefinitionBodyElements getECapabilityDefinitionBodyAccess() {
		return pECapabilityDefinitionBody;
	}
	
	public ParserRule getECapabilityDefinitionBodyRule() {
		return getECapabilityDefinitionBodyAccess().getRule();
	}
	
	//EValidSourceType:
	//	sourceTypes+=ENodeTypeRef (',' sourceType+=ENodeTypeRef)*;
	public EValidSourceTypeElements getEValidSourceTypeAccess() {
		return pEValidSourceType;
	}
	
	public ParserRule getEValidSourceTypeRule() {
		return getEValidSourceTypeAccess().getRule();
	}
	
	//ENodeTypeRef:
	//	name=[ENodeType|QUALIFIED_NAME];
	public ENodeTypeRefElements getENodeTypeRefAccess() {
		return pENodeTypeRef;
	}
	
	public ParserRule getENodeTypeRefRule() {
		return getENodeTypeRefAccess().getRule();
	}
	
	//ERequirements:
	//	{ERequirements} requirements+=ERequirementDefinition*;
	public ERequirementsElements getERequirementsAccess() {
		return pERequirements;
	}
	
	public ParserRule getERequirementsRule() {
		return getERequirementsAccess().getRule();
	}
	
	//ERequirementDefinition:
	//	name=ID ':'
	//	BEGIN
	//	requirement=ERequirementDefinitionBody
	//	END;
	public ERequirementDefinitionElements getERequirementDefinitionAccess() {
		return pERequirementDefinition;
	}
	
	public ParserRule getERequirementDefinitionRule() {
		return getERequirementDefinitionAccess().getRule();
	}
	
	//ERequirementDefinitionBody:
	//	'capability:' capability=[ECapabilityType|QUALIFIED_NAME] & ('node:' node=[ENodeType|QUALIFIED_NAME])? &
	//	('relationship:' relationship=[ERelationshipType|QUALIFIED_NAME])? & ('occurrences:' '[' start=EAlphaNumericValue ','
	//	end=EAlphaNumericValue ']')?;
	public ERequirementDefinitionBodyElements getERequirementDefinitionBodyAccess() {
		return pERequirementDefinitionBody;
	}
	
	public ParserRule getERequirementDefinitionBodyRule() {
		return getERequirementDefinitionBodyAccess().getRule();
	}
	
	//EReqOrCap:
	//	ERequirementDefinition | ECapabilityDefinition;
	public EReqOrCapElements getEReqOrCapAccess() {
		return pEReqOrCap;
	}
	
	public ParserRule getEReqOrCapRule() {
		return getEReqOrCapAccess().getRule();
	}
	
	//EConstraints:
	//	{EConstraints} constraints+=EConstraint*;
	public EConstraintsElements getEConstraintsAccess() {
		return pEConstraints;
	}
	
	public ParserRule getEConstraintsRule() {
		return getEConstraintsAccess().getRule();
	}
	
	//EConstraint:
	//	EEqual | EGreaterThan | EGreaterOrEqual | ELessThan | ELessOrEqual | EInRange | EValid_Values | ELength | EMinLength |
	//	EMaxLength;
	public EConstraintElements getEConstraintAccess() {
		return pEConstraint;
	}
	
	public ParserRule getEConstraintRule() {
		return getEConstraintAccess().getRule();
	}
	
	//EMaxLength:
	//	'max_length:' val=EAlphaNumericValue;
	public EMaxLengthElements getEMaxLengthAccess() {
		return pEMaxLength;
	}
	
	public ParserRule getEMaxLengthRule() {
		return getEMaxLengthAccess().getRule();
	}
	
	//EMinLength:
	//	'min_length:' val=EAlphaNumericValue;
	public EMinLengthElements getEMinLengthAccess() {
		return pEMinLength;
	}
	
	public ParserRule getEMinLengthRule() {
		return getEMinLengthAccess().getRule();
	}
	
	//ELength:
	//	'length:' val=EAlphaNumericValue;
	public ELengthElements getELengthAccess() {
		return pELength;
	}
	
	public ParserRule getELengthRule() {
		return getELengthAccess().getRule();
	}
	
	//EValid_Values:
	//	'valid_values:' val=ELIST;
	public EValid_ValuesElements getEValid_ValuesAccess() {
		return pEValid_Values;
	}
	
	public ParserRule getEValid_ValuesRule() {
		return getEValid_ValuesAccess().getRule();
	}
	
	//ELIST:
	//	'[' list+=EAlphaNumericValue ("," list+=EAlphaNumericValue)* ']';
	public ELISTElements getELISTAccess() {
		return pELIST;
	}
	
	public ParserRule getELISTRule() {
		return getELISTAccess().getRule();
	}
	
	//EInRange:
	//	'in_range:' '[' start=EAlphaNumericValue "," end=EAlphaNumericValue ']';
	public EInRangeElements getEInRangeAccess() {
		return pEInRange;
	}
	
	public ParserRule getEInRangeRule() {
		return getEInRangeAccess().getRule();
	}
	
	//ELessOrEqual:
	//	'less_or_equal:' val=EAlphaNumericValue;
	public ELessOrEqualElements getELessOrEqualAccess() {
		return pELessOrEqual;
	}
	
	public ParserRule getELessOrEqualRule() {
		return getELessOrEqualAccess().getRule();
	}
	
	//ELessThan:
	//	'less_than:' val=EAlphaNumericValue;
	public ELessThanElements getELessThanAccess() {
		return pELessThan;
	}
	
	public ParserRule getELessThanRule() {
		return getELessThanAccess().getRule();
	}
	
	//EGreaterOrEqual:
	//	'greater_or_equal:' val=EAlphaNumericValue;
	public EGreaterOrEqualElements getEGreaterOrEqualAccess() {
		return pEGreaterOrEqual;
	}
	
	public ParserRule getEGreaterOrEqualRule() {
		return getEGreaterOrEqualAccess().getRule();
	}
	
	//EGreaterThan:
	//	'greater_than:' val=EAlphaNumericValue;
	public EGreaterThanElements getEGreaterThanAccess() {
		return pEGreaterThan;
	}
	
	public ParserRule getEGreaterThanRule() {
		return getEGreaterThanAccess().getRule();
	}
	
	//EEqual:
	//	'equal:' val=ESingleValue;
	public EEqualElements getEEqualAccess() {
		return pEEqual;
	}
	
	public ParserRule getEEqualRule() {
		return getEEqualAccess().getRule();
	}
	
	//EAssignmentValue:
	//	ESingleValue | ELIST | EMAP | EFunction;
	public EAssignmentValueElements getEAssignmentValueAccess() {
		return pEAssignmentValue;
	}
	
	public ParserRule getEAssignmentValueRule() {
		return getEAssignmentValueAccess().getRule();
	}
	
	//ESingleValue:
	//	ESTRING | EBOOLEAN | EFLOAT | ESIGNEDINT;
	public ESingleValueElements getESingleValueAccess() {
		return pESingleValue;
	}
	
	public ParserRule getESingleValueRule() {
		return getESingleValueAccess().getRule();
	}
	
	//EAlphaNumericValue:
	//	ESTRING | EFLOAT | ESIGNEDINT;
	public EAlphaNumericValueElements getEAlphaNumericValueAccess() {
		return pEAlphaNumericValue;
	}
	
	public ParserRule getEAlphaNumericValueRule() {
		return getEAlphaNumericValueAccess().getRule();
	}
	
	//ESTRING:
	//	value=STRING;
	public ESTRINGElements getESTRINGAccess() {
		return pESTRING;
	}
	
	public ParserRule getESTRINGRule() {
		return getESTRINGAccess().getRule();
	}
	
	//EBOOLEAN:
	//	value=BOOLEAN;
	public EBOOLEANElements getEBOOLEANAccess() {
		return pEBOOLEAN;
	}
	
	public ParserRule getEBOOLEANRule() {
		return getEBOOLEANAccess().getRule();
	}
	
	//EFLOAT:
	//	value=FLOAT;
	public EFLOATElements getEFLOATAccess() {
		return pEFLOAT;
	}
	
	public ParserRule getEFLOATRule() {
		return getEFLOATAccess().getRule();
	}
	
	//ESIGNEDINT:
	//	value=SIGNEDINT;
	public ESIGNEDINTElements getESIGNEDINTAccess() {
		return pESIGNEDINT;
	}
	
	public ParserRule getESIGNEDINTRule() {
		return getESIGNEDINTAccess().getRule();
	}
	
	//EMAP:
	//	BEGIN
	//	map+=EMapEntry+
	//	END;
	public EMAPElements getEMAPAccess() {
		return pEMAP;
	}
	
	public ParserRule getEMAPRule() {
		return getEMAPAccess().getRule();
	}
	
	//EMapEntry:
	//	key=ID ":" value=EAssignmentValue;
	public EMapEntryElements getEMapEntryAccess() {
		return pEMapEntry;
	}
	
	public ParserRule getEMapEntryRule() {
		return getEMapEntryAccess().getRule();
	}
	
	//terminal QUALIFIED_NAME:
	//	ID ('.' ID)+;
	public TerminalRule getQUALIFIED_NAMERule() {
		return tQUALIFIED_NAME;
	}
	
	//terminal BOOLEAN returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//SIGNEDINT ecore::EInt:
	//	'-'? INT;
	public SIGNEDINTElements getSIGNEDINTAccess() {
		return pSIGNEDINT;
	}
	
	public ParserRule getSIGNEDINTRule() {
		return getSIGNEDINTAccess().getRule();
	}
	
	//FLOAT ecore::EFloat:
	//	INT? '.' INT;
	public FLOATElements getFLOATAccess() {
		return pFLOAT;
	}
	
	public ParserRule getFLOATRule() {
		return getFLOATAccess().getRule();
	}
	
	//terminal ENTITY:
	//	'SELF' | 'SOURCE' | 'TARGET' | 'HOST';
	public TerminalRule getENTITYRule() {
		return tENTITY;
	}
	
	//terminal PRIMITIVE_DATA_TYPE:
	//	'string' | 'integer' | 'float' | 'boolean' | 'map' | 'list' | 'range' | 'timestamp' | 'scalar-unit.frequency' |
	//	'scalar-unit.size' | 'version-type';
	public TerminalRule getPRIMITIVE_DATA_TYPERule() {
		return tPRIMITIVE_DATA_TYPE;
	}
	
	//@Override
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '-' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal BEGIN:
	//	'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END:
	//	'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
