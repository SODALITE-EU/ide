/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.alerting.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.sodalite.dsl.alerting.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AlertingFactoryImpl extends EFactoryImpl implements AlertingFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AlertingFactory init()
  {
    try
    {
      AlertingFactory theAlertingFactory = (AlertingFactory)EPackage.Registry.INSTANCE.getEFactory(AlertingPackage.eNS_URI);
      if (theAlertingFactory != null)
      {
        return theAlertingFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AlertingFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AlertingFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AlertingPackage.ALERTING_MODEL: return createAlerting_Model();
      case AlertingPackage.EGROUPS: return createEGroups();
      case AlertingPackage.EGROUP: return createEGroup();
      case AlertingPackage.ERULE: return createERule();
      case AlertingPackage.ELABEL: return createELabel();
      case AlertingPackage.EEXPRESSION: return createEExpression();
      case AlertingPackage.EBINARY_STATEMENT: return createEBinaryStatement();
      case AlertingPackage.ESTATEMENT: return createEStatement();
      case AlertingPackage.EVECTOR_MATCHING: return createEVectorMatching();
      case AlertingPackage.ELABEL_LIST: return createELabelList();
      case AlertingPackage.ESINGLE_LABEL: return createESingleLabel();
      case AlertingPackage.EAGGREGATION_EXPR: return createEAggregationExpr();
      case AlertingPackage.EVECTOR_EXPR: return createEVectorExpr();
      case AlertingPackage.EBINARY_EXPR: return createEBinaryExpr();
      case AlertingPackage.EFUNCTION_EXPR: return createEFunctionExpr();
      case AlertingPackage.EMETRIC_EXPR: return createEMetricExpr();
      case AlertingPackage.EPERIOD: return createEPeriod();
      case AlertingPackage.EPERIOD_SEGMENT: return createEPeriodSegment();
      case AlertingPackage.ETAG: return createETag();
      case AlertingPackage.EOPER_ASSOCIATION: return createEOperAssociation();
      case AlertingPackage.EMETRIC_TYPE: return createEMetricType();
      case AlertingPackage.ENUMBER: return createENUMBER();
      case AlertingPackage.EBINARY_OPERATOR: return createEBinaryOperator();
      case AlertingPackage.EARITHMETIC_OPERATOR: return createEArithmeticOperator();
      case AlertingPackage.ECOMPARISON_OPERATOR: return createEComparisonOperator();
      case AlertingPackage.EBINARY_LOGIC_OPERATOR: return createEBinaryLogicOperator();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Alerting_Model createAlerting_Model()
  {
    Alerting_ModelImpl alerting_Model = new Alerting_ModelImpl();
    return alerting_Model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EGroups createEGroups()
  {
    EGroupsImpl eGroups = new EGroupsImpl();
    return eGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EGroup createEGroup()
  {
    EGroupImpl eGroup = new EGroupImpl();
    return eGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ERule createERule()
  {
    ERuleImpl eRule = new ERuleImpl();
    return eRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ELabel createELabel()
  {
    ELabelImpl eLabel = new ELabelImpl();
    return eLabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EExpression createEExpression()
  {
    EExpressionImpl eExpression = new EExpressionImpl();
    return eExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EBinaryStatement createEBinaryStatement()
  {
    EBinaryStatementImpl eBinaryStatement = new EBinaryStatementImpl();
    return eBinaryStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EStatement createEStatement()
  {
    EStatementImpl eStatement = new EStatementImpl();
    return eStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EVectorMatching createEVectorMatching()
  {
    EVectorMatchingImpl eVectorMatching = new EVectorMatchingImpl();
    return eVectorMatching;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ELabelList createELabelList()
  {
    ELabelListImpl eLabelList = new ELabelListImpl();
    return eLabelList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ESingleLabel createESingleLabel()
  {
    ESingleLabelImpl eSingleLabel = new ESingleLabelImpl();
    return eSingleLabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAggregationExpr createEAggregationExpr()
  {
    EAggregationExprImpl eAggregationExpr = new EAggregationExprImpl();
    return eAggregationExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EVectorExpr createEVectorExpr()
  {
    EVectorExprImpl eVectorExpr = new EVectorExprImpl();
    return eVectorExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EBinaryExpr createEBinaryExpr()
  {
    EBinaryExprImpl eBinaryExpr = new EBinaryExprImpl();
    return eBinaryExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EFunctionExpr createEFunctionExpr()
  {
    EFunctionExprImpl eFunctionExpr = new EFunctionExprImpl();
    return eFunctionExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EMetricExpr createEMetricExpr()
  {
    EMetricExprImpl eMetricExpr = new EMetricExprImpl();
    return eMetricExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EPeriod createEPeriod()
  {
    EPeriodImpl ePeriod = new EPeriodImpl();
    return ePeriod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EPeriodSegment createEPeriodSegment()
  {
    EPeriodSegmentImpl ePeriodSegment = new EPeriodSegmentImpl();
    return ePeriodSegment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ETag createETag()
  {
    ETagImpl eTag = new ETagImpl();
    return eTag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EOperAssociation createEOperAssociation()
  {
    EOperAssociationImpl eOperAssociation = new EOperAssociationImpl();
    return eOperAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EMetricType createEMetricType()
  {
    EMetricTypeImpl eMetricType = new EMetricTypeImpl();
    return eMetricType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ENUMBER createENUMBER()
  {
    ENUMBERImpl enumber = new ENUMBERImpl();
    return enumber;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EBinaryOperator createEBinaryOperator()
  {
    EBinaryOperatorImpl eBinaryOperator = new EBinaryOperatorImpl();
    return eBinaryOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EArithmeticOperator createEArithmeticOperator()
  {
    EArithmeticOperatorImpl eArithmeticOperator = new EArithmeticOperatorImpl();
    return eArithmeticOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EComparisonOperator createEComparisonOperator()
  {
    EComparisonOperatorImpl eComparisonOperator = new EComparisonOperatorImpl();
    return eComparisonOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EBinaryLogicOperator createEBinaryLogicOperator()
  {
    EBinaryLogicOperatorImpl eBinaryLogicOperator = new EBinaryLogicOperatorImpl();
    return eBinaryLogicOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AlertingPackage getAlertingPackage()
  {
    return (AlertingPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AlertingPackage getPackage()
  {
    return AlertingPackage.eINSTANCE;
  }

} //AlertingFactoryImpl
