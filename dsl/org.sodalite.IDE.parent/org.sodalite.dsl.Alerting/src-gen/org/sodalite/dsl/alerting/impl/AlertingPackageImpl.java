/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.alerting.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.sodalite.dsl.alerting.AlertingFactory;
import org.sodalite.dsl.alerting.AlertingPackage;
import org.sodalite.dsl.alerting.Alerting_Model;
import org.sodalite.dsl.alerting.EAggregationExpr;
import org.sodalite.dsl.alerting.EArithmeticOperator;
import org.sodalite.dsl.alerting.EBinaryExpr;
import org.sodalite.dsl.alerting.EBinaryLogicOperator;
import org.sodalite.dsl.alerting.EBinaryOperator;
import org.sodalite.dsl.alerting.EBinaryStatement;
import org.sodalite.dsl.alerting.EComparisonOperator;
import org.sodalite.dsl.alerting.EExpression;
import org.sodalite.dsl.alerting.EFunctionExpr;
import org.sodalite.dsl.alerting.EGroup;
import org.sodalite.dsl.alerting.EGroups;
import org.sodalite.dsl.alerting.ELabel;
import org.sodalite.dsl.alerting.ELabelList;
import org.sodalite.dsl.alerting.EMetricExpr;
import org.sodalite.dsl.alerting.EMetricType;
import org.sodalite.dsl.alerting.EOperAssociation;
import org.sodalite.dsl.alerting.EPeriod;
import org.sodalite.dsl.alerting.EPeriodSegment;
import org.sodalite.dsl.alerting.ERule;
import org.sodalite.dsl.alerting.ESingleLabel;
import org.sodalite.dsl.alerting.EStatement;
import org.sodalite.dsl.alerting.ETag;
import org.sodalite.dsl.alerting.EVectorExpr;
import org.sodalite.dsl.alerting.EVectorMatching;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AlertingPackageImpl extends EPackageImpl implements AlertingPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass alerting_ModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eGroupsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eGroupEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eLabelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eBinaryStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eVectorMatchingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eLabelListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eSingleLabelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eAggregationExprEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eVectorExprEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eBinaryExprEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eFunctionExprEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eMetricExprEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ePeriodEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ePeriodSegmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eTagEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eOperAssociationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eMetricTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eBinaryOperatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eArithmeticOperatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eComparisonOperatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eBinaryLogicOperatorEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.sodalite.dsl.alerting.AlertingPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private AlertingPackageImpl()
  {
    super(eNS_URI, AlertingFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link AlertingPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static AlertingPackage init()
  {
    if (isInited) return (AlertingPackage)EPackage.Registry.INSTANCE.getEPackage(AlertingPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredAlertingPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    AlertingPackageImpl theAlertingPackage = registeredAlertingPackage instanceof AlertingPackageImpl ? (AlertingPackageImpl)registeredAlertingPackage : new AlertingPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theAlertingPackage.createPackageContents();

    // Initialize created meta-data
    theAlertingPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theAlertingPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(AlertingPackage.eNS_URI, theAlertingPackage);
    return theAlertingPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAlerting_Model()
  {
    return alerting_ModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlerting_Model_Groups()
  {
    return (EReference)alerting_ModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEGroups()
  {
    return eGroupsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEGroups_Groups()
  {
    return (EReference)eGroupsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEGroup()
  {
    return eGroupEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEGroup_Name()
  {
    return (EAttribute)eGroupEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEGroup_Rules()
  {
    return (EReference)eGroupEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getERule()
  {
    return eRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getERule_Alert()
  {
    return (EAttribute)eRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getERule_Expr()
  {
    return (EReference)eRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getERule_Duration()
  {
    return (EAttribute)eRuleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getERule_Labels()
  {
    return (EReference)eRuleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getERule_Annotations()
  {
    return (EReference)eRuleEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getELabel()
  {
    return eLabelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getELabel_Key()
  {
    return (EAttribute)eLabelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getELabel_Value()
  {
    return (EAttribute)eLabelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEExpression()
  {
    return eExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEExpression_Expr()
  {
    return (EReference)eExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEBinaryStatement()
  {
    return eBinaryStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEBinaryStatement_Lexpr()
  {
    return (EReference)eBinaryStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEBinaryStatement_Oper()
  {
    return (EReference)eBinaryStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEBinaryStatement_Rexpr()
  {
    return (EReference)eBinaryStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEStatement()
  {
    return eStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEVectorMatching()
  {
    return eVectorMatchingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEVectorMatching_Lexpr()
  {
    return (EReference)eVectorMatchingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEVectorMatching_Oper()
  {
    return (EReference)eVectorMatchingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEVectorMatching_Type()
  {
    return (EAttribute)eVectorMatchingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEVectorMatching_Labels()
  {
    return (EReference)eVectorMatchingEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEVectorMatching_Rexpr()
  {
    return (EReference)eVectorMatchingEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getELabelList()
  {
    return eLabelListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getELabelList_List()
  {
    return (EReference)eLabelListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getESingleLabel()
  {
    return eSingleLabelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getESingleLabel_Label()
  {
    return (EAttribute)eSingleLabelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEAggregationExpr()
  {
    return eAggregationExprEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAggregationExpr_Oper()
  {
    return (EAttribute)eAggregationExprEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEAggregationExpr_Modifier()
  {
    return (EAttribute)eAggregationExprEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEAggregationExpr_Labels()
  {
    return (EReference)eAggregationExprEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEAggregationExpr_Expr()
  {
    return (EReference)eAggregationExprEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEVectorExpr()
  {
    return eVectorExprEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEBinaryExpr()
  {
    return eBinaryExprEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEBinaryExpr_Lexpr()
  {
    return (EReference)eBinaryExprEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEBinaryExpr_Oper()
  {
    return (EReference)eBinaryExprEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEBinaryExpr_Rexpr()
  {
    return (EReference)eBinaryExprEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEFunctionExpr()
  {
    return eFunctionExprEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEFunctionExpr_Function()
  {
    return (EAttribute)eFunctionExprEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEFunctionExpr_Expr()
  {
    return (EReference)eFunctionExprEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEMetricExpr()
  {
    return eMetricExprEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEMetricExpr_Type()
  {
    return (EReference)eMetricExprEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEMetricExpr_Tags()
  {
    return (EReference)eMetricExprEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEMetricExpr_Period()
  {
    return (EReference)eMetricExprEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEPeriod()
  {
    return ePeriodEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEPeriod_Segments()
  {
    return (EReference)ePeriodEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEPeriodSegment()
  {
    return ePeriodSegmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEPeriodSegment_Value()
  {
    return (EAttribute)ePeriodSegmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEPeriodSegment_Unit()
  {
    return (EAttribute)ePeriodSegmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getETag()
  {
    return eTagEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getETag_Key()
  {
    return (EAttribute)eTagEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getETag_Oper()
  {
    return (EReference)eTagEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getETag_Value()
  {
    return (EAttribute)eTagEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEOperAssociation()
  {
    return eOperAssociationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEOperAssociation_Type()
  {
    return (EAttribute)eOperAssociationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEMetricType()
  {
    return eMetricTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEMetricType_Type()
  {
    return (EAttribute)eMetricTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getENUMBER()
  {
    return enumberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getENUMBER_Value()
  {
    return (EAttribute)enumberEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEBinaryOperator()
  {
    return eBinaryOperatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEBinaryOperator_Type()
  {
    return (EAttribute)eBinaryOperatorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEArithmeticOperator()
  {
    return eArithmeticOperatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEComparisonOperator()
  {
    return eComparisonOperatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEBinaryLogicOperator()
  {
    return eBinaryLogicOperatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AlertingFactory getAlertingFactory()
  {
    return (AlertingFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    alerting_ModelEClass = createEClass(ALERTING_MODEL);
    createEReference(alerting_ModelEClass, ALERTING_MODEL__GROUPS);

    eGroupsEClass = createEClass(EGROUPS);
    createEReference(eGroupsEClass, EGROUPS__GROUPS);

    eGroupEClass = createEClass(EGROUP);
    createEAttribute(eGroupEClass, EGROUP__NAME);
    createEReference(eGroupEClass, EGROUP__RULES);

    eRuleEClass = createEClass(ERULE);
    createEAttribute(eRuleEClass, ERULE__ALERT);
    createEReference(eRuleEClass, ERULE__EXPR);
    createEAttribute(eRuleEClass, ERULE__DURATION);
    createEReference(eRuleEClass, ERULE__LABELS);
    createEReference(eRuleEClass, ERULE__ANNOTATIONS);

    eLabelEClass = createEClass(ELABEL);
    createEAttribute(eLabelEClass, ELABEL__KEY);
    createEAttribute(eLabelEClass, ELABEL__VALUE);

    eExpressionEClass = createEClass(EEXPRESSION);
    createEReference(eExpressionEClass, EEXPRESSION__EXPR);

    eBinaryStatementEClass = createEClass(EBINARY_STATEMENT);
    createEReference(eBinaryStatementEClass, EBINARY_STATEMENT__LEXPR);
    createEReference(eBinaryStatementEClass, EBINARY_STATEMENT__OPER);
    createEReference(eBinaryStatementEClass, EBINARY_STATEMENT__REXPR);

    eStatementEClass = createEClass(ESTATEMENT);

    eVectorMatchingEClass = createEClass(EVECTOR_MATCHING);
    createEReference(eVectorMatchingEClass, EVECTOR_MATCHING__LEXPR);
    createEReference(eVectorMatchingEClass, EVECTOR_MATCHING__OPER);
    createEAttribute(eVectorMatchingEClass, EVECTOR_MATCHING__TYPE);
    createEReference(eVectorMatchingEClass, EVECTOR_MATCHING__LABELS);
    createEReference(eVectorMatchingEClass, EVECTOR_MATCHING__REXPR);

    eLabelListEClass = createEClass(ELABEL_LIST);
    createEReference(eLabelListEClass, ELABEL_LIST__LIST);

    eSingleLabelEClass = createEClass(ESINGLE_LABEL);
    createEAttribute(eSingleLabelEClass, ESINGLE_LABEL__LABEL);

    eAggregationExprEClass = createEClass(EAGGREGATION_EXPR);
    createEAttribute(eAggregationExprEClass, EAGGREGATION_EXPR__OPER);
    createEAttribute(eAggregationExprEClass, EAGGREGATION_EXPR__MODIFIER);
    createEReference(eAggregationExprEClass, EAGGREGATION_EXPR__LABELS);
    createEReference(eAggregationExprEClass, EAGGREGATION_EXPR__EXPR);

    eVectorExprEClass = createEClass(EVECTOR_EXPR);

    eBinaryExprEClass = createEClass(EBINARY_EXPR);
    createEReference(eBinaryExprEClass, EBINARY_EXPR__LEXPR);
    createEReference(eBinaryExprEClass, EBINARY_EXPR__OPER);
    createEReference(eBinaryExprEClass, EBINARY_EXPR__REXPR);

    eFunctionExprEClass = createEClass(EFUNCTION_EXPR);
    createEAttribute(eFunctionExprEClass, EFUNCTION_EXPR__FUNCTION);
    createEReference(eFunctionExprEClass, EFUNCTION_EXPR__EXPR);

    eMetricExprEClass = createEClass(EMETRIC_EXPR);
    createEReference(eMetricExprEClass, EMETRIC_EXPR__TYPE);
    createEReference(eMetricExprEClass, EMETRIC_EXPR__TAGS);
    createEReference(eMetricExprEClass, EMETRIC_EXPR__PERIOD);

    ePeriodEClass = createEClass(EPERIOD);
    createEReference(ePeriodEClass, EPERIOD__SEGMENTS);

    ePeriodSegmentEClass = createEClass(EPERIOD_SEGMENT);
    createEAttribute(ePeriodSegmentEClass, EPERIOD_SEGMENT__VALUE);
    createEAttribute(ePeriodSegmentEClass, EPERIOD_SEGMENT__UNIT);

    eTagEClass = createEClass(ETAG);
    createEAttribute(eTagEClass, ETAG__KEY);
    createEReference(eTagEClass, ETAG__OPER);
    createEAttribute(eTagEClass, ETAG__VALUE);

    eOperAssociationEClass = createEClass(EOPER_ASSOCIATION);
    createEAttribute(eOperAssociationEClass, EOPER_ASSOCIATION__TYPE);

    eMetricTypeEClass = createEClass(EMETRIC_TYPE);
    createEAttribute(eMetricTypeEClass, EMETRIC_TYPE__TYPE);

    enumberEClass = createEClass(ENUMBER);
    createEAttribute(enumberEClass, ENUMBER__VALUE);

    eBinaryOperatorEClass = createEClass(EBINARY_OPERATOR);
    createEAttribute(eBinaryOperatorEClass, EBINARY_OPERATOR__TYPE);

    eArithmeticOperatorEClass = createEClass(EARITHMETIC_OPERATOR);

    eComparisonOperatorEClass = createEClass(ECOMPARISON_OPERATOR);

    eBinaryLogicOperatorEClass = createEClass(EBINARY_LOGIC_OPERATOR);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    eVectorMatchingEClass.getESuperTypes().add(this.getEStatement());
    eAggregationExprEClass.getESuperTypes().add(this.getEVectorExpr());
    eVectorExprEClass.getESuperTypes().add(this.getEStatement());
    eBinaryExprEClass.getESuperTypes().add(this.getEVectorExpr());
    eFunctionExprEClass.getESuperTypes().add(this.getEVectorExpr());
    eMetricExprEClass.getESuperTypes().add(this.getEVectorExpr());
    enumberEClass.getESuperTypes().add(this.getEVectorExpr());
    eArithmeticOperatorEClass.getESuperTypes().add(this.getEBinaryOperator());
    eComparisonOperatorEClass.getESuperTypes().add(this.getEBinaryOperator());
    eBinaryLogicOperatorEClass.getESuperTypes().add(this.getEBinaryOperator());

    // Initialize classes and features; add operations and parameters
    initEClass(alerting_ModelEClass, Alerting_Model.class, "Alerting_Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAlerting_Model_Groups(), this.getEGroups(), null, "groups", null, 0, -1, Alerting_Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eGroupsEClass, EGroups.class, "EGroups", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEGroups_Groups(), this.getEGroup(), null, "groups", null, 0, -1, EGroups.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eGroupEClass, EGroup.class, "EGroup", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEGroup_Name(), ecorePackage.getEString(), "name", null, 0, 1, EGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEGroup_Rules(), this.getERule(), null, "rules", null, 0, -1, EGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eRuleEClass, ERule.class, "ERule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getERule_Alert(), ecorePackage.getEString(), "alert", null, 0, 1, ERule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getERule_Expr(), this.getEExpression(), null, "expr", null, 0, 1, ERule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getERule_Duration(), ecorePackage.getEString(), "duration", null, 0, 1, ERule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getERule_Labels(), this.getELabel(), null, "labels", null, 0, -1, ERule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getERule_Annotations(), this.getELabel(), null, "annotations", null, 0, -1, ERule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eLabelEClass, ELabel.class, "ELabel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getELabel_Key(), ecorePackage.getEString(), "key", null, 0, 1, ELabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getELabel_Value(), ecorePackage.getEString(), "value", null, 0, 1, ELabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eExpressionEClass, EExpression.class, "EExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEExpression_Expr(), this.getEBinaryStatement(), null, "expr", null, 0, 1, EExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eBinaryStatementEClass, EBinaryStatement.class, "EBinaryStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEBinaryStatement_Lexpr(), this.getEStatement(), null, "lexpr", null, 0, 1, EBinaryStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEBinaryStatement_Oper(), this.getEComparisonOperator(), null, "oper", null, 0, 1, EBinaryStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEBinaryStatement_Rexpr(), this.getENUMBER(), null, "rexpr", null, 0, 1, EBinaryStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eStatementEClass, EStatement.class, "EStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(eVectorMatchingEClass, EVectorMatching.class, "EVectorMatching", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEVectorMatching_Lexpr(), this.getEVectorExpr(), null, "lexpr", null, 0, 1, EVectorMatching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEVectorMatching_Oper(), this.getEBinaryOperator(), null, "oper", null, 0, 1, EVectorMatching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEVectorMatching_Type(), ecorePackage.getEString(), "type", null, 0, 1, EVectorMatching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEVectorMatching_Labels(), this.getELabelList(), null, "labels", null, 0, 1, EVectorMatching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEVectorMatching_Rexpr(), this.getEVectorExpr(), null, "rexpr", null, 0, 1, EVectorMatching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eLabelListEClass, ELabelList.class, "ELabelList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getELabelList_List(), this.getESingleLabel(), null, "list", null, 0, -1, ELabelList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eSingleLabelEClass, ESingleLabel.class, "ESingleLabel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getESingleLabel_Label(), ecorePackage.getEString(), "label", null, 0, 1, ESingleLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eAggregationExprEClass, EAggregationExpr.class, "EAggregationExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEAggregationExpr_Oper(), ecorePackage.getEString(), "oper", null, 0, 1, EAggregationExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEAggregationExpr_Modifier(), ecorePackage.getEString(), "modifier", null, 0, 1, EAggregationExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEAggregationExpr_Labels(), this.getELabelList(), null, "labels", null, 0, 1, EAggregationExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEAggregationExpr_Expr(), this.getEVectorExpr(), null, "expr", null, 0, 1, EAggregationExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eVectorExprEClass, EVectorExpr.class, "EVectorExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(eBinaryExprEClass, EBinaryExpr.class, "EBinaryExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEBinaryExpr_Lexpr(), this.getEVectorExpr(), null, "lexpr", null, 0, 1, EBinaryExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEBinaryExpr_Oper(), this.getEBinaryOperator(), null, "oper", null, 0, 1, EBinaryExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEBinaryExpr_Rexpr(), this.getEVectorExpr(), null, "rexpr", null, 0, 1, EBinaryExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eFunctionExprEClass, EFunctionExpr.class, "EFunctionExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEFunctionExpr_Function(), ecorePackage.getEString(), "function", null, 0, 1, EFunctionExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEFunctionExpr_Expr(), this.getEVectorExpr(), null, "expr", null, 0, 1, EFunctionExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eMetricExprEClass, EMetricExpr.class, "EMetricExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEMetricExpr_Type(), this.getEMetricType(), null, "type", null, 0, 1, EMetricExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEMetricExpr_Tags(), this.getETag(), null, "tags", null, 0, -1, EMetricExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEMetricExpr_Period(), this.getEPeriod(), null, "period", null, 0, 1, EMetricExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ePeriodEClass, EPeriod.class, "EPeriod", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEPeriod_Segments(), this.getEPeriodSegment(), null, "segments", null, 0, -1, EPeriod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ePeriodSegmentEClass, EPeriodSegment.class, "EPeriodSegment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEPeriodSegment_Value(), ecorePackage.getEInt(), "value", null, 0, 1, EPeriodSegment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEPeriodSegment_Unit(), ecorePackage.getEString(), "unit", null, 0, 1, EPeriodSegment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eTagEClass, ETag.class, "ETag", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getETag_Key(), ecorePackage.getEString(), "key", null, 0, 1, ETag.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getETag_Oper(), this.getEOperAssociation(), null, "oper", null, 0, 1, ETag.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getETag_Value(), ecorePackage.getEString(), "value", null, 0, 1, ETag.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eOperAssociationEClass, EOperAssociation.class, "EOperAssociation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEOperAssociation_Type(), ecorePackage.getEString(), "type", null, 0, 1, EOperAssociation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eMetricTypeEClass, EMetricType.class, "EMetricType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEMetricType_Type(), ecorePackage.getEString(), "type", null, 0, 1, EMetricType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumberEClass, org.sodalite.dsl.alerting.ENUMBER.class, "ENUMBER", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getENUMBER_Value(), ecorePackage.getEFloat(), "value", null, 0, 1, org.sodalite.dsl.alerting.ENUMBER.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eBinaryOperatorEClass, EBinaryOperator.class, "EBinaryOperator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEBinaryOperator_Type(), ecorePackage.getEString(), "type", null, 0, 1, EBinaryOperator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eArithmeticOperatorEClass, EArithmeticOperator.class, "EArithmeticOperator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(eComparisonOperatorEClass, EComparisonOperator.class, "EComparisonOperator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(eBinaryLogicOperatorEClass, EBinaryLogicOperator.class, "EBinaryLogicOperator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //AlertingPackageImpl
