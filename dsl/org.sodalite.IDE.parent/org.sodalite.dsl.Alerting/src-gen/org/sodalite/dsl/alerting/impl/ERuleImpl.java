/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.alerting.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.sodalite.dsl.alerting.AlertingPackage;
import org.sodalite.dsl.alerting.EExpression;
import org.sodalite.dsl.alerting.ELabel;
import org.sodalite.dsl.alerting.ERule;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ERule</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.dsl.alerting.impl.ERuleImpl#getAlert <em>Alert</em>}</li>
 *   <li>{@link org.sodalite.dsl.alerting.impl.ERuleImpl#getExpr <em>Expr</em>}</li>
 *   <li>{@link org.sodalite.dsl.alerting.impl.ERuleImpl#getDuration <em>Duration</em>}</li>
 *   <li>{@link org.sodalite.dsl.alerting.impl.ERuleImpl#getLabels <em>Labels</em>}</li>
 *   <li>{@link org.sodalite.dsl.alerting.impl.ERuleImpl#getAnnotations <em>Annotations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ERuleImpl extends MinimalEObjectImpl.Container implements ERule
{
  /**
   * The default value of the '{@link #getAlert() <em>Alert</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlert()
   * @generated
   * @ordered
   */
  protected static final String ALERT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAlert() <em>Alert</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlert()
   * @generated
   * @ordered
   */
  protected String alert = ALERT_EDEFAULT;

  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected EExpression expr;

  /**
   * The default value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected static final String DURATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected String duration = DURATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getLabels() <em>Labels</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabels()
   * @generated
   * @ordered
   */
  protected EList<ELabel> labels;

  /**
   * The cached value of the '{@link #getAnnotations() <em>Annotations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnnotations()
   * @generated
   * @ordered
   */
  protected EList<ELabel> annotations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ERuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlertingPackage.Literals.ERULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAlert()
  {
    return alert;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAlert(String newAlert)
  {
    String oldAlert = alert;
    alert = newAlert;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlertingPackage.ERULE__ALERT, oldAlert, alert));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EExpression getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(EExpression newExpr, NotificationChain msgs)
  {
    EExpression oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlertingPackage.ERULE__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpr(EExpression newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlertingPackage.ERULE__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlertingPackage.ERULE__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlertingPackage.ERULE__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDuration()
  {
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDuration(String newDuration)
  {
    String oldDuration = duration;
    duration = newDuration;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlertingPackage.ERULE__DURATION, oldDuration, duration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ELabel> getLabels()
  {
    if (labels == null)
    {
      labels = new EObjectContainmentEList<ELabel>(ELabel.class, this, AlertingPackage.ERULE__LABELS);
    }
    return labels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ELabel> getAnnotations()
  {
    if (annotations == null)
    {
      annotations = new EObjectContainmentEList<ELabel>(ELabel.class, this, AlertingPackage.ERULE__ANNOTATIONS);
    }
    return annotations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlertingPackage.ERULE__EXPR:
        return basicSetExpr(null, msgs);
      case AlertingPackage.ERULE__LABELS:
        return ((InternalEList<?>)getLabels()).basicRemove(otherEnd, msgs);
      case AlertingPackage.ERULE__ANNOTATIONS:
        return ((InternalEList<?>)getAnnotations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlertingPackage.ERULE__ALERT:
        return getAlert();
      case AlertingPackage.ERULE__EXPR:
        return getExpr();
      case AlertingPackage.ERULE__DURATION:
        return getDuration();
      case AlertingPackage.ERULE__LABELS:
        return getLabels();
      case AlertingPackage.ERULE__ANNOTATIONS:
        return getAnnotations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlertingPackage.ERULE__ALERT:
        setAlert((String)newValue);
        return;
      case AlertingPackage.ERULE__EXPR:
        setExpr((EExpression)newValue);
        return;
      case AlertingPackage.ERULE__DURATION:
        setDuration((String)newValue);
        return;
      case AlertingPackage.ERULE__LABELS:
        getLabels().clear();
        getLabels().addAll((Collection<? extends ELabel>)newValue);
        return;
      case AlertingPackage.ERULE__ANNOTATIONS:
        getAnnotations().clear();
        getAnnotations().addAll((Collection<? extends ELabel>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlertingPackage.ERULE__ALERT:
        setAlert(ALERT_EDEFAULT);
        return;
      case AlertingPackage.ERULE__EXPR:
        setExpr((EExpression)null);
        return;
      case AlertingPackage.ERULE__DURATION:
        setDuration(DURATION_EDEFAULT);
        return;
      case AlertingPackage.ERULE__LABELS:
        getLabels().clear();
        return;
      case AlertingPackage.ERULE__ANNOTATIONS:
        getAnnotations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlertingPackage.ERULE__ALERT:
        return ALERT_EDEFAULT == null ? alert != null : !ALERT_EDEFAULT.equals(alert);
      case AlertingPackage.ERULE__EXPR:
        return expr != null;
      case AlertingPackage.ERULE__DURATION:
        return DURATION_EDEFAULT == null ? duration != null : !DURATION_EDEFAULT.equals(duration);
      case AlertingPackage.ERULE__LABELS:
        return labels != null && !labels.isEmpty();
      case AlertingPackage.ERULE__ANNOTATIONS:
        return annotations != null && !annotations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (alert: ");
    result.append(alert);
    result.append(", duration: ");
    result.append(duration);
    result.append(')');
    return result.toString();
  }

} //ERuleImpl
