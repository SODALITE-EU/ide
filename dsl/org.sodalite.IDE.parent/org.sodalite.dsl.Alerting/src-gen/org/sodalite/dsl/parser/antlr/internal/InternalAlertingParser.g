/*
 * generated by Xtext 2.22.0
 */
parser grammar InternalAlertingParser;

options {
	tokenVocab=InternalAlertingLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.sodalite.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sodalite.dsl.services.AlertingGrammarAccess;

}

@members {

 	private AlertingGrammarAccess grammarAccess;

    public InternalAlertingParser(TokenStream input, AlertingGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Alerting_Model";
   	}

   	@Override
   	protected AlertingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAlerting_Model
entryRuleAlerting_Model returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlerting_ModelRule()); }
	iv_ruleAlerting_Model=ruleAlerting_Model
	{ $current=$iv_ruleAlerting_Model.current; }
	EOF;

// Rule Alerting_Model
ruleAlerting_Model returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAlerting_ModelAccess().getGroupsEGroupsParserRuleCall_0());
			}
			lv_groups_0_0=ruleEGroups
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAlerting_ModelRule());
				}
				add(
					$current,
					"groups",
					lv_groups_0_0,
					"org.sodalite.dsl.Alerting.EGroups");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleEGroups
entryRuleEGroups returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEGroupsRule()); }
	iv_ruleEGroups=ruleEGroups
	{ $current=$iv_ruleEGroups.current; }
	EOF;

// Rule EGroups
ruleEGroups returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEGroupsAccess().getGroupsEGroupParserRuleCall_0());
			}
			lv_groups_0_0=ruleEGroup
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEGroupsRule());
				}
				add(
					$current,
					"groups",
					lv_groups_0_0,
					"org.sodalite.dsl.Alerting.EGroup");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEGroup
entryRuleEGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEGroupRule()); }
	iv_ruleEGroup=ruleEGroup
	{ $current=$iv_ruleEGroup.current; }
	EOF;

// Rule EGroup
ruleEGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Group
		{
			newLeafNode(otherlv_0, grammarAccess.getEGroupAccess().getGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEGroupAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getEGroupAccess().getBEGINTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEGroupAccess().getRulesERuleParserRuleCall_3_0());
				}
				lv_rules_3_0=ruleERule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEGroupRule());
					}
					add(
						$current,
						"rules",
						lv_rules_3_0,
						"org.sodalite.dsl.Alerting.ERule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getEGroupAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleERule
entryRuleERule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getERuleRule()); }
	iv_ruleERule=ruleERule
	{ $current=$iv_ruleERule.current; }
	EOF;

// Rule ERule
ruleERule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Alert
		{
			newLeafNode(otherlv_0, grammarAccess.getERuleAccess().getAlertKeyword_0());
		}
		(
			(
				lv_alert_1_0=RULE_ID
				{
					newLeafNode(lv_alert_1_0, grammarAccess.getERuleAccess().getAlertIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getERuleRule());
					}
					setWithLastConsumed(
						$current,
						"alert",
						lv_alert_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getERuleAccess().getBEGINTerminalRuleCall_2());
		}
		otherlv_3=Expr
		{
			newLeafNode(otherlv_3, grammarAccess.getERuleAccess().getExprKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getERuleAccess().getExprEExpressionParserRuleCall_4_0());
				}
				lv_expr_4_0=ruleEExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getERuleRule());
					}
					set(
						$current,
						"expr",
						lv_expr_4_0,
						"org.sodalite.dsl.Alerting.EExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=For
			{
				newLeafNode(otherlv_5, grammarAccess.getERuleAccess().getForKeyword_5_0());
			}
			(
				(
					lv_duration_6_0=RULE_STRING
					{
						newLeafNode(lv_duration_6_0, grammarAccess.getERuleAccess().getDurationSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getERuleRule());
						}
						setWithLastConsumed(
							$current,
							"duration",
							lv_duration_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_7=Labels
			{
				newLeafNode(otherlv_7, grammarAccess.getERuleAccess().getLabelsKeyword_6_0());
			}
			this_BEGIN_8=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_8, grammarAccess.getERuleAccess().getBEGINTerminalRuleCall_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getERuleAccess().getLabelsELabelParserRuleCall_6_2_0());
					}
					lv_labels_9_0=ruleELabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getERuleRule());
						}
						add(
							$current,
							"labels",
							lv_labels_9_0,
							"org.sodalite.dsl.Alerting.ELabel");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			this_END_10=RULE_END
			{
				newLeafNode(this_END_10, grammarAccess.getERuleAccess().getENDTerminalRuleCall_6_3());
			}
		)?
		(
			otherlv_11=Annotations
			{
				newLeafNode(otherlv_11, grammarAccess.getERuleAccess().getAnnotationsKeyword_7_0());
			}
			this_BEGIN_12=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_12, grammarAccess.getERuleAccess().getBEGINTerminalRuleCall_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getERuleAccess().getAnnotationsELabelParserRuleCall_7_2_0());
					}
					lv_annotations_13_0=ruleELabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getERuleRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_13_0,
							"org.sodalite.dsl.Alerting.ELabel");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			this_END_14=RULE_END
			{
				newLeafNode(this_END_14, grammarAccess.getERuleAccess().getENDTerminalRuleCall_7_3());
			}
		)?
		this_END_15=RULE_END
		{
			newLeafNode(this_END_15, grammarAccess.getERuleAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleELabel
entryRuleELabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getELabelRule()); }
	iv_ruleELabel=ruleELabel
	{ $current=$iv_ruleELabel.current; }
	EOF;

// Rule ELabel
ruleELabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getELabelAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getELabelRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getELabelAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getELabelAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getELabelRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEExpression
entryRuleEExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEExpressionRule()); }
	iv_ruleEExpression=ruleEExpression
	{ $current=$iv_ruleEExpression.current; }
	EOF;

// Rule EExpression
ruleEExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEExpressionAccess().getExprEBinaryStatementParserRuleCall_0());
			}
			lv_expr_0_0=ruleEBinaryStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEExpressionRule());
				}
				set(
					$current,
					"expr",
					lv_expr_0_0,
					"org.sodalite.dsl.Alerting.EBinaryStatement");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEBinaryStatement
entryRuleEBinaryStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEBinaryStatementRule()); }
	iv_ruleEBinaryStatement=ruleEBinaryStatement
	{ $current=$iv_ruleEBinaryStatement.current; }
	EOF;

// Rule EBinaryStatement
ruleEBinaryStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEBinaryStatementAccess().getLexprEStatementParserRuleCall_0_0());
				}
				lv_lexpr_0_0=ruleEStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEBinaryStatementRule());
					}
					set(
						$current,
						"lexpr",
						lv_lexpr_0_0,
						"org.sodalite.dsl.Alerting.EStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEBinaryStatementAccess().getOperEComparisonOperatorParserRuleCall_1_0());
				}
				lv_oper_1_0=ruleEComparisonOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEBinaryStatementRule());
					}
					set(
						$current,
						"oper",
						lv_oper_1_0,
						"org.sodalite.dsl.Alerting.EComparisonOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEBinaryStatementAccess().getRexprENUMBERParserRuleCall_2_0());
				}
				lv_rexpr_2_0=ruleENUMBER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEBinaryStatementRule());
					}
					set(
						$current,
						"rexpr",
						lv_rexpr_2_0,
						"org.sodalite.dsl.Alerting.ENUMBER");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEStatement
entryRuleEStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEStatementRule()); }
	iv_ruleEStatement=ruleEStatement
	{ $current=$iv_ruleEStatement.current; }
	EOF;

// Rule EStatement
ruleEStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleEVectorMatching)=>
			{
				newCompositeNode(grammarAccess.getEStatementAccess().getEVectorMatchingParserRuleCall_0());
			}
			this_EVectorMatching_0=ruleEVectorMatching
			{
				$current = $this_EVectorMatching_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getEStatementAccess().getEVectorExprParserRuleCall_1());
		}
		this_EVectorExpr_1=ruleEVectorExpr
		{
			$current = $this_EVectorExpr_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEVectorMatching
entryRuleEVectorMatching returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEVectorMatchingRule()); }
	iv_ruleEVectorMatching=ruleEVectorMatching
	{ $current=$iv_ruleEVectorMatching.current; }
	EOF;

// Rule EVectorMatching
ruleEVectorMatching returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getEVectorMatchingAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEVectorMatchingAccess().getLexprEVectorExprParserRuleCall_1_0());
				}
				lv_lexpr_1_0=ruleEVectorExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEVectorMatchingRule());
					}
					set(
						$current,
						"lexpr",
						lv_lexpr_1_0,
						"org.sodalite.dsl.Alerting.EVectorExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEVectorMatchingAccess().getOperEBinaryOperatorParserRuleCall_2_0());
				}
				lv_oper_2_0=ruleEBinaryOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEVectorMatchingRule());
					}
					set(
						$current,
						"oper",
						lv_oper_2_0,
						"org.sodalite.dsl.Alerting.EBinaryOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_type_3_0=RULE_EVECTORMATCHINGTYPE
				{
					newLeafNode(lv_type_3_0, grammarAccess.getEVectorMatchingAccess().getTypeEVECTORMATCHINGTYPETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEVectorMatchingRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_3_0,
						"org.sodalite.dsl.Alerting.EVECTORMATCHINGTYPE");
				}
			)
		)
		otherlv_4=LeftParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getEVectorMatchingAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEVectorMatchingAccess().getLabelsELabelListParserRuleCall_5_0());
				}
				lv_labels_5_0=ruleELabelList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEVectorMatchingRule());
					}
					set(
						$current,
						"labels",
						lv_labels_5_0,
						"org.sodalite.dsl.Alerting.ELabelList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getEVectorMatchingAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEVectorMatchingAccess().getRexprEVectorExprParserRuleCall_7_0());
				}
				lv_rexpr_7_0=ruleEVectorExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEVectorMatchingRule());
					}
					set(
						$current,
						"rexpr",
						lv_rexpr_7_0,
						"org.sodalite.dsl.Alerting.EVectorExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=RightParenthesis
		{
			newLeafNode(otherlv_8, grammarAccess.getEVectorMatchingAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleELabelList
entryRuleELabelList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getELabelListRule()); }
	iv_ruleELabelList=ruleELabelList
	{ $current=$iv_ruleELabelList.current; }
	EOF;

// Rule ELabelList
ruleELabelList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getELabelListAccess().getELabelListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getELabelListAccess().getListESingleLabelParserRuleCall_1_0());
				}
				lv_list_1_0=ruleESingleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getELabelListRule());
					}
					add(
						$current,
						"list",
						lv_list_1_0,
						"org.sodalite.dsl.Alerting.ESingleLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getELabelListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getELabelListAccess().getListESingleLabelParserRuleCall_2_1_0());
					}
					lv_list_3_0=ruleESingleLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getELabelListRule());
						}
						add(
							$current,
							"list",
							lv_list_3_0,
							"org.sodalite.dsl.Alerting.ESingleLabel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleESingleLabel
entryRuleESingleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getESingleLabelRule()); }
	iv_ruleESingleLabel=ruleESingleLabel
	{ $current=$iv_ruleESingleLabel.current; }
	EOF;

// Rule ESingleLabel
ruleESingleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_label_0_0=RULE_ID
			{
				newLeafNode(lv_label_0_0, grammarAccess.getESingleLabelAccess().getLabelIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getESingleLabelRule());
				}
				setWithLastConsumed(
					$current,
					"label",
					lv_label_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleEAggregationExpr
entryRuleEAggregationExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEAggregationExprRule()); }
	iv_ruleEAggregationExpr=ruleEAggregationExpr
	{ $current=$iv_ruleEAggregationExpr.current; }
	EOF;

// Rule EAggregationExpr
ruleEAggregationExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_oper_0_0=RULE_EAGGREGATIONOPER
				{
					newLeafNode(lv_oper_0_0, grammarAccess.getEAggregationExprAccess().getOperEAGGREGATIONOPERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEAggregationExprRule());
					}
					setWithLastConsumed(
						$current,
						"oper",
						lv_oper_0_0,
						"org.sodalite.dsl.Alerting.EAGGREGATIONOPER");
				}
			)
		)
		(
			(
				(
					lv_modifier_1_0=RULE_EAGGREGATIONOPERMODIFIER
					{
						newLeafNode(lv_modifier_1_0, grammarAccess.getEAggregationExprAccess().getModifierEAGGREGATIONOPERMODIFIERTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEAggregationExprRule());
						}
						setWithLastConsumed(
							$current,
							"modifier",
							lv_modifier_1_0,
							"org.sodalite.dsl.Alerting.EAGGREGATIONOPERMODIFIER");
					}
				)
			)
			otherlv_2=LeftParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getEAggregationExprAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEAggregationExprAccess().getLabelsELabelListParserRuleCall_1_2_0());
					}
					lv_labels_3_0=ruleELabelList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEAggregationExprRule());
						}
						set(
							$current,
							"labels",
							lv_labels_3_0,
							"org.sodalite.dsl.Alerting.ELabelList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=RightParenthesis
			{
				newLeafNode(otherlv_4, grammarAccess.getEAggregationExprAccess().getRightParenthesisKeyword_1_3());
			}
		)?
		otherlv_5=LeftParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getEAggregationExprAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEAggregationExprAccess().getExprEVectorExprParserRuleCall_3_0());
				}
				lv_expr_6_0=ruleEVectorExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEAggregationExprRule());
					}
					set(
						$current,
						"expr",
						lv_expr_6_0,
						"org.sodalite.dsl.Alerting.EVectorExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getEAggregationExprAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleEVectorExpr
entryRuleEVectorExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEVectorExprRule()); }
	iv_ruleEVectorExpr=ruleEVectorExpr
	{ $current=$iv_ruleEVectorExpr.current; }
	EOF;

// Rule EVectorExpr
ruleEVectorExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEVectorExprAccess().getEBinaryExprParserRuleCall_0());
		}
		this_EBinaryExpr_0=ruleEBinaryExpr
		{
			$current = $this_EBinaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEVectorExprAccess().getEFunctionExprParserRuleCall_1());
		}
		this_EFunctionExpr_1=ruleEFunctionExpr
		{
			$current = $this_EFunctionExpr_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEVectorExprAccess().getEAggregationExprParserRuleCall_2());
		}
		this_EAggregationExpr_2=ruleEAggregationExpr
		{
			$current = $this_EAggregationExpr_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEVectorExprAccess().getEMetricExprParserRuleCall_3());
		}
		this_EMetricExpr_3=ruleEMetricExpr
		{
			$current = $this_EMetricExpr_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEVectorExprAccess().getENUMBERParserRuleCall_4());
		}
		this_ENUMBER_4=ruleENUMBER
		{
			$current = $this_ENUMBER_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEBinaryExpr
entryRuleEBinaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEBinaryExprRule()); }
	iv_ruleEBinaryExpr=ruleEBinaryExpr
	{ $current=$iv_ruleEBinaryExpr.current; }
	EOF;

// Rule EBinaryExpr
ruleEBinaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=LeftParenthesis
		{
			newLeafNode(otherlv_0, grammarAccess.getEBinaryExprAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEBinaryExprAccess().getLexprEVectorExprParserRuleCall_1_0());
				}
				lv_lexpr_1_0=ruleEVectorExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEBinaryExprRule());
					}
					set(
						$current,
						"lexpr",
						lv_lexpr_1_0,
						"org.sodalite.dsl.Alerting.EVectorExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEBinaryExprAccess().getOperEBinaryOperatorParserRuleCall_2_0());
				}
				lv_oper_2_0=ruleEBinaryOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEBinaryExprRule());
					}
					set(
						$current,
						"oper",
						lv_oper_2_0,
						"org.sodalite.dsl.Alerting.EBinaryOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEBinaryExprAccess().getRexprEVectorExprParserRuleCall_3_0());
				}
				lv_rexpr_3_0=ruleEVectorExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEBinaryExprRule());
					}
					set(
						$current,
						"rexpr",
						lv_rexpr_3_0,
						"org.sodalite.dsl.Alerting.EVectorExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getEBinaryExprAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleEFunctionExpr
entryRuleEFunctionExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEFunctionExprRule()); }
	iv_ruleEFunctionExpr=ruleEFunctionExpr
	{ $current=$iv_ruleEFunctionExpr.current; }
	EOF;

// Rule EFunctionExpr
ruleEFunctionExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_function_0_0=RULE_EFUNCTIONTYPE
				{
					newLeafNode(lv_function_0_0, grammarAccess.getEFunctionExprAccess().getFunctionEFUNCTIONTYPETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEFunctionExprRule());
					}
					setWithLastConsumed(
						$current,
						"function",
						lv_function_0_0,
						"org.sodalite.dsl.Alerting.EFUNCTIONTYPE");
				}
			)
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getEFunctionExprAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEFunctionExprAccess().getExprEVectorExprParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleEVectorExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEFunctionExprRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"org.sodalite.dsl.Alerting.EVectorExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=RightParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getEFunctionExprAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEMetricExpr
entryRuleEMetricExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEMetricExprRule()); }
	iv_ruleEMetricExpr=ruleEMetricExpr
	{ $current=$iv_ruleEMetricExpr.current; }
	EOF;

// Rule EMetricExpr
ruleEMetricExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEMetricExprAccess().getTypeEMetricTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleEMetricType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEMetricExprRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.sodalite.dsl.Alerting.EMetricType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getEMetricExprAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEMetricExprAccess().getTagsETagParserRuleCall_2_0());
				}
				lv_tags_2_0=ruleETag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEMetricExprRule());
					}
					add(
						$current,
						"tags",
						lv_tags_2_0,
						"org.sodalite.dsl.Alerting.ETag");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3=Comma
			{
				newLeafNode(otherlv_3, grammarAccess.getEMetricExprAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEMetricExprAccess().getTagsETagParserRuleCall_3_1_0());
					}
					lv_tags_4_0=ruleETag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEMetricExprRule());
						}
						add(
							$current,
							"tags",
							lv_tags_4_0,
							"org.sodalite.dsl.Alerting.ETag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getEMetricExprAccess().getRightCurlyBracketKeyword_4());
		}
		(
			otherlv_6=LeftSquareBracket
			{
				newLeafNode(otherlv_6, grammarAccess.getEMetricExprAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEMetricExprAccess().getPeriodEPeriodParserRuleCall_5_1_0());
					}
					lv_period_7_0=ruleEPeriod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEMetricExprRule());
						}
						set(
							$current,
							"period",
							lv_period_7_0,
							"org.sodalite.dsl.Alerting.EPeriod");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=RightSquareBracket
			{
				newLeafNode(otherlv_8, grammarAccess.getEMetricExprAccess().getRightSquareBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleEPeriod
entryRuleEPeriod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEPeriodRule()); }
	iv_ruleEPeriod=ruleEPeriod
	{ $current=$iv_ruleEPeriod.current; }
	EOF;

// Rule EPeriod
ruleEPeriod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEPeriodAccess().getSegmentsEPeriodSegmentParserRuleCall_0_0());
				}
				lv_segments_0_0=ruleEPeriodSegment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEPeriodRule());
					}
					add(
						$current,
						"segments",
						lv_segments_0_0,
						"org.sodalite.dsl.Alerting.EPeriodSegment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEPeriodAccess().getSegmentsEPeriodSegmentParserRuleCall_1_0());
				}
				lv_segments_1_0=ruleEPeriodSegment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEPeriodRule());
					}
					add(
						$current,
						"segments",
						lv_segments_1_0,
						"org.sodalite.dsl.Alerting.EPeriodSegment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEPeriodSegment
entryRuleEPeriodSegment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEPeriodSegmentRule()); }
	iv_ruleEPeriodSegment=ruleEPeriodSegment
	{ $current=$iv_ruleEPeriodSegment.current; }
	EOF;

// Rule EPeriodSegment
ruleEPeriodSegment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getEPeriodSegmentAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEPeriodSegmentRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_unit_1_0=RULE_EPERIODUNIT
				{
					newLeafNode(lv_unit_1_0, grammarAccess.getEPeriodSegmentAccess().getUnitEPERIODUNITTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEPeriodSegmentRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_1_0,
						"org.sodalite.dsl.Alerting.EPERIODUNIT");
				}
			)
		)
	)
;

// Entry rule entryRuleETag
entryRuleETag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getETagRule()); }
	iv_ruleETag=ruleETag
	{ $current=$iv_ruleETag.current; }
	EOF;

// Rule ETag
ruleETag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getETagAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getETagRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getETagAccess().getOperEOperAssociationParserRuleCall_1_0());
				}
				lv_oper_1_0=ruleEOperAssociation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getETagRule());
					}
					set(
						$current,
						"oper",
						lv_oper_1_0,
						"org.sodalite.dsl.Alerting.EOperAssociation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getETagAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getETagRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEOperAssociation
entryRuleEOperAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEOperAssociationRule()); }
	iv_ruleEOperAssociation=ruleEOperAssociation
	{ $current=$iv_ruleEOperAssociation.current; }
	EOF;

// Rule EOperAssociation
ruleEOperAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1=EqualsSign
				{
					newLeafNode(lv_type_0_1, grammarAccess.getEOperAssociationAccess().getTypeEqualsSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEOperAssociationRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2=EqualsSignTilde
				{
					newLeafNode(lv_type_0_2, grammarAccess.getEOperAssociationAccess().getTypeEqualsSignTildeKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEOperAssociationRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3=ExclamationMarkEqualsSign
				{
					newLeafNode(lv_type_0_3, grammarAccess.getEOperAssociationAccess().getTypeExclamationMarkEqualsSignKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEOperAssociationRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4=Tilde
				{
					newLeafNode(lv_type_0_4, grammarAccess.getEOperAssociationAccess().getTypeTildeKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEOperAssociationRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleEMetricType
entryRuleEMetricType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEMetricTypeRule()); }
	iv_ruleEMetricType=ruleEMetricType
	{ $current=$iv_ruleEMetricType.current; }
	EOF;

// Rule EMetricType
ruleEMetricType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1=RULE_ESLURMEXPORTER
				{
					newLeafNode(lv_type_0_1, grammarAccess.getEMetricTypeAccess().getTypeESLURMEXPORTERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEMetricTypeRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_0_1,
						"org.sodalite.dsl.Alerting.ESLURMEXPORTER");
				}
				    |
				lv_type_0_2=RULE_EPBSEXPORTER
				{
					newLeafNode(lv_type_0_2, grammarAccess.getEMetricTypeAccess().getTypeEPBSEXPORTERTerminalRuleCall_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEMetricTypeRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_0_2,
						"org.sodalite.dsl.Alerting.EPBSEXPORTER");
				}
				    |
				lv_type_0_3=RULE_ENODEEXPORTER
				{
					newLeafNode(lv_type_0_3, grammarAccess.getEMetricTypeAccess().getTypeENODEEXPORTERTerminalRuleCall_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEMetricTypeRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_0_3,
						"org.sodalite.dsl.Alerting.ENODEEXPORTER");
				}
			)
		)
	)
;

// Entry rule entryRuleENUMBER
entryRuleENUMBER returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getENUMBERRule()); }
	iv_ruleENUMBER=ruleENUMBER
	{ $current=$iv_ruleENUMBER.current; }
	EOF;

// Rule ENUMBER
ruleENUMBER returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getENUMBERAccess().getValueNUMBERParserRuleCall_0());
			}
			lv_value_0_0=ruleNUMBER
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getENUMBERRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.sodalite.dsl.Alerting.NUMBER");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEBinaryOperator
entryRuleEBinaryOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEBinaryOperatorRule()); }
	iv_ruleEBinaryOperator=ruleEBinaryOperator
	{ $current=$iv_ruleEBinaryOperator.current; }
	EOF;

// Rule EBinaryOperator
ruleEBinaryOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEBinaryOperatorAccess().getEArithmeticOperatorParserRuleCall_0());
		}
		this_EArithmeticOperator_0=ruleEArithmeticOperator
		{
			$current = $this_EArithmeticOperator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEBinaryOperatorAccess().getEComparisonOperatorParserRuleCall_1());
		}
		this_EComparisonOperator_1=ruleEComparisonOperator
		{
			$current = $this_EComparisonOperator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEBinaryOperatorAccess().getEBinaryLogicOperatorParserRuleCall_2());
		}
		this_EBinaryLogicOperator_2=ruleEBinaryLogicOperator
		{
			$current = $this_EBinaryLogicOperator_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEArithmeticOperator
entryRuleEArithmeticOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEArithmeticOperatorRule()); }
	iv_ruleEArithmeticOperator=ruleEArithmeticOperator
	{ $current=$iv_ruleEArithmeticOperator.current; }
	EOF;

// Rule EArithmeticOperator
ruleEArithmeticOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1=PlusSign
				{
					newLeafNode(lv_type_0_1, grammarAccess.getEArithmeticOperatorAccess().getTypePlusSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEArithmeticOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2=HyphenMinus
				{
					newLeafNode(lv_type_0_2, grammarAccess.getEArithmeticOperatorAccess().getTypeHyphenMinusKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEArithmeticOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3=Asterisk
				{
					newLeafNode(lv_type_0_3, grammarAccess.getEArithmeticOperatorAccess().getTypeAsteriskKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEArithmeticOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4=Solidus
				{
					newLeafNode(lv_type_0_4, grammarAccess.getEArithmeticOperatorAccess().getTypeSolidusKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEArithmeticOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5=PercentSign
				{
					newLeafNode(lv_type_0_5, grammarAccess.getEArithmeticOperatorAccess().getTypePercentSignKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEArithmeticOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
				    |
				lv_type_0_6=CircumflexAccent
				{
					newLeafNode(lv_type_0_6, grammarAccess.getEArithmeticOperatorAccess().getTypeCircumflexAccentKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEArithmeticOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_6, null);
				}
			)
		)
	)
;

// Entry rule entryRuleEComparisonOperator
entryRuleEComparisonOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEComparisonOperatorRule()); }
	iv_ruleEComparisonOperator=ruleEComparisonOperator
	{ $current=$iv_ruleEComparisonOperator.current; }
	EOF;

// Rule EComparisonOperator
ruleEComparisonOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1=LessThanSign
				{
					newLeafNode(lv_type_0_1, grammarAccess.getEComparisonOperatorAccess().getTypeLessThanSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEComparisonOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2=GreaterThanSign
				{
					newLeafNode(lv_type_0_2, grammarAccess.getEComparisonOperatorAccess().getTypeGreaterThanSignKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEComparisonOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3=LessThanSignEqualsSign
				{
					newLeafNode(lv_type_0_3, grammarAccess.getEComparisonOperatorAccess().getTypeLessThanSignEqualsSignKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEComparisonOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4=GreaterThanSignEqualsSign
				{
					newLeafNode(lv_type_0_4, grammarAccess.getEComparisonOperatorAccess().getTypeGreaterThanSignEqualsSignKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEComparisonOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5=EqualsSignEqualsSign
				{
					newLeafNode(lv_type_0_5, grammarAccess.getEComparisonOperatorAccess().getTypeEqualsSignEqualsSignKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEComparisonOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleEBinaryLogicOperator
entryRuleEBinaryLogicOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEBinaryLogicOperatorRule()); }
	iv_ruleEBinaryLogicOperator=ruleEBinaryLogicOperator
	{ $current=$iv_ruleEBinaryLogicOperator.current; }
	EOF;

// Rule EBinaryLogicOperator
ruleEBinaryLogicOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1=And
				{
					newLeafNode(lv_type_0_1, grammarAccess.getEBinaryLogicOperatorAccess().getTypeAndKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEBinaryLogicOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2=Or
				{
					newLeafNode(lv_type_0_2, grammarAccess.getEBinaryLogicOperatorAccess().getTypeOrKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEBinaryLogicOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3=Unless
				{
					newLeafNode(lv_type_0_3, grammarAccess.getEBinaryLogicOperatorAccess().getTypeUnlessKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEBinaryLogicOperatorRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); }
	iv_ruleNUMBER=ruleNUMBER
	{ $current=$iv_ruleNUMBER.current.getText(); }
	EOF;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw=HyphenMinus
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1());
		}
		(
			kw=FullStop
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNUMBERAccess().getFullStopKeyword_2_0());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_2_1());
			}
		)?
	)
;
