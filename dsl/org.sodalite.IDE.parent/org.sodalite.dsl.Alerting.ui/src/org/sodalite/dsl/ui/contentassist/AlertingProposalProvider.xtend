/*
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.ui.contentassist

import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.Keyword
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.eclipse.jface.text.contentassist.ICompletionProposal
import org.eclipse.xtext.impl.KeywordImpl
import org.eclipse.xtext.ParserRule
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.ui.editor.contentassist.ConfigurableCompletionProposal

/**
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#content-assist
 * on how to customize the content assistant.
 */
class AlertingProposalProvider extends AbstractAlertingProposalProvider {
	override void completeKeyword(Keyword keyword, ContentAssistContext contentAssistContext,
		ICompletionProposalAcceptor acceptor) {
		val ICompletionProposal proposal = createCompletionProposal(keyword.getValue(),
			getKeywordDisplayString(keyword), getImage(keyword), contentAssistContext);
		proposal.additionalProposalInfo = getAdditionalProposalInfo(keyword)
		getPriorityHelper().adjustKeywordPriority(proposal, contentAssistContext.getPrefix());
		acceptor.accept(proposal);
	}
	
	def String getAdditionalProposalInfo(Keyword keyword) {
		if (keyword instanceof KeywordImpl) {
			val keywordImpl = keyword as KeywordImpl
			val rule = findParserRule (keywordImpl)
			
			print ("rulename: " + rule.name + "\n")
			print ("keyword: " + keyword.value + "\n\n")

			if (rule.name == "EGroup" && keyword.value == "group:")
				return "The name of a group of monitoring alert rules that are evaluated together.\nMust be unique within a file"
			else if (rule.name == "ERule" && keyword.value == "alert:")
				return "The name of the alert rule."
			else if (rule.name == "ERule" && keyword.value == "expr:")
				return "The PromQL expression to evaluate.\nIn every evaluation cycle this expression is evaluated at the current time,\n and all resultant time series become on pending/firing alerts."
			else if (rule.name == "ERule" && keyword.value == "for:")
				return "Alerts are considered for firing once the expression condition holds for given duration.\n Alerts which have not yet fired before given duration are considered pending."
			else if (rule.name == "ERule" && keyword.value == "labels:")
				return "Labels to add or overwrite for each alert."
			else if (rule.name == "ERule" && keyword.value == "annotations:")
				return "Annotations to add to each alert."
				
				
			//SLURM Exporter
			else if (keyword.value == "slurm_job_state")
				return "slurm_job_state{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_job_walltime_used")
				return "slurm_job_walltime_used{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_job_cpu_n")
				return "slurm_job_cpu_n{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_job_memory_virtual_max")
				return "slurm_job_memory_virtual_max{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_job_memory_physical_max")
				return "slurm_job_memory_physical_max{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_job_queued")
				return "slurm_job_queued{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_job_exit_code")
				return "slurm_job_exit_code{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_job_exit_signal")
				return "slurm_job_exit_signal{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_partition}"
			else if (keyword.value == "slurm_partition_availability")
				return "slurm_partition_availability{monitoring_id, deployment_label, hpc, partition}"
			else if (keyword.value == "slurm_partition_cores_idle")
				return "slurm_partition_cores_idle{monitoring_id, deployment_label, hpc, partition}"
			else if (keyword.value == "slurm_partition_cores_allocated")
				return "slurm_partition_cores_allocated{monitoring_id, deployment_label, hpc, partition}"
			else if (keyword.value == "slurm_partition_cores_total")
				return "slurm_partition_cores_total{monitoring_id, deployment_label, hpc, partition}"
			
			//PBS Exporter
			else if (keyword.value == "pbs_job_state")
				return "pbs_job_state{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_priority")
				return "pbs_job_priority{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_walltime_used")
				return "pbs_job_walltime_used{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_walltime_max")
				return "pbs_job_walltime_max{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_walltime_remaining")
				return "pbs_job_walltime_remaining{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_cpu_time")
				return "pbs_job_cpu_time{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_cpu_n")
				return "pbs_job_cpu_n{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_mem_virtual")
				return "pbs_job_mem_virtual{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_mem_physical")
				return "pbs_job_mem_physical{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_time_queued")
				return "pbs_job_time_queued{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_job_exit_status")
				return "pbs_job_exit_status{monitoring_id, deployment_label, hpc, job_id, job_name, job_user, job_queue}"
			else if (keyword.value == "pbs_queue_enabled")
				return "pbs_queue_enabled{monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_started")
				return "pbs_queue_started{monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_total")
				return "pbs_queue_jobs_total {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_max")
				return "pbs_queue_jobs_max {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_queued")
				return "pbs_queue_jobs_queued {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_running")
				return "pbs_queue_jobs_running {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_held")
				return "pbs_queue_jobs_held {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_waiting")
				return "pbs_queue_jobs_waiting {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_transit")
				return "pbs_queue_jobs_transit {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_exiting")
				return "pbs_queue_jobs_exiting {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
			else if (keyword.value == "pbs_queue_jobs_complete")
				return "pbs_queue_jobs_complete {monitoring_id, deployment_label, hpc, queue_name, queue_type}"
						
			//Node Exporter
			else if (keyword.value == "node_arp_entries")
				return "node_arp_entries{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_boot_time_seconds")
				return "node_boot_time_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_context_switches_total")
				return "node_context_switches_total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_cooling_device_cur_state")
				return "node_cooling_device_cur_state{deployment_label,instance_name,monitoring_id,name,type}"
			else if (keyword.value == "node_cpu_guest_seconds_total")
				return "node_cpu_guest_seconds_total{cpu,deployment_label,instance_name,mode,monitoring_id}"
			else if (keyword.value == "node_cpu_seconds_total")
				return "node_cpu_seconds_total{cpu,deployment_label,instance_name,mode,monitoring_id}"
			else if (keyword.value == "node_disk_io_now")
				return "node_disk_io_now{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_io_time_seconds_total")
				return "node_disk_io_time_seconds_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_io_time_weighted_seconds_total")
				return "node_disk_io_time_weighted_seconds_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_read_bytes_total")
				return "node_disk_read_bytes_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_read_time_seconds_total")
				return "node_disk_read_time_seconds_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_reads_completed_total")
				return "node_disk_reads_completed_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_reads_merged_total")
				return "node_disk_reads_merged_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_write_time_seconds_total")
				return "node_disk_write_time_seconds_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_writes_completed_total")
				return "node_disk_writes_completed_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_writes_merged_total")
				return "node_disk_writes_merged_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_disk_written_bytes_total")
				return "node_disk_written_bytes_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_entropy_available_bits")
				return "node_entropy_available_bits{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_entropy_pool_size_bits")
				return "node_entropy_pool_size_bits{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_exporter_build_info")
				return "node_exporter_build_info{branch,goversion,revision,version}"
			else if (keyword.value == "node_filefd_allocated")
				return "node_filefd_allocated{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_filefd_maximum")
				return "node_filefd_maximum{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_filesystem_avail_bytes")
				return "node_filesystem_avail_bytes{device,fstype,deployment_label,instance_name,monitoring_id,mountpoint}"
			else if (keyword.value == "node_filesystem_device_error")
				return "node_filesystem_device_error{device,fstype,deployment_label,instance_name,monitoring_id,mountpoint}"
			else if (keyword.value == "node_filesystem_files")
				return "node_filesystem_files{device,fstype,deployment_label,instance_name,monitoring_id,mountpoint}"
			else if (keyword.value == "node_filesystem_files_free")
				return "node_filesystem_files_free{device,fstype,deployment_label,instance_name,monitoring_id,mountpoint}"
			else if (keyword.value == "node_filesystem_free_bytes")
				return "node_filesystem_free_bytes{device,fstype,deployment_label,instance_name,monitoring_id,mountpoint}"
			else if (keyword.value == "node_filesystem_readonly")
				return "node_filesystem_readonly{device,fstype,deployment_label,instance_name,monitoring_id,mountpoint}"
			else if (keyword.value == "node_filesystem_size_bytes")
				return "node_filesystem_size_bytes{device,fstype,deployment_label,instance_name,monitoring_id,mountpoint}"
			else if (keyword.value == "node_forks_total")
				return "node_forks_total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_intr_total")
				return "node_intr_total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_load1")
				return "node_load1{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_load15")
				return "node_load15{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_load5")
				return "node_load5{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Active_anon_bytes")
				return "node_memory_Active_anon_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Active_bytes")
				return "node_memory_Active_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Active_file_bytes")
				return "node_memory_Active_file_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_AnonHugePages_bytes")
				return "node_memory_AnonHugePages_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_AnonPages_bytes")
				return "node_memory_AnonPages_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Bounce_bytes")
				return "node_memory_Bounce_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Buffers_bytes")
				return "node_memory_Buffers_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Cached_bytes")
				return "node_memory_Cached_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_CmaFree_bytes")
				return "node_memory_CmaFree_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_CmaTotal_bytes")
				return "node_memory_CmaTotal_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_CommitLimit_bytes")
				return "node_memory_CommitLimit_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Committed_AS_bytes")
				return "node_memory_Committed_AS_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_DirectMap1G_bytes")
				return "node_memory_DirectMap1G_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_DirectMap2M_bytes")
				return "node_memory_DirectMap2M_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_DirectMap4k_bytes")
				return "node_memory_DirectMap4k_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Dirty_bytes")
				return "node_memory_Dirty_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_HardwareCorrupted_bytes")
				return "node_memory_HardwareCorrupted_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_HugePages_Free")
				return "node_memory_HugePages_Free{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_HugePages_Rsvd")
				return "node_memory_HugePages_Rsvd{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_HugePages_Surp")
				return "node_memory_HugePages_Surp{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_HugePages_Total")
				return "node_memory_HugePages_Total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Hugepagesize_bytes")
				return "node_memory_Hugepagesize_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Inactive_anon_bytes")
				return "node_memory_Inactive_anon_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "")
				return "node_memory_Inactive_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Inactive_bytes")
				return "node_memory_Inactive_file_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_KernelStack_bytes")
				return "node_memory_KernelStack_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Mapped_bytes")
				return "node_memory_Mapped_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_MemAvailable_bytes")
				return "node_memory_MemAvailable_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_MemFree_bytes")
				return "node_memory_MemFree_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_MemTotal_bytes")
				return "node_memory_MemTotal_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Mlocked_bytes")
				return "node_memory_Mlocked_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_NFS_Unstable_bytes")
				return "node_memory_NFS_Unstable_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_PageTables_bytes")
				return "node_memory_PageTables_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_SReclaimable_bytes")
				return "node_memory_SReclaimable_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_SUnreclaim_bytes")
				return "node_memory_SUnreclaim_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_ShmemHugePages_bytes")
				return "node_memory_ShmemHugePages_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_ShmemPmdMapped_bytes")
				return "node_memory_ShmemPmdMapped_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Shmem_bytes")
				return "node_memory_Shmem_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Slab_bytes")
				return "node_memory_Slab_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_SwapCached_bytes")
				return "node_memory_SwapCached_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_SwapFree_bytes")
				return "node_memory_SwapFree_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_SwapTotal_bytes")
				return "node_memory_SwapTotal_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Unevictable_bytes")
				return "node_memory_Unevictable_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_VmallocChunk_bytes")
				return "node_memory_VmallocChunk_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_VmallocTotal_bytes")
				return "node_memory_VmallocTotal_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_VmallocUsed_bytes")
				return "node_memory_VmallocUsed_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_WritebackTmp_bytes")
				return "node_memory_WritebackTmp_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_memory_Writeback_bytes")
				return "node_memory_Writeback_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Icmp6_InErrors")
				return "node_netstat_Icmp6_InErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Icmp6_InMsgs")
				return "node_netstat_Icmp6_InMsgs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Icmp6_OutMsgs")
				return "node_netstat_Icmp6_OutMsgs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Icmp_InErrors")
				return "node_netstat_Icmp_InErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Icmp_InMsgs")
				return "node_netstat_Icmp_InMsgs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Icmp_OutMsgs")
				return "node_netstat_Icmp_OutMsgs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Ip6_InOctets")
				return "node_netstat_Ip6_InOctets{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Ip6_OutOctets")
				return "node_netstat_Ip6_OutOctets{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_IpExt_InOctets")
				return "node_netstat_IpExt_InOctets{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_IpExt_OutOctets")
				return "node_netstat_IpExt_OutOctets{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Ip_Forwarding")
				return "node_netstat_Ip_Forwarding{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_TcpExt_ListenDrops")
				return "node_netstat_TcpExt_ListenDrops{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_TcpExt_ListenOverflows")
				return "node_netstat_TcpExt_ListenOverflows{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_TcpExt_SyncookiesFailed")
				return "node_netstat_TcpExt_SyncookiesFailed{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_TcpExt_SyncookiesRecv")
				return "node_netstat_TcpExt_SyncookiesRecv{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_TcpExt_SyncookiesSent")
				return "node_netstat_TcpExt_SyncookiesSent{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_TcpExt_TCPSynRetrans")
				return "node_netstat_TcpExt_TCPSynRetrans{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_ActiveOpens")
				return "node_netstat_Tcp_ActiveOpens{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_CurrEstab")
				return "node_netstat_Tcp_CurrEstab{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_InErrs")
				return "node_netstat_Tcp_InErrs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_InSegs")
				return "node_netstat_Tcp_InSegs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_OutRsts")
				return "node_netstat_Tcp_OutRsts{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_OutSegs")
				return "node_netstat_Tcp_OutSegs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_PassiveOpens")
				return "node_netstat_Tcp_PassiveOpens{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Tcp_RetransSegs")
				return "node_netstat_Tcp_RetransSegs{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp6_InDatagrams")
				return "node_netstat_Udp6_InDatagrams{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp6_InErrors")
				return "node_netstat_Udp6_InErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp6_NoPorts")
				return "node_netstat_Udp6_NoPorts{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp6_OutDatagrams")
				return "node_netstat_Udp6_OutDatagrams{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp6_RcvbufErrors")
				return "node_netstat_Udp6_RcvbufErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp6_SndbufErrors")
				return "node_netstat_Udp6_SndbufErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_UdpLite6_InErrors")
				return "node_netstat_UdpLite6_InErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_UdpLite_InErrors")
				return "node_netstat_UdpLite_InErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp_InDatagrams")
				return "node_netstat_Udp_InDatagrams{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp_InErrors")
				return "node_netstat_Udp_InErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp_NoPorts")
				return "node_netstat_Udp_NoPorts{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp_OutDatagrams")
				return "node_netstat_Udp_OutDatagrams{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp_RcvbufErrors")
				return "node_netstat_Udp_RcvbufErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_netstat_Udp_SndbufErrors")
				return "node_netstat_Udp_SndbufErrors{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_address_assign_type")
				return "node_network_address_assign_type{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_carrier_changes_total")
				return "node_network_carrier_changes_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_carrier_down_changes_total")
				return "node_network_carrier_down_changes_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_carrier_up_changes_total")
				return "node_network_carrier_up_changes_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_device_id")
				return "node_network_device_id{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_dormant")
				return "node_network_dormant{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_flags")
				return "node_network_flags{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_iface_id")
				return "node_network_iface_id{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_iface_link")
				return "node_network_iface_link{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_iface_link_mode")
				return "node_network_iface_link_mode{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_info")
				return "node_network_info{address,broadcast,device,duplex,deployment_label,ifalias,instance_name,monitoring_id,operstate}"
			else if (keyword.value == "node_network_mtu_bytes")
				return "node_network_mtu_bytes{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_name_assign_type")
				return "node_network_name_assign_type{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_net_dev_group")
				return "node_network_net_dev_group{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_protocol_type")
				return "node_network_protocol_type{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_bytes_total")
				return "node_network_receive_bytes_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_compressed_total")
				return "node_network_receive_compressed_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_drop_total")
				return "node_network_receive_drop_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_errs_total")
				return "node_network_receive_errs_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_fifo_total")
				return "node_network_receive_fifo_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_frame_total")
				return "node_network_receive_frame_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_multicast_total")
				return "node_network_receive_multicast_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_receive_packets_total")
				return "node_network_receive_packets_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_speed_bytes")
				return "node_network_speed_bytes{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_bytes_total")
				return "node_network_transmit_bytes_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_carrier_total")
				return "node_network_transmit_carrier_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_colls_total")
				return "node_network_transmit_colls_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_compressed_total")
				return "node_network_transmit_compressed_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_drop_total")
				return "node_network_transmit_drop_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_errs_total")
				return "node_network_transmit_errs_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_fifo_total")
				return "node_network_transmit_fifo_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_packets_total")
				return "node_network_transmit_packets_total{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_transmit_queue_length")
				return "node_network_transmit_queue_length{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_network_up")
				return "node_network_up{device,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_nf_conntrack_entries")
				return "node_nf_conntrack_entries{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_nf_conntrack_entries_limit")
				return "node_nf_conntrack_entries_limit{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_procs_blocked")
				return "node_procs_blocked{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_procs_running")
				return "node_procs_running{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_schedstat_running_seconds_total")
				return "node_schedstat_running_seconds_total{cpu,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_schedstat_timeslices_total")
				return "node_schedstat_timeslices_total{cpu,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_schedstat_waiting_seconds_total")
				return "node_schedstat_waiting_seconds_total{cpu,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_scrape_collector_duration_seconds")
				return "node_scrape_collector_duration_seconds{collector,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_scrape_collector_success")
				return "node_scrape_collector_success{collector,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_FRAG6_inuse")
				return "node_sockstat_FRAG6_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_FRAG6_memory")
				return "node_sockstat_FRAG6_memory{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_FRAG_inuse")
				return "node_sockstat_FRAG_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_FRAG_memory")
				return "node_sockstat_FRAG_memory{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_RAW6_inuse")
				return "node_sockstat_RAW6_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_RAW_inuse")
				return "node_sockstat_RAW_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_TCP6_inuse")
				return "node_sockstat_TCP6_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_TCP_alloc")
				return "node_sockstat_TCP_alloc{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_TCP_inuse")
				return "node_sockstat_TCP_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_TCP_mem")
				return "node_sockstat_TCP_mem{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_TCP_mem_bytes")
				return "node_sockstat_TCP_mem_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_TCP_orphan")
				return "node_sockstat_TCP_orphan{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_TCP_tw")
				return "node_sockstat_TCP_tw{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_UDP6_inuse")
				return "node_sockstat_UDP6_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_UDPLITE6_inuse")
				return "node_sockstat_UDPLITE6_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_UDPLITE_inuse")
				return "node_sockstat_UDPLITE_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_UDP_inuse")
				return "node_sockstat_UDP_inuse{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_UDP_mem")
				return "node_sockstat_UDP_mem{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_UDP_mem_bytes")
				return "node_sockstat_UDP_mem_bytes{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_sockstat_sockets_used")
				return "node_sockstat_sockets_used{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_softnet_dropped_total")
				return "node_softnet_dropped_total{cpu,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_softnet_processed_total")
				return "node_softnet_processed_total{cpu,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_softnet_times_squeezed_total")
				return "node_softnet_times_squeezed_total{cpu,deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_textfile_scrape_error")
				return "node_textfile_scrape_error{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_time_seconds")
				return "node_time_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_estimated_error_seconds")
				return "node_timex_estimated_error_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_frequency_adjustment_ratio")
				return "node_timex_frequency_adjustment_ratio{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_loop_time_constant")
				return "node_timex_loop_time_constant{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_maxerror_seconds")
				return "node_timex_maxerror_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_offset_seconds")
				return "node_timex_offset_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_calibration_total")
				return "node_timex_pps_calibration_total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_error_total")
				return "node_timex_pps_error_total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_frequency_hertz")
				return "node_timex_pps_frequency_hertz{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_jitter_seconds")
				return "node_timex_pps_jitter_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_jitter_total")
				return "node_timex_pps_jitter_total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_shift_seconds")
				return "	node_timex_pps_shift_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_stability_exceeded_total")
				return "	node_timex_pps_stability_exceeded_total{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_pps_stability_hertz")
				return "node_timex_pps_stability_hertz{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_status")
				return "node_timex_status{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_sync_status")
				return "node_timex_sync_status{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_tai_offset_seconds")
				return "node_timex_tai_offset_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_timex_tick_seconds")
				return "node_timex_tick_seconds{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_udp_queues")
				return "node_udp_queues{deployment_label,instance_name,ip,monitoring_id,queue}"
			else if (keyword.value == "node_uname_info")
				return "node_uname_info{domainname,machine,nodename,release,sysname,version}"
			else if (keyword.value == "node_vmstat_oom_kill")
				return "node_vmstat_oom_kill{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_vmstat_pgfault")
				return "node_vmstat_pgfault{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_vmstat_pgmajfault")
				return "node_vmstat_pgmajfault{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_vmstat_pgpgin")
				return "node_vmstat_pgpgin{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_vmstat_pgpgout")
				return "node_vmstat_pgpgout{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_vmstat_pswpin")
				return "node_vmstat_pswpin{deployment_label,instance_name,monitoring_id}"
			else if (keyword.value == "node_vmstat_pswpout")
				return "node_vmstat_pswpout{deployment_label,instance_name,monitoring_id}"
				
			else
				return ""
		}
	}
	
	def setAdditionalProposalInfo(ICompletionProposal proposal, String info) {
		if (proposal instanceof ConfigurableCompletionProposal) {
			val ConfigurableCompletionProposal configurable = proposal as ConfigurableCompletionProposal;
			configurable.setAdditionalProposalInfo(info);
		}
	}
	
	def static ParserRule findParserRule(EObject obj) {
		if (obj === null){
			return null;
		} else if (obj instanceof ParserRule) {
			return obj as ParserRule;
		} else {
			return findParserRule(obj.eContainer());
		}
	}
}
