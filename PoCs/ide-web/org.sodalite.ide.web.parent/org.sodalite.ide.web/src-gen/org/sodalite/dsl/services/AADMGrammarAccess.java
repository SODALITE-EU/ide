/*
 * generated by Xtext 2.25.0
 */
package org.sodalite.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AADMGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class AADM_ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.AADM_Model");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cDescriptionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cDescriptionAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cModuleKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cModuleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cModuleIDTerminalRuleCall_1_1_0 = (RuleCall)cModuleAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cImportKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cImportsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cImportsIDTerminalRuleCall_2_1_0 = (RuleCall)cImportsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cInputsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cInputsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cInputsEInputsParserRuleCall_3_2_0 = (RuleCall)cInputsAssignment_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cNode_templatesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cNodeTemplatesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cNodeTemplatesENodeTemplatesParserRuleCall_4_2_0 = (RuleCall)cNodeTemplatesAssignment_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cPoliciesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cPoliciesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPoliciesEPoliciesParserRuleCall_5_2_0 = (RuleCall)cPoliciesAssignment_5_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Keyword cOutputsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cOutputsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cOutputsEOutputsParserRuleCall_6_2_0 = (RuleCall)cOutputsAssignment_6_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
		
		//AADM_Model:
		//    ('description:' description=STRING)? &
		//    ('module:' module=ID) &
		//    ('import:' imports+=ID)* &
		//    ('inputs:'
		//        BEGIN
		//        inputs = EInputs
		//        END)? &
		//    ('node_templates:'
		//        BEGIN
		//        nodeTemplates=ENodeTemplates
		//        END)? &
		//    ('policies:'
		//        BEGIN
		//        policies=EPolicies
		//        END)? &
		//    ('outputs:'
		//        BEGIN
		//        outputs = EOutputs
		//        END)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('description:' description=STRING)? &
		//('module:' module=ID) &
		//('import:' imports+=ID)* &
		//('inputs:'
		//    BEGIN
		//    inputs = EInputs
		//    END)? &
		//('node_templates:'
		//    BEGIN
		//    nodeTemplates=ENodeTemplates
		//    END)? &
		//('policies:'
		//    BEGIN
		//    policies=EPolicies
		//    END)? &
		//('outputs:'
		//    BEGIN
		//    outputs = EOutputs
		//    END)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('description:' description=STRING)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_1() { return cDescriptionAssignment_0_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_1_0() { return cDescriptionSTRINGTerminalRuleCall_0_1_0; }
		
		//('module:' module=ID)
		public Group getGroup_1() { return cGroup_1; }
		
		//'module:'
		public Keyword getModuleKeyword_1_0() { return cModuleKeyword_1_0; }
		
		//module=ID
		public Assignment getModuleAssignment_1_1() { return cModuleAssignment_1_1; }
		
		//ID
		public RuleCall getModuleIDTerminalRuleCall_1_1_0() { return cModuleIDTerminalRuleCall_1_1_0; }
		
		//('import:' imports+=ID)*
		public Group getGroup_2() { return cGroup_2; }
		
		//'import:'
		public Keyword getImportKeyword_2_0() { return cImportKeyword_2_0; }
		
		//imports+=ID
		public Assignment getImportsAssignment_2_1() { return cImportsAssignment_2_1; }
		
		//ID
		public RuleCall getImportsIDTerminalRuleCall_2_1_0() { return cImportsIDTerminalRuleCall_2_1_0; }
		
		//('inputs:'
		//    BEGIN
		//    inputs = EInputs
		//    END)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'inputs:'
		public Keyword getInputsKeyword_3_0() { return cInputsKeyword_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3_1() { return cBEGINTerminalRuleCall_3_1; }
		
		//inputs = EInputs
		public Assignment getInputsAssignment_3_2() { return cInputsAssignment_3_2; }
		
		//EInputs
		public RuleCall getInputsEInputsParserRuleCall_3_2_0() { return cInputsEInputsParserRuleCall_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3_3() { return cENDTerminalRuleCall_3_3; }
		
		//('node_templates:'
		//    BEGIN
		//    nodeTemplates=ENodeTemplates
		//    END)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'node_templates:'
		public Keyword getNode_templatesKeyword_4_0() { return cNode_templatesKeyword_4_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4_1() { return cBEGINTerminalRuleCall_4_1; }
		
		//nodeTemplates=ENodeTemplates
		public Assignment getNodeTemplatesAssignment_4_2() { return cNodeTemplatesAssignment_4_2; }
		
		//ENodeTemplates
		public RuleCall getNodeTemplatesENodeTemplatesParserRuleCall_4_2_0() { return cNodeTemplatesENodeTemplatesParserRuleCall_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4_3() { return cENDTerminalRuleCall_4_3; }
		
		//('policies:'
		//    BEGIN
		//    policies=EPolicies
		//    END)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'policies:'
		public Keyword getPoliciesKeyword_5_0() { return cPoliciesKeyword_5_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_5_1() { return cBEGINTerminalRuleCall_5_1; }
		
		//policies=EPolicies
		public Assignment getPoliciesAssignment_5_2() { return cPoliciesAssignment_5_2; }
		
		//EPolicies
		public RuleCall getPoliciesEPoliciesParserRuleCall_5_2_0() { return cPoliciesEPoliciesParserRuleCall_5_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5_3() { return cENDTerminalRuleCall_5_3; }
		
		//('outputs:'
		//    BEGIN
		//    outputs = EOutputs
		//    END)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'outputs:'
		public Keyword getOutputsKeyword_6_0() { return cOutputsKeyword_6_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_6_1() { return cBEGINTerminalRuleCall_6_1; }
		
		//outputs = EOutputs
		public Assignment getOutputsAssignment_6_2() { return cOutputsAssignment_6_2; }
		
		//EOutputs
		public RuleCall getOutputsEOutputsParserRuleCall_6_2_0() { return cOutputsEOutputsParserRuleCall_6_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_6_3() { return cENDTerminalRuleCall_6_3; }
	}
	public class EOutputsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EOutputs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEOutputsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cParametersAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParametersEParameterDefinitionParserRuleCall_1_0 = (RuleCall)cParametersAssignment_1.eContents().get(0);
		
		//EOutputs:
		//    {EOutputs} (parameters+=EParameterDefinition)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EOutputs} (parameters+=EParameterDefinition)*
		public Group getGroup() { return cGroup; }
		
		//{EOutputs}
		public Action getEOutputsAction_0() { return cEOutputsAction_0; }
		
		//(parameters+=EParameterDefinition)*
		public Assignment getParametersAssignment_1() { return cParametersAssignment_1; }
		
		//EParameterDefinition
		public RuleCall getParametersEParameterDefinitionParserRuleCall_1_0() { return cParametersEParameterDefinitionParserRuleCall_1_0; }
	}
	public class EPoliciesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPolicies");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEPoliciesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPoliciesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPoliciesEPolicyDefinitionParserRuleCall_1_0 = (RuleCall)cPoliciesAssignment_1.eContents().get(0);
		
		//EPolicies:
		//    {EPolicies} (policies+=EPolicyDefinition)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EPolicies} (policies+=EPolicyDefinition)*
		public Group getGroup() { return cGroup; }
		
		//{EPolicies}
		public Action getEPoliciesAction_0() { return cEPoliciesAction_0; }
		
		//(policies+=EPolicyDefinition)*
		public Assignment getPoliciesAssignment_1() { return cPoliciesAssignment_1; }
		
		//EPolicyDefinition
		public RuleCall getPoliciesEPolicyDefinitionParserRuleCall_1_0() { return cPoliciesEPolicyDefinitionParserRuleCall_1_0; }
	}
	public class EPolicyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPolicyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPolicyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPolicyEPolicyDefinitionBodyParserRuleCall_3_0 = (RuleCall)cPolicyAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EPolicyDefinition:
		//    name = ID ':'
		//    BEGIN
		//        policy=EPolicyDefinitionBody
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID ':'
		//BEGIN
		//    policy=EPolicyDefinitionBody
		//END
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//policy=EPolicyDefinitionBody
		public Assignment getPolicyAssignment_3() { return cPolicyAssignment_3; }
		
		//EPolicyDefinitionBody
		public RuleCall getPolicyEPolicyDefinitionBodyParserRuleCall_3_0() { return cPolicyEPolicyDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EPolicyDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPolicyDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTypeEPREFIX_TYPEParserRuleCall_0_1_0 = (RuleCall)cTypeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cDescriptionAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cPropertiesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cPropertiesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cPropertiesEPropertyAssignmentsParserRuleCall_2_2_0 = (RuleCall)cPropertiesAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cTargetsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTargetsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTargetsETargetParserRuleCall_3_2_0 = (RuleCall)cTargetsAssignment_3_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cTriggersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cTriggersAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTriggersETriggerDefinitionsParserRuleCall_4_2_0 = (RuleCall)cTriggersAssignment_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		
		//EPolicyDefinitionBody:
		//    ('type:' type=EPREFIX_TYPE) &
		//    ('description:' description=STRING)? &
		//    ('properties:'
		//    BEGIN
		//        properties=EPropertyAssignments
		//    END)? &
		//    ('targets:' '[' targets=ETarget ']')? &
		//    ('triggers:'
		//    BEGIN
		//        triggers=ETriggerDefinitions
		//    END)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('type:' type=EPREFIX_TYPE) &
		//('description:' description=STRING)? &
		//('properties:'
		//BEGIN
		//    properties=EPropertyAssignments
		//END)? &
		//('targets:' '[' targets=ETarget ']')? &
		//('triggers:'
		//BEGIN
		//    triggers=ETriggerDefinitions
		//END)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('type:' type=EPREFIX_TYPE)
		public Group getGroup_0() { return cGroup_0; }
		
		//'type:'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//type=EPREFIX_TYPE
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//EPREFIX_TYPE
		public RuleCall getTypeEPREFIX_TYPEParserRuleCall_0_1_0() { return cTypeEPREFIX_TYPEParserRuleCall_0_1_0; }
		
		//('description:' description=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_0() { return cDescriptionKeyword_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1() { return cDescriptionAssignment_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_0; }
		
		//('properties:'
		//BEGIN
		//    properties=EPropertyAssignments
		//END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_2_0() { return cPropertiesKeyword_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_1() { return cBEGINTerminalRuleCall_2_1; }
		
		//properties=EPropertyAssignments
		public Assignment getPropertiesAssignment_2_2() { return cPropertiesAssignment_2_2; }
		
		//EPropertyAssignments
		public RuleCall getPropertiesEPropertyAssignmentsParserRuleCall_2_2_0() { return cPropertiesEPropertyAssignmentsParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
		
		//('targets:' '[' targets=ETarget ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'targets:'
		public Keyword getTargetsKeyword_3_0() { return cTargetsKeyword_3_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_1() { return cLeftSquareBracketKeyword_3_1; }
		
		//targets=ETarget
		public Assignment getTargetsAssignment_3_2() { return cTargetsAssignment_3_2; }
		
		//ETarget
		public RuleCall getTargetsETargetParserRuleCall_3_2_0() { return cTargetsETargetParserRuleCall_3_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_3() { return cRightSquareBracketKeyword_3_3; }
		
		//('triggers:'
		//BEGIN
		//    triggers=ETriggerDefinitions
		//END)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'triggers:'
		public Keyword getTriggersKeyword_4_0() { return cTriggersKeyword_4_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4_1() { return cBEGINTerminalRuleCall_4_1; }
		
		//triggers=ETriggerDefinitions
		public Assignment getTriggersAssignment_4_2() { return cTriggersAssignment_4_2; }
		
		//ETriggerDefinitions
		public RuleCall getTriggersETriggerDefinitionsParserRuleCall_4_2_0() { return cTriggersETriggerDefinitionsParserRuleCall_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4_3() { return cENDTerminalRuleCall_4_3; }
	}
	public class ETriggerDefinitionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ETriggerDefinitions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cETriggerDefinitionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTriggersAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTriggersETriggerDefinitionParserRuleCall_1_0 = (RuleCall)cTriggersAssignment_1.eContents().get(0);
		
		//ETriggerDefinitions:
		//    {ETriggerDefinitions} (triggers+=ETriggerDefinition)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ETriggerDefinitions} (triggers+=ETriggerDefinition)*
		public Group getGroup() { return cGroup; }
		
		//{ETriggerDefinitions}
		public Action getETriggerDefinitionsAction_0() { return cETriggerDefinitionsAction_0; }
		
		//(triggers+=ETriggerDefinition)*
		public Assignment getTriggersAssignment_1() { return cTriggersAssignment_1; }
		
		//ETriggerDefinition
		public RuleCall getTriggersETriggerDefinitionParserRuleCall_1_0() { return cTriggersETriggerDefinitionParserRuleCall_1_0; }
	}
	public class ETriggerDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ETriggerDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQUALIFIED_NAMETerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cTriggerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTriggerETriggerDefinitionBodyParserRuleCall_3_0 = (RuleCall)cTriggerAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ETriggerDefinition:
		//    name=QUALIFIED_NAME ':'
		//    BEGIN
		//    trigger=ETriggerDefinitionBody
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QUALIFIED_NAME ':'
		//BEGIN
		//trigger=ETriggerDefinitionBody
		//END
		public Group getGroup() { return cGroup; }
		
		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMETerminalRuleCall_0_0() { return cNameQUALIFIED_NAMETerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//trigger=ETriggerDefinitionBody
		public Assignment getTriggerAssignment_3() { return cTriggerAssignment_3; }
		
		//ETriggerDefinitionBody
		public RuleCall getTriggerETriggerDefinitionBodyParserRuleCall_3_0() { return cTriggerETriggerDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ETriggerDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ETriggerDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cDescriptionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cDescriptionAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cEventKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEventAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEventSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cEventAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cScheduleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cScheduleAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cScheduleETimeIntervalParserRuleCall_2_2_0 = (RuleCall)cScheduleAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cTarget_filterKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cTarget_filterAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTarget_filterEEvenFilterParserRuleCall_3_2_0 = (RuleCall)cTarget_filterAssignment_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cConditionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cConditionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cConditionEExtendedTriggerConditionParserRuleCall_4_2_0 = (RuleCall)cConditionAssignment_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cActionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cActionAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cActionEActivityDefinitionsParserRuleCall_5_2_0 = (RuleCall)cActionAssignment_5_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		
		//ETriggerDefinitionBody:
		//    ('description:' description=STRING)? &
		//    ('event:' event=STRING) &
		//    ('schedule:'
		//        BEGIN
		//        schedule=ETimeInterval
		//        END
		//    )? &
		//    ('target_filter:'
		//        BEGIN
		//        target_filter=EEvenFilter
		//        END
		//    )? &
		//    ('condition:'
		//        BEGIN
		//        condition=EExtendedTriggerCondition
		//        END
		//    )? &
		//    ('action:'
		//        BEGIN
		//        action=EActivityDefinitions
		//        END
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('description:' description=STRING)? &
		//('event:' event=STRING) &
		//('schedule:'
		//    BEGIN
		//    schedule=ETimeInterval
		//    END
		//)? &
		//('target_filter:'
		//    BEGIN
		//    target_filter=EEvenFilter
		//    END
		//)? &
		//('condition:'
		//    BEGIN
		//    condition=EExtendedTriggerCondition
		//    END
		//)? &
		//('action:'
		//    BEGIN
		//    action=EActivityDefinitions
		//    END
		//)
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('description:' description=STRING)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'description:'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_1() { return cDescriptionAssignment_0_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_1_0() { return cDescriptionSTRINGTerminalRuleCall_0_1_0; }
		
		//('event:' event=STRING)
		public Group getGroup_1() { return cGroup_1; }
		
		//'event:'
		public Keyword getEventKeyword_1_0() { return cEventKeyword_1_0; }
		
		//event=STRING
		public Assignment getEventAssignment_1_1() { return cEventAssignment_1_1; }
		
		//STRING
		public RuleCall getEventSTRINGTerminalRuleCall_1_1_0() { return cEventSTRINGTerminalRuleCall_1_1_0; }
		
		//('schedule:'
		//    BEGIN
		//    schedule=ETimeInterval
		//    END
		//)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'schedule:'
		public Keyword getScheduleKeyword_2_0() { return cScheduleKeyword_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_1() { return cBEGINTerminalRuleCall_2_1; }
		
		//schedule=ETimeInterval
		public Assignment getScheduleAssignment_2_2() { return cScheduleAssignment_2_2; }
		
		//ETimeInterval
		public RuleCall getScheduleETimeIntervalParserRuleCall_2_2_0() { return cScheduleETimeIntervalParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
		
		//('target_filter:'
		//    BEGIN
		//    target_filter=EEvenFilter
		//    END
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'target_filter:'
		public Keyword getTarget_filterKeyword_3_0() { return cTarget_filterKeyword_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3_1() { return cBEGINTerminalRuleCall_3_1; }
		
		//target_filter=EEvenFilter
		public Assignment getTarget_filterAssignment_3_2() { return cTarget_filterAssignment_3_2; }
		
		//EEvenFilter
		public RuleCall getTarget_filterEEvenFilterParserRuleCall_3_2_0() { return cTarget_filterEEvenFilterParserRuleCall_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3_3() { return cENDTerminalRuleCall_3_3; }
		
		//('condition:'
		//    BEGIN
		//    condition=EExtendedTriggerCondition
		//    END
		//)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'condition:'
		public Keyword getConditionKeyword_4_0() { return cConditionKeyword_4_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4_1() { return cBEGINTerminalRuleCall_4_1; }
		
		//condition=EExtendedTriggerCondition
		public Assignment getConditionAssignment_4_2() { return cConditionAssignment_4_2; }
		
		//EExtendedTriggerCondition
		public RuleCall getConditionEExtendedTriggerConditionParserRuleCall_4_2_0() { return cConditionEExtendedTriggerConditionParserRuleCall_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4_3() { return cENDTerminalRuleCall_4_3; }
		
		//('action:'
		//    BEGIN
		//    action=EActivityDefinitions
		//    END
		//)
		public Group getGroup_5() { return cGroup_5; }
		
		//'action:'
		public Keyword getActionKeyword_5_0() { return cActionKeyword_5_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_5_1() { return cBEGINTerminalRuleCall_5_1; }
		
		//action=EActivityDefinitions
		public Assignment getActionAssignment_5_2() { return cActionAssignment_5_2; }
		
		//EActivityDefinitions
		public RuleCall getActionEActivityDefinitionsParserRuleCall_5_2_0() { return cActionEActivityDefinitionsParserRuleCall_5_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5_3() { return cENDTerminalRuleCall_5_3; }
	}
	public class EActivityDefinitionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EActivityDefinitions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEActivityDefinitionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cListAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListEActivityDefinitionParserRuleCall_1_0 = (RuleCall)cListAssignment_1.eContents().get(0);
		
		//EActivityDefinitions:
		//    {EActivityDefinitions} (list += EActivityDefinition)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{EActivityDefinitions} (list += EActivityDefinition)*
		public Group getGroup() { return cGroup; }
		
		//{EActivityDefinitions}
		public Action getEActivityDefinitionsAction_0() { return cEActivityDefinitionsAction_0; }
		
		//(list += EActivityDefinition)*
		public Assignment getListAssignment_1() { return cListAssignment_1; }
		
		//EActivityDefinition
		public RuleCall getListEActivityDefinitionParserRuleCall_1_0() { return cListEActivityDefinitionParserRuleCall_1_0; }
	}
	public class EActivityDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EActivityDefinition");
		private final RuleCall cECallOperationActivityDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EActivityDefinition:
		//    ECallOperationActivityDefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ECallOperationActivityDefinition
		public RuleCall getECallOperationActivityDefinitionParserRuleCall() { return cECallOperationActivityDefinitionParserRuleCall; }
	}
	public class ECallOperationActivityDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ECallOperationActivityDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCall_operationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperationECallOperationActivityDefinitionBodyParserRuleCall_2_0 = (RuleCall)cOperationAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ECallOperationActivityDefinition:
		//    'call_operation:'
		//    BEGIN
		//    operation=ECallOperationActivityDefinitionBody
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'call_operation:'
		//BEGIN
		//operation=ECallOperationActivityDefinitionBody
		//END
		public Group getGroup() { return cGroup; }
		
		//'call_operation:'
		public Keyword getCall_operationKeyword_0() { return cCall_operationKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//operation=ECallOperationActivityDefinitionBody
		public Assignment getOperationAssignment_2() { return cOperationAssignment_2; }
		
		//ECallOperationActivityDefinitionBody
		public RuleCall getOperationECallOperationActivityDefinitionBodyParserRuleCall_2_0() { return cOperationECallOperationActivityDefinitionBodyParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class ECallOperationActivityDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ECallOperationActivityDefinitionBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cOperationKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOperationAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOperationEPREFIX_TYPEParserRuleCall_0_1_0 = (RuleCall)cOperationAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cInputsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cInputsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cInputsEPropertyAssignmentsParserRuleCall_1_2_0 = (RuleCall)cInputsAssignment_1_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//ECallOperationActivityDefinitionBody:
		//    ('operation:' operation=EPREFIX_TYPE) &
		//    ('inputs:'
		//        BEGIN
		//        inputs=EPropertyAssignments
		//        END
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('operation:' operation=EPREFIX_TYPE) &
		//('inputs:'
		//    BEGIN
		//    inputs=EPropertyAssignments
		//    END
		//)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('operation:' operation=EPREFIX_TYPE)
		public Group getGroup_0() { return cGroup_0; }
		
		//'operation:'
		public Keyword getOperationKeyword_0_0() { return cOperationKeyword_0_0; }
		
		//operation=EPREFIX_TYPE
		public Assignment getOperationAssignment_0_1() { return cOperationAssignment_0_1; }
		
		//EPREFIX_TYPE
		public RuleCall getOperationEPREFIX_TYPEParserRuleCall_0_1_0() { return cOperationEPREFIX_TYPEParserRuleCall_0_1_0; }
		
		//('inputs:'
		//    BEGIN
		//    inputs=EPropertyAssignments
		//    END
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'inputs:'
		public Keyword getInputsKeyword_1_0() { return cInputsKeyword_1_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_1() { return cBEGINTerminalRuleCall_1_1; }
		
		//inputs=EPropertyAssignments
		public Assignment getInputsAssignment_1_2() { return cInputsAssignment_1_2; }
		
		//EPropertyAssignments
		public RuleCall getInputsEPropertyAssignmentsParserRuleCall_1_2_0() { return cInputsEPropertyAssignmentsParserRuleCall_1_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_3() { return cENDTerminalRuleCall_1_3; }
	}
	public class ETimeIntervalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ETimeInterval");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cStart_timeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cStart_timeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cStart_timeSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cStart_timeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEnd_timeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEnd_timeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEnd_timeSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cEnd_timeAssignment_1_1.eContents().get(0);
		
		//ETimeInterval:
		//    ('start_time:' start_time=STRING)
		//    ('end_time:' end_time=STRING)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('start_time:' start_time=STRING)
		//('end_time:' end_time=STRING)
		public Group getGroup() { return cGroup; }
		
		//('start_time:' start_time=STRING)
		public Group getGroup_0() { return cGroup_0; }
		
		//'start_time:'
		public Keyword getStart_timeKeyword_0_0() { return cStart_timeKeyword_0_0; }
		
		//start_time=STRING
		public Assignment getStart_timeAssignment_0_1() { return cStart_timeAssignment_0_1; }
		
		//STRING
		public RuleCall getStart_timeSTRINGTerminalRuleCall_0_1_0() { return cStart_timeSTRINGTerminalRuleCall_0_1_0; }
		
		//('end_time:' end_time=STRING)
		public Group getGroup_1() { return cGroup_1; }
		
		//'end_time:'
		public Keyword getEnd_timeKeyword_1_0() { return cEnd_timeKeyword_1_0; }
		
		//end_time=STRING
		public Assignment getEnd_timeAssignment_1_1() { return cEnd_timeAssignment_1_1; }
		
		//STRING
		public RuleCall getEnd_timeSTRINGTerminalRuleCall_1_1_0() { return cEnd_timeSTRINGTerminalRuleCall_1_1_0; }
	}
	public class EEvenFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EEvenFilter");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cNodeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNodeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNodeEPREFIX_REFParserRuleCall_0_1_0 = (RuleCall)cNodeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cRequirementKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRequirementAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRequirementEPREFIX_REFParserRuleCall_1_1_0 = (RuleCall)cRequirementAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cCapabilityKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCapabilityAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCapabilityEPREFIX_REFParserRuleCall_2_1_0 = (RuleCall)cCapabilityAssignment_2_1.eContents().get(0);
		
		//EEvenFilter:
		//    ('node:' node=EPREFIX_REF) &
		//    ('requirement:' requirement=EPREFIX_REF)? &
		//    ('capability:' capability=EPREFIX_REF)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('node:' node=EPREFIX_REF) &
		//('requirement:' requirement=EPREFIX_REF)? &
		//('capability:' capability=EPREFIX_REF)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('node:' node=EPREFIX_REF)
		public Group getGroup_0() { return cGroup_0; }
		
		//'node:'
		public Keyword getNodeKeyword_0_0() { return cNodeKeyword_0_0; }
		
		//node=EPREFIX_REF
		public Assignment getNodeAssignment_0_1() { return cNodeAssignment_0_1; }
		
		//EPREFIX_REF
		public RuleCall getNodeEPREFIX_REFParserRuleCall_0_1_0() { return cNodeEPREFIX_REFParserRuleCall_0_1_0; }
		
		//('requirement:' requirement=EPREFIX_REF)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'requirement:'
		public Keyword getRequirementKeyword_1_0() { return cRequirementKeyword_1_0; }
		
		//requirement=EPREFIX_REF
		public Assignment getRequirementAssignment_1_1() { return cRequirementAssignment_1_1; }
		
		//EPREFIX_REF
		public RuleCall getRequirementEPREFIX_REFParserRuleCall_1_1_0() { return cRequirementEPREFIX_REFParserRuleCall_1_1_0; }
		
		//('capability:' capability=EPREFIX_REF)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'capability:'
		public Keyword getCapabilityKeyword_2_0() { return cCapabilityKeyword_2_0; }
		
		//capability=EPREFIX_REF
		public Assignment getCapabilityAssignment_2_1() { return cCapabilityAssignment_2_1; }
		
		//EPREFIX_REF
		public RuleCall getCapabilityEPREFIX_REFParserRuleCall_2_1_0() { return cCapabilityEPREFIX_REFParserRuleCall_2_1_0; }
	}
	public class EExtendedTriggerConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EExtendedTriggerCondition");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cConstraintKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cConstraintAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cConstraintEConditionClauseDefinitionParserRuleCall_0_2_0 = (RuleCall)cConstraintAssignment_0_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cPeriodKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPeriodAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPeriodSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cPeriodAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cEvaluationsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cEvaluationsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cEvaluationsESIGNEDINTParserRuleCall_2_1_0 = (RuleCall)cEvaluationsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cMethodKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMethodAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMethodSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cMethodAssignment_3_1.eContents().get(0);
		
		//EExtendedTriggerCondition:
		//    ('constraint:'
		//        BEGIN
		//        constraint=EConditionClauseDefinition
		//        END
		//    )? &
		//    ('period:' period=STRING)? &
		//    ('evaluations:' evaluations=ESIGNEDINT)? &
		//    ('method:' method=STRING)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('constraint:'
		//    BEGIN
		//    constraint=EConditionClauseDefinition
		//    END
		//)? &
		//('period:' period=STRING)? &
		//('evaluations:' evaluations=ESIGNEDINT)? &
		//('method:' method=STRING)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('constraint:'
		//    BEGIN
		//    constraint=EConditionClauseDefinition
		//    END
		//)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'constraint:'
		public Keyword getConstraintKeyword_0_0() { return cConstraintKeyword_0_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0_1() { return cBEGINTerminalRuleCall_0_1; }
		
		//constraint=EConditionClauseDefinition
		public Assignment getConstraintAssignment_0_2() { return cConstraintAssignment_0_2; }
		
		//EConditionClauseDefinition
		public RuleCall getConstraintEConditionClauseDefinitionParserRuleCall_0_2_0() { return cConstraintEConditionClauseDefinitionParserRuleCall_0_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_0_3() { return cENDTerminalRuleCall_0_3; }
		
		//('period:' period=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'period:'
		public Keyword getPeriodKeyword_1_0() { return cPeriodKeyword_1_0; }
		
		//period=STRING
		public Assignment getPeriodAssignment_1_1() { return cPeriodAssignment_1_1; }
		
		//STRING
		public RuleCall getPeriodSTRINGTerminalRuleCall_1_1_0() { return cPeriodSTRINGTerminalRuleCall_1_1_0; }
		
		//('evaluations:' evaluations=ESIGNEDINT)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'evaluations:'
		public Keyword getEvaluationsKeyword_2_0() { return cEvaluationsKeyword_2_0; }
		
		//evaluations=ESIGNEDINT
		public Assignment getEvaluationsAssignment_2_1() { return cEvaluationsAssignment_2_1; }
		
		//ESIGNEDINT
		public RuleCall getEvaluationsESIGNEDINTParserRuleCall_2_1_0() { return cEvaluationsESIGNEDINTParserRuleCall_2_1_0; }
		
		//('method:' method=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'method:'
		public Keyword getMethodKeyword_3_0() { return cMethodKeyword_3_0; }
		
		//method=STRING
		public Assignment getMethodAssignment_3_1() { return cMethodAssignment_3_1; }
		
		//STRING
		public RuleCall getMethodSTRINGTerminalRuleCall_3_1_0() { return cMethodSTRINGTerminalRuleCall_3_1_0; }
	}
	public class EConditionClauseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EConditionClauseDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEConditionClauseDefinitionANDParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEConditionClauseDefinitionORParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEConditionClauseDefinitionNOTParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEConditionClauseDefinitionAssertParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//EConditionClauseDefinition:
		//    EConditionClauseDefinitionAND | EConditionClauseDefinitionOR | EConditionClauseDefinitionNOT | EConditionClauseDefinitionAssert
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EConditionClauseDefinitionAND | EConditionClauseDefinitionOR | EConditionClauseDefinitionNOT | EConditionClauseDefinitionAssert
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EConditionClauseDefinitionAND
		public RuleCall getEConditionClauseDefinitionANDParserRuleCall_0() { return cEConditionClauseDefinitionANDParserRuleCall_0; }
		
		//EConditionClauseDefinitionOR
		public RuleCall getEConditionClauseDefinitionORParserRuleCall_1() { return cEConditionClauseDefinitionORParserRuleCall_1; }
		
		//EConditionClauseDefinitionNOT
		public RuleCall getEConditionClauseDefinitionNOTParserRuleCall_2() { return cEConditionClauseDefinitionNOTParserRuleCall_2; }
		
		//EConditionClauseDefinitionAssert
		public RuleCall getEConditionClauseDefinitionAssertParserRuleCall_3() { return cEConditionClauseDefinitionAssertParserRuleCall_3; }
	}
	public class EConditionClauseDefinitionANDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EConditionClauseDefinitionAND");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cAndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAndEConditionClauseDefinitionParserRuleCall_2_0 = (RuleCall)cAndAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//EConditionClauseDefinitionAND:
		//    'and:'
		//    BEGIN
		//    and = EConditionClauseDefinition
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'and:'
		//BEGIN
		//and = EConditionClauseDefinition
		//END
		public Group getGroup() { return cGroup; }
		
		//'and:'
		public Keyword getAndKeyword_0() { return cAndKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//and = EConditionClauseDefinition
		public Assignment getAndAssignment_2() { return cAndAssignment_2; }
		
		//EConditionClauseDefinition
		public RuleCall getAndEConditionClauseDefinitionParserRuleCall_2_0() { return cAndEConditionClauseDefinitionParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class EConditionClauseDefinitionORElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EConditionClauseDefinitionOR");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cOrAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOrEConditionClauseDefinitionParserRuleCall_2_0 = (RuleCall)cOrAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//EConditionClauseDefinitionOR:
		//    'or:'
		//    BEGIN
		//    or = EConditionClauseDefinition
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'or:'
		//BEGIN
		//or = EConditionClauseDefinition
		//END
		public Group getGroup() { return cGroup; }
		
		//'or:'
		public Keyword getOrKeyword_0() { return cOrKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//or = EConditionClauseDefinition
		public Assignment getOrAssignment_2() { return cOrAssignment_2; }
		
		//EConditionClauseDefinition
		public RuleCall getOrEConditionClauseDefinitionParserRuleCall_2_0() { return cOrEConditionClauseDefinitionParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class EConditionClauseDefinitionNOTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EConditionClauseDefinitionNOT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNotAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNotEConditionClauseDefinitionParserRuleCall_2_0 = (RuleCall)cNotAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//EConditionClauseDefinitionNOT:
		//    'not:'
		//    BEGIN
		//    not = EConditionClauseDefinition
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'not:'
		//BEGIN
		//not = EConditionClauseDefinition
		//END
		public Group getGroup() { return cGroup; }
		
		//'not:'
		public Keyword getNotKeyword_0() { return cNotKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//not = EConditionClauseDefinition
		public Assignment getNotAssignment_2() { return cNotAssignment_2; }
		
		//EConditionClauseDefinition
		public RuleCall getNotEConditionClauseDefinitionParserRuleCall_2_0() { return cNotEConditionClauseDefinitionParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class EConditionClauseDefinitionAssertElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EConditionClauseDefinitionAssert");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEConditionClauseDefinitionAssertAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAssertionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAssertionsEAssertionDefinitionParserRuleCall_1_0 = (RuleCall)cAssertionsAssignment_1.eContents().get(0);
		
		//EConditionClauseDefinitionAssert:
		//    {EConditionClauseDefinitionAssert} (assertions += EAssertionDefinition)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{EConditionClauseDefinitionAssert} (assertions += EAssertionDefinition)*
		public Group getGroup() { return cGroup; }
		
		//{EConditionClauseDefinitionAssert}
		public Action getEConditionClauseDefinitionAssertAction_0() { return cEConditionClauseDefinitionAssertAction_0; }
		
		//(assertions += EAssertionDefinition)*
		public Assignment getAssertionsAssignment_1() { return cAssertionsAssignment_1; }
		
		//EAssertionDefinition
		public RuleCall getAssertionsEAssertionDefinitionParserRuleCall_1_0() { return cAssertionsEAssertionDefinitionParserRuleCall_1_0; }
	}
	public class EAssertionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EAssertionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttribute_nameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAttribute_nameIDTerminalRuleCall_0_0 = (RuleCall)cAttribute_nameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConstraintsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConstraintsEConstraintListParserRuleCall_3_0 = (RuleCall)cConstraintsAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EAssertionDefinition:
		//    attribute_name = ID ':' '[' constraints=EConstraintList ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute_name = ID ':' '[' constraints=EConstraintList ']'
		public Group getGroup() { return cGroup; }
		
		//attribute_name = ID
		public Assignment getAttribute_nameAssignment_0() { return cAttribute_nameAssignment_0; }
		
		//ID
		public RuleCall getAttribute_nameIDTerminalRuleCall_0_0() { return cAttribute_nameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//constraints=EConstraintList
		public Assignment getConstraintsAssignment_3() { return cConstraintsAssignment_3; }
		
		//EConstraintList
		public RuleCall getConstraintsEConstraintListParserRuleCall_3_0() { return cConstraintsEConstraintListParserRuleCall_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class EConstraintListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EConstraintList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cListAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cListEConstraintParserRuleCall_0_0 = (RuleCall)cListAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cListAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cListEConstraintParserRuleCall_1_1_0 = (RuleCall)cListAssignment_1_1.eContents().get(0);
		
		//EConstraintList:
		//    list+=EConstraint (',' list+=EConstraint)*;
		@Override public ParserRule getRule() { return rule; }
		
		//list+=EConstraint (',' list+=EConstraint)*
		public Group getGroup() { return cGroup; }
		
		//list+=EConstraint
		public Assignment getListAssignment_0() { return cListAssignment_0; }
		
		//EConstraint
		public RuleCall getListEConstraintParserRuleCall_0_0() { return cListEConstraintParserRuleCall_0_0; }
		
		//(',' list+=EConstraint)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//list+=EConstraint
		public Assignment getListAssignment_1_1() { return cListAssignment_1_1; }
		
		//EConstraint
		public RuleCall getListEConstraintParserRuleCall_1_1_0() { return cListEConstraintParserRuleCall_1_1_0; }
	}
	public class EConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EConstraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEEqualParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEGreaterThanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEGreaterOrEqualParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cELessThanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cELessOrEqualParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEInRangeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEValid_ValuesParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cELengthParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cEMinLengthParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cEMaxLengthParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//EConstraint:
		//    EEqual | EGreaterThan | EGreaterOrEqual | ELessThan | ELessOrEqual | EInRange | EValid_Values | ELength | EMinLength |
		//    EMaxLength;
		@Override public ParserRule getRule() { return rule; }
		
		//EEqual | EGreaterThan | EGreaterOrEqual | ELessThan | ELessOrEqual | EInRange | EValid_Values | ELength | EMinLength |
		//EMaxLength
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EEqual
		public RuleCall getEEqualParserRuleCall_0() { return cEEqualParserRuleCall_0; }
		
		//EGreaterThan
		public RuleCall getEGreaterThanParserRuleCall_1() { return cEGreaterThanParserRuleCall_1; }
		
		//EGreaterOrEqual
		public RuleCall getEGreaterOrEqualParserRuleCall_2() { return cEGreaterOrEqualParserRuleCall_2; }
		
		//ELessThan
		public RuleCall getELessThanParserRuleCall_3() { return cELessThanParserRuleCall_3; }
		
		//ELessOrEqual
		public RuleCall getELessOrEqualParserRuleCall_4() { return cELessOrEqualParserRuleCall_4; }
		
		//EInRange
		public RuleCall getEInRangeParserRuleCall_5() { return cEInRangeParserRuleCall_5; }
		
		//EValid_Values
		public RuleCall getEValid_ValuesParserRuleCall_6() { return cEValid_ValuesParserRuleCall_6; }
		
		//ELength
		public RuleCall getELengthParserRuleCall_7() { return cELengthParserRuleCall_7; }
		
		//EMinLength
		public RuleCall getEMinLengthParserRuleCall_8() { return cEMinLengthParserRuleCall_8; }
		
		//EMaxLength
		public RuleCall getEMaxLengthParserRuleCall_9() { return cEMaxLengthParserRuleCall_9; }
	}
	public class EMaxLengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EMaxLength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMax_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EMaxLength:
		//    'max_length:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'max_length:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'max_length:'
		public Keyword getMax_lengthKeyword_0() { return cMax_lengthKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EMinLengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EMinLength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMin_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EMinLength:
		//    'min_length:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'min_length:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'min_length:'
		public Keyword getMin_lengthKeyword_0() { return cMin_lengthKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class ELengthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ELength");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//ELength:
		//    'length:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'length:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'length:'
		public Keyword getLengthKeyword_0() { return cLengthKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EValid_ValuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EValid_Values");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValid_valuesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValELISTParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EValid_Values:
		//    'valid_values:' val=ELIST;
		@Override public ParserRule getRule() { return rule; }
		
		//'valid_values:' val=ELIST
		public Group getGroup() { return cGroup; }
		
		//'valid_values:'
		public Keyword getValid_valuesKeyword_0() { return cValid_valuesKeyword_0; }
		
		//val=ELIST
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//ELIST
		public RuleCall getValELISTParserRuleCall_1_0() { return cValELISTParserRuleCall_1_0; }
	}
	public class EInRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EInRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIn_rangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStartEAlphaNumericValueParserRuleCall_2_0 = (RuleCall)cStartAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEndEAlphaNumericValueParserRuleCall_4_0 = (RuleCall)cEndAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EInRange:
		//    'in_range:' '[' start=EAlphaNumericValue "," end=EAlphaNumericValue ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'in_range:' '[' start=EAlphaNumericValue "," end=EAlphaNumericValue ']'
		public Group getGroup() { return cGroup; }
		
		//'in_range:'
		public Keyword getIn_rangeKeyword_0() { return cIn_rangeKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//start=EAlphaNumericValue
		public Assignment getStartAssignment_2() { return cStartAssignment_2; }
		
		//EAlphaNumericValue
		public RuleCall getStartEAlphaNumericValueParserRuleCall_2_0() { return cStartEAlphaNumericValueParserRuleCall_2_0; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//end=EAlphaNumericValue
		public Assignment getEndAssignment_4() { return cEndAssignment_4; }
		
		//EAlphaNumericValue
		public RuleCall getEndEAlphaNumericValueParserRuleCall_4_0() { return cEndEAlphaNumericValueParserRuleCall_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ELessOrEqualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ELessOrEqual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLess_or_equalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//ELessOrEqual:
		//    'less_or_equal:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'less_or_equal:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'less_or_equal:'
		public Keyword getLess_or_equalKeyword_0() { return cLess_or_equalKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class ELessThanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ELessThan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLess_thanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//ELessThan:
		//    'less_than:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'less_than:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'less_than:'
		public Keyword getLess_thanKeyword_0() { return cLess_thanKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EGreaterOrEqualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EGreaterOrEqual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGreater_or_equalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EGreaterOrEqual:
		//    'greater_or_equal:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'greater_or_equal:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'greater_or_equal:'
		public Keyword getGreater_or_equalKeyword_0() { return cGreater_or_equalKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EGreaterThanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EGreaterThan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGreater_thanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEAlphaNumericValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EGreaterThan:
		//    'greater_than:' val=EAlphaNumericValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'greater_than:' val=EAlphaNumericValue
		public Group getGroup() { return cGroup; }
		
		//'greater_than:'
		public Keyword getGreater_thanKeyword_0() { return cGreater_thanKeyword_0; }
		
		//val=EAlphaNumericValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EAlphaNumericValue
		public RuleCall getValEAlphaNumericValueParserRuleCall_1_0() { return cValEAlphaNumericValueParserRuleCall_1_0; }
	}
	public class EEqualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EEqual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValESingleValueParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		
		//EEqual:
		//    'equal:' val=ESingleValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'equal:' val=ESingleValue
		public Group getGroup() { return cGroup; }
		
		//'equal:'
		public Keyword getEqualKeyword_0() { return cEqualKeyword_0; }
		
		//val=ESingleValue
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//ESingleValue
		public RuleCall getValESingleValueParserRuleCall_1_0() { return cValESingleValueParserRuleCall_1_0; }
	}
	public class ETargetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ETarget");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTargetAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTargetEPREFIX_IDParserRuleCall_0_0 = (RuleCall)cTargetAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTargetAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTargetEPREFIX_IDParserRuleCall_1_1_0 = (RuleCall)cTargetAssignment_1_1.eContents().get(0);
		
		//ETarget:
		//    target+=EPREFIX_ID (',' target+=EPREFIX_ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//target+=EPREFIX_ID (',' target+=EPREFIX_ID)*
		public Group getGroup() { return cGroup; }
		
		//target+=EPREFIX_ID
		public Assignment getTargetAssignment_0() { return cTargetAssignment_0; }
		
		//EPREFIX_ID
		public RuleCall getTargetEPREFIX_IDParserRuleCall_0_0() { return cTargetEPREFIX_IDParserRuleCall_0_0; }
		
		//(',' target+=EPREFIX_ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//target+=EPREFIX_ID
		public Assignment getTargetAssignment_1_1() { return cTargetAssignment_1_1; }
		
		//EPREFIX_ID
		public RuleCall getTargetEPREFIX_IDParserRuleCall_1_1_0() { return cTargetEPREFIX_IDParserRuleCall_1_1_0; }
	}
	public class ENodeTemplatesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ENodeTemplates");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cENodeTemplatesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNodeTemplatesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodeTemplatesENodeTemplateParserRuleCall_1_0 = (RuleCall)cNodeTemplatesAssignment_1.eContents().get(0);
		
		//ENodeTemplates:
		//    {ENodeTemplates} (nodeTemplates+=ENodeTemplate)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ENodeTemplates} (nodeTemplates+=ENodeTemplate)*
		public Group getGroup() { return cGroup; }
		
		//{ENodeTemplates}
		public Action getENodeTemplatesAction_0() { return cENodeTemplatesAction_0; }
		
		//(nodeTemplates+=ENodeTemplate)*
		public Assignment getNodeTemplatesAssignment_1() { return cNodeTemplatesAssignment_1; }
		
		//ENodeTemplate
		public RuleCall getNodeTemplatesENodeTemplateParserRuleCall_1_0() { return cNodeTemplatesENodeTemplateParserRuleCall_1_0; }
	}
	public class ENodeTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ENodeTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodeENodeTemplateBodyParserRuleCall_3_0 = (RuleCall)cNodeAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ENodeTemplate:
		//    name = ID ':'
		//    BEGIN
		//        node=ENodeTemplateBody
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID ':'
		//BEGIN
		//    node=ENodeTemplateBody
		//END
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//node=ENodeTemplateBody
		public Assignment getNodeAssignment_3() { return cNodeAssignment_3; }
		
		//ENodeTemplateBody
		public RuleCall getNodeENodeTemplateBodyParserRuleCall_3_0() { return cNodeENodeTemplateBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ENodeTemplateBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ENodeTemplateBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTypeEPREFIX_TYPEParserRuleCall_0_1_0 = (RuleCall)cTypeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cDescriptionAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cPropertiesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cPropertiesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cPropertiesEPropertyAssignmentsParserRuleCall_2_2_0 = (RuleCall)cPropertiesAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cAttributesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cAttributesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAttributesEAttributeAssignmentsParserRuleCall_3_2_0 = (RuleCall)cAttributesAssignment_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cRequirementsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cRequirementsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRequirementsERequirementAssignmentsParserRuleCall_4_2_0 = (RuleCall)cRequirementsAssignment_4_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cCapabilitiesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Assignment cCapabilitiesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cCapabilitiesECapabilityAssignmentsParserRuleCall_5_2_0 = (RuleCall)cCapabilitiesAssignment_5_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
		
		//ENodeTemplateBody:
		//    ('type:' type=EPREFIX_TYPE) &
		//    ('description:' description=STRING)? &
		//    ('properties:'
		//    BEGIN
		//        properties=EPropertyAssignments
		//    END)? &
		//    ('attributes:'
		//    BEGIN
		//        attributes=EAttributeAssignments
		//    END)? &
		//    ('requirements:'
		//    BEGIN
		//        requirements=ERequirementAssignments
		//    END)? &
		//    ('capabilities:'
		//    BEGIN
		//        capabilities=ECapabilityAssignments
		//    END)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('type:' type=EPREFIX_TYPE) &
		//('description:' description=STRING)? &
		//('properties:'
		//BEGIN
		//    properties=EPropertyAssignments
		//END)? &
		//('attributes:'
		//BEGIN
		//    attributes=EAttributeAssignments
		//END)? &
		//('requirements:'
		//BEGIN
		//    requirements=ERequirementAssignments
		//END)? &
		//('capabilities:'
		//BEGIN
		//    capabilities=ECapabilityAssignments
		//END)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('type:' type=EPREFIX_TYPE)
		public Group getGroup_0() { return cGroup_0; }
		
		//'type:'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//type=EPREFIX_TYPE
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//EPREFIX_TYPE
		public RuleCall getTypeEPREFIX_TYPEParserRuleCall_0_1_0() { return cTypeEPREFIX_TYPEParserRuleCall_0_1_0; }
		
		//('description:' description=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_0() { return cDescriptionKeyword_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1() { return cDescriptionAssignment_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_0; }
		
		//('properties:'
		//BEGIN
		//    properties=EPropertyAssignments
		//END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_2_0() { return cPropertiesKeyword_2_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_1() { return cBEGINTerminalRuleCall_2_1; }
		
		//properties=EPropertyAssignments
		public Assignment getPropertiesAssignment_2_2() { return cPropertiesAssignment_2_2; }
		
		//EPropertyAssignments
		public RuleCall getPropertiesEPropertyAssignmentsParserRuleCall_2_2_0() { return cPropertiesEPropertyAssignmentsParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
		
		//('attributes:'
		//BEGIN
		//    attributes=EAttributeAssignments
		//END)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'attributes:'
		public Keyword getAttributesKeyword_3_0() { return cAttributesKeyword_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3_1() { return cBEGINTerminalRuleCall_3_1; }
		
		//attributes=EAttributeAssignments
		public Assignment getAttributesAssignment_3_2() { return cAttributesAssignment_3_2; }
		
		//EAttributeAssignments
		public RuleCall getAttributesEAttributeAssignmentsParserRuleCall_3_2_0() { return cAttributesEAttributeAssignmentsParserRuleCall_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3_3() { return cENDTerminalRuleCall_3_3; }
		
		//('requirements:'
		//BEGIN
		//    requirements=ERequirementAssignments
		//END)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'requirements:'
		public Keyword getRequirementsKeyword_4_0() { return cRequirementsKeyword_4_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4_1() { return cBEGINTerminalRuleCall_4_1; }
		
		//requirements=ERequirementAssignments
		public Assignment getRequirementsAssignment_4_2() { return cRequirementsAssignment_4_2; }
		
		//ERequirementAssignments
		public RuleCall getRequirementsERequirementAssignmentsParserRuleCall_4_2_0() { return cRequirementsERequirementAssignmentsParserRuleCall_4_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4_3() { return cENDTerminalRuleCall_4_3; }
		
		//('capabilities:'
		//BEGIN
		//    capabilities=ECapabilityAssignments
		//END)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'capabilities:'
		public Keyword getCapabilitiesKeyword_5_0() { return cCapabilitiesKeyword_5_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_5_1() { return cBEGINTerminalRuleCall_5_1; }
		
		//capabilities=ECapabilityAssignments
		public Assignment getCapabilitiesAssignment_5_2() { return cCapabilitiesAssignment_5_2; }
		
		//ECapabilityAssignments
		public RuleCall getCapabilitiesECapabilityAssignmentsParserRuleCall_5_2_0() { return cCapabilitiesECapabilityAssignmentsParserRuleCall_5_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5_3() { return cENDTerminalRuleCall_5_3; }
	}
	public class ECapabilityAssignmentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ECapabilityAssignments");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cECapabilityAssignmentsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCapabilitiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCapabilitiesECapabilityAssignmentParserRuleCall_1_0 = (RuleCall)cCapabilitiesAssignment_1.eContents().get(0);
		
		//ECapabilityAssignments:
		//    {ECapabilityAssignments} (capabilities+=ECapabilityAssignment)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ECapabilityAssignments} (capabilities+=ECapabilityAssignment)*
		public Group getGroup() { return cGroup; }
		
		//{ECapabilityAssignments}
		public Action getECapabilityAssignmentsAction_0() { return cECapabilityAssignmentsAction_0; }
		
		//(capabilities+=ECapabilityAssignment)*
		public Assignment getCapabilitiesAssignment_1() { return cCapabilitiesAssignment_1; }
		
		//ECapabilityAssignment
		public RuleCall getCapabilitiesECapabilityAssignmentParserRuleCall_1_0() { return cCapabilitiesECapabilityAssignmentParserRuleCall_1_0; }
	}
	public class ECapabilityAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ECapabilityAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPropertiesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cPropertiesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPropertiesEPropertyAssignmentsParserRuleCall_3_2_0 = (RuleCall)cPropertiesAssignment_3_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ECapabilityAssignment:
		//    name = ID ':'
		//    BEGIN
		//        ('properties:'
		//        BEGIN
		//            properties=EPropertyAssignments
		//        END)?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID ':'
		//BEGIN
		//    ('properties:'
		//    BEGIN
		//        properties=EPropertyAssignments
		//    END)?
		//END
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//('properties:'
		//BEGIN
		//    properties=EPropertyAssignments
		//END)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'properties:'
		public Keyword getPropertiesKeyword_3_0() { return cPropertiesKeyword_3_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3_1() { return cBEGINTerminalRuleCall_3_1; }
		
		//properties=EPropertyAssignments
		public Assignment getPropertiesAssignment_3_2() { return cPropertiesAssignment_3_2; }
		
		//EPropertyAssignments
		public RuleCall getPropertiesEPropertyAssignmentsParserRuleCall_3_2_0() { return cPropertiesEPropertyAssignmentsParserRuleCall_3_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3_3() { return cENDTerminalRuleCall_3_3; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class ERequirementAssignmentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ERequirementAssignments");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cERequirementAssignmentsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cRequirementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRequirementsERequirementAssignmentParserRuleCall_1_0 = (RuleCall)cRequirementsAssignment_1.eContents().get(0);
		
		//ERequirementAssignments:
		//    {ERequirementAssignments} (requirements+=ERequirementAssignment)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ERequirementAssignments} (requirements+=ERequirementAssignment)*
		public Group getGroup() { return cGroup; }
		
		//{ERequirementAssignments}
		public Action getERequirementAssignmentsAction_0() { return cERequirementAssignmentsAction_0; }
		
		//(requirements+=ERequirementAssignment)*
		public Assignment getRequirementsAssignment_1() { return cRequirementsAssignment_1; }
		
		//ERequirementAssignment
		public RuleCall getRequirementsERequirementAssignmentParserRuleCall_1_0() { return cRequirementsERequirementAssignmentParserRuleCall_1_0; }
	}
	public class ERequirementAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ERequirementAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNodeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNodeEPREFIX_IDParserRuleCall_3_1_0 = (RuleCall)cNodeAssignment_3_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ERequirementAssignment:
		//    name = ID ':'
		//    BEGIN
		//        ('node:' node=EPREFIX_ID)
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID ':'
		//BEGIN
		//    ('node:' node=EPREFIX_ID)
		//END
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//('node:' node=EPREFIX_ID)
		public Group getGroup_3() { return cGroup_3; }
		
		//'node:'
		public Keyword getNodeKeyword_3_0() { return cNodeKeyword_3_0; }
		
		//node=EPREFIX_ID
		public Assignment getNodeAssignment_3_1() { return cNodeAssignment_3_1; }
		
		//EPREFIX_ID
		public RuleCall getNodeEPREFIX_IDParserRuleCall_3_1_0() { return cNodeEPREFIX_IDParserRuleCall_3_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EAttributeAssignmentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EAttributeAssignments");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEAttributeAssignmentsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAttributesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAttributesEAttributeAssignmentParserRuleCall_1_0 = (RuleCall)cAttributesAssignment_1.eContents().get(0);
		
		//EAttributeAssignments:
		//    {EAttributeAssignments} (attributes+=EAttributeAssignment)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EAttributeAssignments} (attributes+=EAttributeAssignment)*
		public Group getGroup() { return cGroup; }
		
		//{EAttributeAssignments}
		public Action getEAttributeAssignmentsAction_0() { return cEAttributeAssignmentsAction_0; }
		
		//(attributes+=EAttributeAssignment)*
		public Assignment getAttributesAssignment_1() { return cAttributesAssignment_1; }
		
		//EAttributeAssignment
		public RuleCall getAttributesEAttributeAssignmentParserRuleCall_1_0() { return cAttributesEAttributeAssignmentParserRuleCall_1_0; }
	}
	public class EAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEAssignmentValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EAttributeAssignment:
		//    name = ID ':' value=EAssignmentValue;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID ':' value=EAssignmentValue
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=EAssignmentValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EAssignmentValue
		public RuleCall getValueEAssignmentValueParserRuleCall_2_0() { return cValueEAssignmentValueParserRuleCall_2_0; }
	}
	public class EPropertyAssignmentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPropertyAssignments");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEPropertyAssignmentsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPropertiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertiesEPropertyAssignmentParserRuleCall_1_0 = (RuleCall)cPropertiesAssignment_1.eContents().get(0);
		
		//EPropertyAssignments:
		//    {EPropertyAssignments} (properties+=EPropertyAssignment)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EPropertyAssignments} (properties+=EPropertyAssignment)*
		public Group getGroup() { return cGroup; }
		
		//{EPropertyAssignments}
		public Action getEPropertyAssignmentsAction_0() { return cEPropertyAssignmentsAction_0; }
		
		//(properties+=EPropertyAssignment)*
		public Assignment getPropertiesAssignment_1() { return cPropertiesAssignment_1; }
		
		//EPropertyAssignment
		public RuleCall getPropertiesEPropertyAssignmentParserRuleCall_1_0() { return cPropertiesEPropertyAssignmentParserRuleCall_1_0; }
	}
	public class EPropertyAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPropertyAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEAssignmentValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EPropertyAssignment:
		//    name = ID ':' value=EAssignmentValue;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID ':' value=EAssignmentValue
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=EAssignmentValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EAssignmentValue
		public RuleCall getValueEAssignmentValueParserRuleCall_2_0() { return cValueEAssignmentValueParserRuleCall_2_0; }
	}
	public class EAssignmentValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EAssignmentValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESingleValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cELISTParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEMAPParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEFunctionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//EAssignmentValue:
		//    ESingleValue | ELIST | EMAP | EFunction
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ESingleValue | ELIST | EMAP | EFunction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESingleValue
		public RuleCall getESingleValueParserRuleCall_0() { return cESingleValueParserRuleCall_0; }
		
		//ELIST
		public RuleCall getELISTParserRuleCall_1() { return cELISTParserRuleCall_1; }
		
		//EMAP
		public RuleCall getEMAPParserRuleCall_2() { return cEMAPParserRuleCall_2; }
		
		//EFunction
		public RuleCall getEFunctionParserRuleCall_3() { return cEFunctionParserRuleCall_3; }
	}
	public class EMAPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EMAP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cMapAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMapEMapEntryParserRuleCall_1_0 = (RuleCall)cMapAssignment_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EMAP:
		//    BEGIN
		//        map+=EMapEntry+
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN
		//    map+=EMapEntry+
		//END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//map+=EMapEntry+
		public Assignment getMapAssignment_1() { return cMapAssignment_1; }
		
		//EMapEntry
		public RuleCall getMapEMapEntryParserRuleCall_1_0() { return cMapEMapEntryParserRuleCall_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2() { return cENDTerminalRuleCall_2; }
	}
	public class EMapEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EMapEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEAssignmentValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EMapEntry:
		//    key=ID ":" value=EAssignmentValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//key=ID ":" value=EAssignmentValue
		public Group getGroup() { return cGroup; }
		
		//key=ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//ID
		public RuleCall getKeyIDTerminalRuleCall_0_0() { return cKeyIDTerminalRuleCall_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=EAssignmentValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EAssignmentValue
		public RuleCall getValueEAssignmentValueParserRuleCall_2_0() { return cValueEAssignmentValueParserRuleCall_2_0; }
	}
	public class ELISTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ELIST");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cELISTAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cListAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cListEAlphaNumericValueParserRuleCall_2_0 = (RuleCall)cListAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cListAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cListEAlphaNumericValueParserRuleCall_3_1_0 = (RuleCall)cListAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ELIST:
		//    {ELIST} '[' list+=EAlphaNumericValue? ("," list+=EAlphaNumericValue)* ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ELIST} '[' list+=EAlphaNumericValue? ("," list+=EAlphaNumericValue)* ']'
		public Group getGroup() { return cGroup; }
		
		//{ELIST}
		public Action getELISTAction_0() { return cELISTAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//list+=EAlphaNumericValue?
		public Assignment getListAssignment_2() { return cListAssignment_2; }
		
		//EAlphaNumericValue
		public RuleCall getListEAlphaNumericValueParserRuleCall_2_0() { return cListEAlphaNumericValueParserRuleCall_2_0; }
		
		//("," list+=EAlphaNumericValue)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//list+=EAlphaNumericValue
		public Assignment getListAssignment_3_1() { return cListAssignment_3_1; }
		
		//EAlphaNumericValue
		public RuleCall getListEAlphaNumericValueParserRuleCall_3_1_0() { return cListEAlphaNumericValueParserRuleCall_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class EAlphaNumericValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EAlphaNumericValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESTRINGParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEFLOATParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cESIGNEDINTParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EAlphaNumericValue:
		//    ESTRING | EFLOAT | ESIGNEDINT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ESTRING | EFLOAT | ESIGNEDINT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESTRING
		public RuleCall getESTRINGParserRuleCall_0() { return cESTRINGParserRuleCall_0; }
		
		//EFLOAT
		public RuleCall getEFLOATParserRuleCall_1() { return cEFLOATParserRuleCall_1; }
		
		//ESIGNEDINT
		public RuleCall getESIGNEDINTParserRuleCall_2() { return cESIGNEDINTParserRuleCall_2; }
	}
	public class EInputsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EInputs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEInputsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cParametersAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParametersEParameterDefinitionParserRuleCall_1_0 = (RuleCall)cParametersAssignment_1.eContents().get(0);
		
		//EInputs:
		//    {EInputs} (parameters+=EParameterDefinition)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EInputs} (parameters+=EParameterDefinition)*
		public Group getGroup() { return cGroup; }
		
		//{EInputs}
		public Action getEInputsAction_0() { return cEInputsAction_0; }
		
		//(parameters+=EParameterDefinition)*
		public Assignment getParametersAssignment_1() { return cParametersAssignment_1; }
		
		//EParameterDefinition
		public RuleCall getParametersEParameterDefinitionParserRuleCall_1_0() { return cParametersEParameterDefinitionParserRuleCall_1_0; }
	}
	public class EParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EParameterDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cParameterAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParameterEParameterDefinitionBodyParserRuleCall_3_0 = (RuleCall)cParameterAssignment_3.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//EParameterDefinition:
		//    name=ID ':'
		//    BEGIN
		//    parameter=EParameterDefinitionBody
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':'
		//BEGIN
		//parameter=EParameterDefinitionBody
		//END
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//parameter=EParameterDefinitionBody
		public Assignment getParameterAssignment_3() { return cParameterAssignment_3; }
		
		//EParameterDefinitionBody
		public RuleCall getParameterEParameterDefinitionBodyParserRuleCall_3_0() { return cParameterEParameterDefinitionBodyParserRuleCall_3_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_4() { return cENDTerminalRuleCall_4; }
	}
	public class EParameterDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EParameterDefinitionBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEParameterDefinitionBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeEDataTypeNameParserRuleCall_1_0_1_0 = (RuleCall)cTypeAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cValueKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cValueAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cValueEValueExpressionParserRuleCall_1_2_1_0 = (RuleCall)cValueAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cDefaultKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cDefaultAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cDefaultEValueExpressionParserRuleCall_1_3_1_0 = (RuleCall)cDefaultAssignment_1_3_1.eContents().get(0);
		
		//EParameterDefinitionBody:
		//    {EParameterDefinitionBody} (
		//    ('type:' type=EDataTypeName)? &
		//    ('description:' description=STRING)? &
		//    ('value:' value=EValueExpression)? &
		//    ('default:' default=EValueExpression)?);
		@Override public ParserRule getRule() { return rule; }
		
		//{EParameterDefinitionBody} (
		//('type:' type=EDataTypeName)? &
		//('description:' description=STRING)? &
		//('value:' value=EValueExpression)? &
		//('default:' default=EValueExpression)?)
		public Group getGroup() { return cGroup; }
		
		//{EParameterDefinitionBody}
		public Action getEParameterDefinitionBodyAction_0() { return cEParameterDefinitionBodyAction_0; }
		
		//(
		//   ('type:' type=EDataTypeName)? &
		//   ('description:' description=STRING)? &
		//   ('value:' value=EValueExpression)? &
		//   ('default:' default=EValueExpression)?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('type:' type=EDataTypeName)?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'type:'
		public Keyword getTypeKeyword_1_0_0() { return cTypeKeyword_1_0_0; }
		
		//type=EDataTypeName
		public Assignment getTypeAssignment_1_0_1() { return cTypeAssignment_1_0_1; }
		
		//EDataTypeName
		public RuleCall getTypeEDataTypeNameParserRuleCall_1_0_1_0() { return cTypeEDataTypeNameParserRuleCall_1_0_1_0; }
		
		//('description:' description=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'description:'
		public Keyword getDescriptionKeyword_1_1_0() { return cDescriptionKeyword_1_1_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_1_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_1_1_0; }
		
		//('value:' value=EValueExpression)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'value:'
		public Keyword getValueKeyword_1_2_0() { return cValueKeyword_1_2_0; }
		
		//value=EValueExpression
		public Assignment getValueAssignment_1_2_1() { return cValueAssignment_1_2_1; }
		
		//EValueExpression
		public RuleCall getValueEValueExpressionParserRuleCall_1_2_1_0() { return cValueEValueExpressionParserRuleCall_1_2_1_0; }
		
		//('default:' default=EValueExpression)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'default:'
		public Keyword getDefaultKeyword_1_3_0() { return cDefaultKeyword_1_3_0; }
		
		//default=EValueExpression
		public Assignment getDefaultAssignment_1_3_1() { return cDefaultAssignment_1_3_1; }
		
		//EValueExpression
		public RuleCall getDefaultEValueExpressionParserRuleCall_1_3_1_0() { return cDefaultEValueExpressionParserRuleCall_1_3_1_0; }
	}
	public class EValueExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EValueExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESingleValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EValueExpression:
		//    ESingleValue | EFunction;
		@Override public ParserRule getRule() { return rule; }
		
		//ESingleValue | EFunction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESingleValue
		public RuleCall getESingleValueParserRuleCall_0() { return cESingleValueParserRuleCall_0; }
		
		//EFunction
		public RuleCall getEFunctionParserRuleCall_1() { return cEFunctionParserRuleCall_1; }
	}
	public class EFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGetPropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGetAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGetInputParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EFunction:
		//    GetProperty | GetAttribute | GetInput;
		@Override public ParserRule getRule() { return rule; }
		
		//GetProperty | GetAttribute | GetInput
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GetProperty
		public RuleCall getGetPropertyParserRuleCall_0() { return cGetPropertyParserRuleCall_0; }
		
		//GetAttribute
		public RuleCall getGetAttributeParserRuleCall_1() { return cGetAttributeParserRuleCall_1; }
		
		//GetInput
		public RuleCall getGetInputParserRuleCall_2() { return cGetInputParserRuleCall_2; }
	}
	public class GetAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.GetAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGet_attributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeGetAttributeBodyParserRuleCall_2_0 = (RuleCall)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//GetAttribute:
		//    'get_attribute:'
		//    BEGIN
		//    attribute=GetAttributeBody
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//'get_attribute:'
		//BEGIN
		//attribute=GetAttributeBody
		//END
		public Group getGroup() { return cGroup; }
		
		//'get_attribute:'
		public Keyword getGet_attributeKeyword_0() { return cGet_attributeKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//attribute=GetAttributeBody
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//GetAttributeBody
		public RuleCall getAttributeGetAttributeBodyParserRuleCall_2_0() { return cAttributeGetAttributeBodyParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class GetAttributeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.GetAttributeBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cAttributeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cAttributeEPREFIX_REFParserRuleCall_0_1_0 = (RuleCall)cAttributeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cEntityKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEntityAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEntityEEntityReferenceParserRuleCall_1_1_0 = (RuleCall)cEntityAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cReq_capKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cReq_capAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cReq_capEPREFIX_REFParserRuleCall_2_1_0 = (RuleCall)cReq_capAssignment_2_1.eContents().get(0);
		
		//GetAttributeBody:
		//    ('attribute:' attribute=EPREFIX_REF) &
		//    ('entity:' entity=EEntityReference) &
		//    ('req_cap:' req_cap=EPREFIX_REF)?;
		@Override public ParserRule getRule() { return rule; }
		
		//('attribute:' attribute=EPREFIX_REF) &
		//('entity:' entity=EEntityReference) &
		//('req_cap:' req_cap=EPREFIX_REF)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('attribute:' attribute=EPREFIX_REF)
		public Group getGroup_0() { return cGroup_0; }
		
		//'attribute:'
		public Keyword getAttributeKeyword_0_0() { return cAttributeKeyword_0_0; }
		
		//attribute=EPREFIX_REF
		public Assignment getAttributeAssignment_0_1() { return cAttributeAssignment_0_1; }
		
		//EPREFIX_REF
		public RuleCall getAttributeEPREFIX_REFParserRuleCall_0_1_0() { return cAttributeEPREFIX_REFParserRuleCall_0_1_0; }
		
		//('entity:' entity=EEntityReference)
		public Group getGroup_1() { return cGroup_1; }
		
		//'entity:'
		public Keyword getEntityKeyword_1_0() { return cEntityKeyword_1_0; }
		
		//entity=EEntityReference
		public Assignment getEntityAssignment_1_1() { return cEntityAssignment_1_1; }
		
		//EEntityReference
		public RuleCall getEntityEEntityReferenceParserRuleCall_1_1_0() { return cEntityEEntityReferenceParserRuleCall_1_1_0; }
		
		//('req_cap:' req_cap=EPREFIX_REF)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'req_cap:'
		public Keyword getReq_capKeyword_2_0() { return cReq_capKeyword_2_0; }
		
		//req_cap=EPREFIX_REF
		public Assignment getReq_capAssignment_2_1() { return cReq_capAssignment_2_1; }
		
		//EPREFIX_REF
		public RuleCall getReq_capEPREFIX_REFParserRuleCall_2_1_0() { return cReq_capEPREFIX_REFParserRuleCall_2_1_0; }
	}
	public class EEntityReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EEntityReference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEPREFIX_TYPEParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEPREFIX_IDParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EEntityReference:
		//    EEntity | EPREFIX_TYPE | EPREFIX_ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EEntity | EPREFIX_TYPE | EPREFIX_ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EEntity
		public RuleCall getEEntityParserRuleCall_0() { return cEEntityParserRuleCall_0; }
		
		//EPREFIX_TYPE
		public RuleCall getEPREFIX_TYPEParserRuleCall_1() { return cEPREFIX_TYPEParserRuleCall_1; }
		
		//EPREFIX_ID
		public RuleCall getEPREFIX_IDParserRuleCall_2() { return cEPREFIX_IDParserRuleCall_2; }
	}
	public class EPREFIX_REFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPREFIX_REF");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEPREFIX_TYPEParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEPREFIX_IDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EPREFIX_REF:
		//    EPREFIX_TYPE | EPREFIX_ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EPREFIX_TYPE | EPREFIX_ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EPREFIX_TYPE
		public RuleCall getEPREFIX_TYPEParserRuleCall_0() { return cEPREFIX_TYPEParserRuleCall_0; }
		
		//EPREFIX_ID
		public RuleCall getEPREFIX_IDParserRuleCall_1() { return cEPREFIX_IDParserRuleCall_1; }
	}
	public class EPREFIX_IDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPREFIX_ID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cModuleAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cModuleIDTerminalRuleCall_0_0_0 = (RuleCall)cModuleAssignment_0_0.eContents().get(0);
		private final Keyword cSolidusKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVersionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVersionVERSIONTerminalRuleCall_2_1_0 = (RuleCall)cVersionAssignment_2_1.eContents().get(0);
		
		//EPREFIX_ID:
		//    (module=ID '/')? id=ID ('@'version=VERSION)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(module=ID '/')? id=ID ('@'version=VERSION)?
		public Group getGroup() { return cGroup; }
		
		//(module=ID '/')?
		public Group getGroup_0() { return cGroup_0; }
		
		//module=ID
		public Assignment getModuleAssignment_0_0() { return cModuleAssignment_0_0; }
		
		//ID
		public RuleCall getModuleIDTerminalRuleCall_0_0_0() { return cModuleIDTerminalRuleCall_0_0_0; }
		
		//'/'
		public Keyword getSolidusKeyword_0_1() { return cSolidusKeyword_0_1; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//('@'version=VERSION)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_2_0() { return cCommercialAtKeyword_2_0; }
		
		//version=VERSION
		public Assignment getVersionAssignment_2_1() { return cVersionAssignment_2_1; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_2_1_0() { return cVersionVERSIONTerminalRuleCall_2_1_0; }
	}
	public class EEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EEntity");
		private final Assignment cEntityAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEntityENTITYTerminalRuleCall_0 = (RuleCall)cEntityAssignment.eContents().get(0);
		
		//EEntity:
		//    entity=ENTITY
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//entity=ENTITY
		public Assignment getEntityAssignment() { return cEntityAssignment; }
		
		//ENTITY
		public RuleCall getEntityENTITYTerminalRuleCall_0() { return cEntityENTITYTerminalRuleCall_0; }
	}
	public class GetPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.GetProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGet_propertyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cPropertyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertyGetPropertyBodyParserRuleCall_2_0 = (RuleCall)cPropertyAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//GetProperty:
		//    'get_property:'
		//    BEGIN
		//    property=GetPropertyBody
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//'get_property:'
		//BEGIN
		//property=GetPropertyBody
		//END
		public Group getGroup() { return cGroup; }
		
		//'get_property:'
		public Keyword getGet_propertyKeyword_0() { return cGet_propertyKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//property=GetPropertyBody
		public Assignment getPropertyAssignment_2() { return cPropertyAssignment_2; }
		
		//GetPropertyBody
		public RuleCall getPropertyGetPropertyBodyParserRuleCall_2_0() { return cPropertyGetPropertyBodyParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class GetPropertyBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.GetPropertyBody");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cPropertyKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPropertyAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cPropertyEPREFIX_REFParserRuleCall_0_1_0 = (RuleCall)cPropertyAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cEntityKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEntityAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEntityEEntityReferenceParserRuleCall_1_1_0 = (RuleCall)cEntityAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cReq_capKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cReq_capAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cReq_capEPREFIX_REFParserRuleCall_2_1_0 = (RuleCall)cReq_capAssignment_2_1.eContents().get(0);
		
		//GetPropertyBody:
		//    ('property:' property=EPREFIX_REF) &
		//    ('entity:' entity=EEntityReference) &
		//    ('req_cap:' req_cap=EPREFIX_REF)?;
		@Override public ParserRule getRule() { return rule; }
		
		//('property:' property=EPREFIX_REF) &
		//('entity:' entity=EEntityReference) &
		//('req_cap:' req_cap=EPREFIX_REF)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('property:' property=EPREFIX_REF)
		public Group getGroup_0() { return cGroup_0; }
		
		//'property:'
		public Keyword getPropertyKeyword_0_0() { return cPropertyKeyword_0_0; }
		
		//property=EPREFIX_REF
		public Assignment getPropertyAssignment_0_1() { return cPropertyAssignment_0_1; }
		
		//EPREFIX_REF
		public RuleCall getPropertyEPREFIX_REFParserRuleCall_0_1_0() { return cPropertyEPREFIX_REFParserRuleCall_0_1_0; }
		
		//('entity:' entity=EEntityReference)
		public Group getGroup_1() { return cGroup_1; }
		
		//'entity:'
		public Keyword getEntityKeyword_1_0() { return cEntityKeyword_1_0; }
		
		//entity=EEntityReference
		public Assignment getEntityAssignment_1_1() { return cEntityAssignment_1_1; }
		
		//EEntityReference
		public RuleCall getEntityEEntityReferenceParserRuleCall_1_1_0() { return cEntityEEntityReferenceParserRuleCall_1_1_0; }
		
		//('req_cap:' req_cap=EPREFIX_REF)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'req_cap:'
		public Keyword getReq_capKeyword_2_0() { return cReq_capKeyword_2_0; }
		
		//req_cap=EPREFIX_REF
		public Assignment getReq_capAssignment_2_1() { return cReq_capAssignment_2_1; }
		
		//EPREFIX_REF
		public RuleCall getReq_capEPREFIX_REFParserRuleCall_2_1_0() { return cReq_capEPREFIX_REFParserRuleCall_2_1_0; }
	}
	public class GetInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.GetInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGet_inputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInputAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cInputEParameterDefinitionCrossReference_1_0 = (CrossReference)cInputAssignment_1.eContents().get(0);
		private final RuleCall cInputEParameterDefinitionIDTerminalRuleCall_1_0_1 = (RuleCall)cInputEParameterDefinitionCrossReference_1_0.eContents().get(1);
		
		//GetInput:
		//    'get_input:' input=[EParameterDefinition]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'get_input:' input=[EParameterDefinition]
		public Group getGroup() { return cGroup; }
		
		//'get_input:'
		public Keyword getGet_inputKeyword_0() { return cGet_inputKeyword_0; }
		
		//input=[EParameterDefinition]
		public Assignment getInputAssignment_1() { return cInputAssignment_1; }
		
		//[EParameterDefinition]
		public CrossReference getInputEParameterDefinitionCrossReference_1_0() { return cInputEParameterDefinitionCrossReference_1_0; }
		
		//ID
		public RuleCall getInputEParameterDefinitionIDTerminalRuleCall_1_0_1() { return cInputEParameterDefinitionIDTerminalRuleCall_1_0_1; }
	}
	public class ESingleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ESingleValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cESTRINGParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEBOOLEANParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEFLOATParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cESIGNEDINTParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ESingleValue:
		//    ESTRING | EBOOLEAN | EFLOAT | ESIGNEDINT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ESTRING | EBOOLEAN | EFLOAT | ESIGNEDINT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESTRING
		public RuleCall getESTRINGParserRuleCall_0() { return cESTRINGParserRuleCall_0; }
		
		//EBOOLEAN
		public RuleCall getEBOOLEANParserRuleCall_1() { return cEBOOLEANParserRuleCall_1; }
		
		//EFLOAT
		public RuleCall getEFLOATParserRuleCall_2() { return cEFLOATParserRuleCall_2; }
		
		//ESIGNEDINT
		public RuleCall getESIGNEDINTParserRuleCall_3() { return cESIGNEDINTParserRuleCall_3; }
	}
	public class ESTRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ESTRING");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ESTRING:
		//    value = STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value = STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class EBOOLEANElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EBOOLEAN");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEANTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//EBOOLEAN:
		//    value = BOOLEAN
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value = BOOLEAN
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN
		public RuleCall getValueBOOLEANTerminalRuleCall_0() { return cValueBOOLEANTerminalRuleCall_0; }
	}
	public class EFLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EFLOAT");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueFLOATParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//EFLOAT:
		//    value = FLOAT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value = FLOAT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//FLOAT
		public RuleCall getValueFLOATParserRuleCall_0() { return cValueFLOATParserRuleCall_0; }
	}
	public class ESIGNEDINTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ESIGNEDINT");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSIGNEDINTParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ESIGNEDINT:
		//    value = SIGNEDINT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value = SIGNEDINT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//SIGNEDINT
		public RuleCall getValueSIGNEDINTParserRuleCall_0() { return cValueSIGNEDINTParserRuleCall_0; }
	}
	public class EDataTypeNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EDataTypeName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEPREFIX_TYPEParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEPRIMITIVE_TYPEParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDataTypeName:
		//    EPREFIX_TYPE | EPRIMITIVE_TYPE;
		@Override public ParserRule getRule() { return rule; }
		
		//EPREFIX_TYPE | EPRIMITIVE_TYPE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EPREFIX_TYPE
		public RuleCall getEPREFIX_TYPEParserRuleCall_0() { return cEPREFIX_TYPEParserRuleCall_0; }
		
		//EPRIMITIVE_TYPE
		public RuleCall getEPRIMITIVE_TYPEParserRuleCall_1() { return cEPRIMITIVE_TYPEParserRuleCall_1; }
	}
	public class EPREFIX_TYPEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPREFIX_TYPE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cModuleAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cModuleIDTerminalRuleCall_0_0_0 = (RuleCall)cModuleAssignment_0_0.eContents().get(0);
		private final Keyword cSolidusKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeQUALIFIED_NAMETerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//EPREFIX_TYPE:
		//    (module=ID '/')? type=QUALIFIED_NAME
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(module=ID '/')? type=QUALIFIED_NAME
		public Group getGroup() { return cGroup; }
		
		//(module=ID '/')?
		public Group getGroup_0() { return cGroup_0; }
		
		//module=ID
		public Assignment getModuleAssignment_0_0() { return cModuleAssignment_0_0; }
		
		//ID
		public RuleCall getModuleIDTerminalRuleCall_0_0_0() { return cModuleIDTerminalRuleCall_0_0_0; }
		
		//'/'
		public Keyword getSolidusKeyword_0_1() { return cSolidusKeyword_0_1; }
		
		//type=QUALIFIED_NAME
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//QUALIFIED_NAME
		public RuleCall getTypeQUALIFIED_NAMETerminalRuleCall_1_0() { return cTypeQUALIFIED_NAMETerminalRuleCall_1_0; }
	}
	public class EPRIMITIVE_TYPEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.EPRIMITIVE_TYPE");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypeIDTerminalRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//EPRIMITIVE_TYPE:
		//    type=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=ID
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_0() { return cTypeIDTerminalRuleCall_0; }
	}
	public class SIGNEDINTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.SIGNEDINT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SIGNEDINT returns ecore::EInt: '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class FLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.FLOAT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FLOAT returns ecore::EFloat: INT? '.' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT? '.' INT
		public Group getGroup() { return cGroup; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	
	
	private final AADM_ModelElements pAADM_Model;
	private final EOutputsElements pEOutputs;
	private final EPoliciesElements pEPolicies;
	private final EPolicyDefinitionElements pEPolicyDefinition;
	private final EPolicyDefinitionBodyElements pEPolicyDefinitionBody;
	private final ETriggerDefinitionsElements pETriggerDefinitions;
	private final ETriggerDefinitionElements pETriggerDefinition;
	private final ETriggerDefinitionBodyElements pETriggerDefinitionBody;
	private final EActivityDefinitionsElements pEActivityDefinitions;
	private final EActivityDefinitionElements pEActivityDefinition;
	private final ECallOperationActivityDefinitionElements pECallOperationActivityDefinition;
	private final ECallOperationActivityDefinitionBodyElements pECallOperationActivityDefinitionBody;
	private final ETimeIntervalElements pETimeInterval;
	private final EEvenFilterElements pEEvenFilter;
	private final EExtendedTriggerConditionElements pEExtendedTriggerCondition;
	private final EConditionClauseDefinitionElements pEConditionClauseDefinition;
	private final EConditionClauseDefinitionANDElements pEConditionClauseDefinitionAND;
	private final EConditionClauseDefinitionORElements pEConditionClauseDefinitionOR;
	private final EConditionClauseDefinitionNOTElements pEConditionClauseDefinitionNOT;
	private final EConditionClauseDefinitionAssertElements pEConditionClauseDefinitionAssert;
	private final EAssertionDefinitionElements pEAssertionDefinition;
	private final EConstraintListElements pEConstraintList;
	private final EConstraintElements pEConstraint;
	private final EMaxLengthElements pEMaxLength;
	private final EMinLengthElements pEMinLength;
	private final ELengthElements pELength;
	private final EValid_ValuesElements pEValid_Values;
	private final EInRangeElements pEInRange;
	private final ELessOrEqualElements pELessOrEqual;
	private final ELessThanElements pELessThan;
	private final EGreaterOrEqualElements pEGreaterOrEqual;
	private final EGreaterThanElements pEGreaterThan;
	private final EEqualElements pEEqual;
	private final ETargetElements pETarget;
	private final ENodeTemplatesElements pENodeTemplates;
	private final ENodeTemplateElements pENodeTemplate;
	private final ENodeTemplateBodyElements pENodeTemplateBody;
	private final ECapabilityAssignmentsElements pECapabilityAssignments;
	private final ECapabilityAssignmentElements pECapabilityAssignment;
	private final ERequirementAssignmentsElements pERequirementAssignments;
	private final ERequirementAssignmentElements pERequirementAssignment;
	private final EAttributeAssignmentsElements pEAttributeAssignments;
	private final EAttributeAssignmentElements pEAttributeAssignment;
	private final EPropertyAssignmentsElements pEPropertyAssignments;
	private final EPropertyAssignmentElements pEPropertyAssignment;
	private final EAssignmentValueElements pEAssignmentValue;
	private final EMAPElements pEMAP;
	private final EMapEntryElements pEMapEntry;
	private final ELISTElements pELIST;
	private final EAlphaNumericValueElements pEAlphaNumericValue;
	private final EInputsElements pEInputs;
	private final EParameterDefinitionElements pEParameterDefinition;
	private final EParameterDefinitionBodyElements pEParameterDefinitionBody;
	private final EValueExpressionElements pEValueExpression;
	private final EFunctionElements pEFunction;
	private final GetAttributeElements pGetAttribute;
	private final GetAttributeBodyElements pGetAttributeBody;
	private final EEntityReferenceElements pEEntityReference;
	private final EPREFIX_REFElements pEPREFIX_REF;
	private final EPREFIX_IDElements pEPREFIX_ID;
	private final EEntityElements pEEntity;
	private final GetPropertyElements pGetProperty;
	private final GetPropertyBodyElements pGetPropertyBody;
	private final GetInputElements pGetInput;
	private final ESingleValueElements pESingleValue;
	private final ESTRINGElements pESTRING;
	private final EBOOLEANElements pEBOOLEAN;
	private final EFLOATElements pEFLOAT;
	private final ESIGNEDINTElements pESIGNEDINT;
	private final EDataTypeNameElements pEDataTypeName;
	private final EPREFIX_TYPEElements pEPREFIX_TYPE;
	private final EPRIMITIVE_TYPEElements pEPRIMITIVE_TYPE;
	private final TerminalRule tQUALIFIED_NAME;
	private final TerminalRule tBOOLEAN;
	private final SIGNEDINTElements pSIGNEDINT;
	private final FLOATElements pFLOAT;
	private final TerminalRule tENTITY;
	private final TerminalRule tID;
	private final TerminalRule tVERSION;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AADMGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAADM_Model = new AADM_ModelElements();
		this.pEOutputs = new EOutputsElements();
		this.pEPolicies = new EPoliciesElements();
		this.pEPolicyDefinition = new EPolicyDefinitionElements();
		this.pEPolicyDefinitionBody = new EPolicyDefinitionBodyElements();
		this.pETriggerDefinitions = new ETriggerDefinitionsElements();
		this.pETriggerDefinition = new ETriggerDefinitionElements();
		this.pETriggerDefinitionBody = new ETriggerDefinitionBodyElements();
		this.pEActivityDefinitions = new EActivityDefinitionsElements();
		this.pEActivityDefinition = new EActivityDefinitionElements();
		this.pECallOperationActivityDefinition = new ECallOperationActivityDefinitionElements();
		this.pECallOperationActivityDefinitionBody = new ECallOperationActivityDefinitionBodyElements();
		this.pETimeInterval = new ETimeIntervalElements();
		this.pEEvenFilter = new EEvenFilterElements();
		this.pEExtendedTriggerCondition = new EExtendedTriggerConditionElements();
		this.pEConditionClauseDefinition = new EConditionClauseDefinitionElements();
		this.pEConditionClauseDefinitionAND = new EConditionClauseDefinitionANDElements();
		this.pEConditionClauseDefinitionOR = new EConditionClauseDefinitionORElements();
		this.pEConditionClauseDefinitionNOT = new EConditionClauseDefinitionNOTElements();
		this.pEConditionClauseDefinitionAssert = new EConditionClauseDefinitionAssertElements();
		this.pEAssertionDefinition = new EAssertionDefinitionElements();
		this.pEConstraintList = new EConstraintListElements();
		this.pEConstraint = new EConstraintElements();
		this.pEMaxLength = new EMaxLengthElements();
		this.pEMinLength = new EMinLengthElements();
		this.pELength = new ELengthElements();
		this.pEValid_Values = new EValid_ValuesElements();
		this.pEInRange = new EInRangeElements();
		this.pELessOrEqual = new ELessOrEqualElements();
		this.pELessThan = new ELessThanElements();
		this.pEGreaterOrEqual = new EGreaterOrEqualElements();
		this.pEGreaterThan = new EGreaterThanElements();
		this.pEEqual = new EEqualElements();
		this.pETarget = new ETargetElements();
		this.pENodeTemplates = new ENodeTemplatesElements();
		this.pENodeTemplate = new ENodeTemplateElements();
		this.pENodeTemplateBody = new ENodeTemplateBodyElements();
		this.pECapabilityAssignments = new ECapabilityAssignmentsElements();
		this.pECapabilityAssignment = new ECapabilityAssignmentElements();
		this.pERequirementAssignments = new ERequirementAssignmentsElements();
		this.pERequirementAssignment = new ERequirementAssignmentElements();
		this.pEAttributeAssignments = new EAttributeAssignmentsElements();
		this.pEAttributeAssignment = new EAttributeAssignmentElements();
		this.pEPropertyAssignments = new EPropertyAssignmentsElements();
		this.pEPropertyAssignment = new EPropertyAssignmentElements();
		this.pEAssignmentValue = new EAssignmentValueElements();
		this.pEMAP = new EMAPElements();
		this.pEMapEntry = new EMapEntryElements();
		this.pELIST = new ELISTElements();
		this.pEAlphaNumericValue = new EAlphaNumericValueElements();
		this.pEInputs = new EInputsElements();
		this.pEParameterDefinition = new EParameterDefinitionElements();
		this.pEParameterDefinitionBody = new EParameterDefinitionBodyElements();
		this.pEValueExpression = new EValueExpressionElements();
		this.pEFunction = new EFunctionElements();
		this.pGetAttribute = new GetAttributeElements();
		this.pGetAttributeBody = new GetAttributeBodyElements();
		this.pEEntityReference = new EEntityReferenceElements();
		this.pEPREFIX_REF = new EPREFIX_REFElements();
		this.pEPREFIX_ID = new EPREFIX_IDElements();
		this.pEEntity = new EEntityElements();
		this.pGetProperty = new GetPropertyElements();
		this.pGetPropertyBody = new GetPropertyBodyElements();
		this.pGetInput = new GetInputElements();
		this.pESingleValue = new ESingleValueElements();
		this.pESTRING = new ESTRINGElements();
		this.pEBOOLEAN = new EBOOLEANElements();
		this.pEFLOAT = new EFLOATElements();
		this.pESIGNEDINT = new ESIGNEDINTElements();
		this.pEDataTypeName = new EDataTypeNameElements();
		this.pEPREFIX_TYPE = new EPREFIX_TYPEElements();
		this.pEPRIMITIVE_TYPE = new EPRIMITIVE_TYPEElements();
		this.tQUALIFIED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.QUALIFIED_NAME");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.BOOLEAN");
		this.pSIGNEDINT = new SIGNEDINTElements();
		this.pFLOAT = new FLOATElements();
		this.tENTITY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ENTITY");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.ID");
		this.tVERSION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.VERSION");
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.sodalite.dsl.AADM.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.sodalite.dsl.AADM".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AADM_Model:
	//    ('description:' description=STRING)? &
	//    ('module:' module=ID) &
	//    ('import:' imports+=ID)* &
	//    ('inputs:'
	//        BEGIN
	//        inputs = EInputs
	//        END)? &
	//    ('node_templates:'
	//        BEGIN
	//        nodeTemplates=ENodeTemplates
	//        END)? &
	//    ('policies:'
	//        BEGIN
	//        policies=EPolicies
	//        END)? &
	//    ('outputs:'
	//        BEGIN
	//        outputs = EOutputs
	//        END)?
	//;
	public AADM_ModelElements getAADM_ModelAccess() {
		return pAADM_Model;
	}
	
	public ParserRule getAADM_ModelRule() {
		return getAADM_ModelAccess().getRule();
	}
	
	//EOutputs:
	//    {EOutputs} (parameters+=EParameterDefinition)*;
	public EOutputsElements getEOutputsAccess() {
		return pEOutputs;
	}
	
	public ParserRule getEOutputsRule() {
		return getEOutputsAccess().getRule();
	}
	
	//EPolicies:
	//    {EPolicies} (policies+=EPolicyDefinition)*;
	public EPoliciesElements getEPoliciesAccess() {
		return pEPolicies;
	}
	
	public ParserRule getEPoliciesRule() {
		return getEPoliciesAccess().getRule();
	}
	
	//EPolicyDefinition:
	//    name = ID ':'
	//    BEGIN
	//        policy=EPolicyDefinitionBody
	//    END
	//;
	public EPolicyDefinitionElements getEPolicyDefinitionAccess() {
		return pEPolicyDefinition;
	}
	
	public ParserRule getEPolicyDefinitionRule() {
		return getEPolicyDefinitionAccess().getRule();
	}
	
	//EPolicyDefinitionBody:
	//    ('type:' type=EPREFIX_TYPE) &
	//    ('description:' description=STRING)? &
	//    ('properties:'
	//    BEGIN
	//        properties=EPropertyAssignments
	//    END)? &
	//    ('targets:' '[' targets=ETarget ']')? &
	//    ('triggers:'
	//    BEGIN
	//        triggers=ETriggerDefinitions
	//    END)?
	//;
	public EPolicyDefinitionBodyElements getEPolicyDefinitionBodyAccess() {
		return pEPolicyDefinitionBody;
	}
	
	public ParserRule getEPolicyDefinitionBodyRule() {
		return getEPolicyDefinitionBodyAccess().getRule();
	}
	
	//ETriggerDefinitions:
	//    {ETriggerDefinitions} (triggers+=ETriggerDefinition)*;
	public ETriggerDefinitionsElements getETriggerDefinitionsAccess() {
		return pETriggerDefinitions;
	}
	
	public ParserRule getETriggerDefinitionsRule() {
		return getETriggerDefinitionsAccess().getRule();
	}
	
	//ETriggerDefinition:
	//    name=QUALIFIED_NAME ':'
	//    BEGIN
	//    trigger=ETriggerDefinitionBody
	//    END;
	public ETriggerDefinitionElements getETriggerDefinitionAccess() {
		return pETriggerDefinition;
	}
	
	public ParserRule getETriggerDefinitionRule() {
		return getETriggerDefinitionAccess().getRule();
	}
	
	//ETriggerDefinitionBody:
	//    ('description:' description=STRING)? &
	//    ('event:' event=STRING) &
	//    ('schedule:'
	//        BEGIN
	//        schedule=ETimeInterval
	//        END
	//    )? &
	//    ('target_filter:'
	//        BEGIN
	//        target_filter=EEvenFilter
	//        END
	//    )? &
	//    ('condition:'
	//        BEGIN
	//        condition=EExtendedTriggerCondition
	//        END
	//    )? &
	//    ('action:'
	//        BEGIN
	//        action=EActivityDefinitions
	//        END
	//    )
	//;
	public ETriggerDefinitionBodyElements getETriggerDefinitionBodyAccess() {
		return pETriggerDefinitionBody;
	}
	
	public ParserRule getETriggerDefinitionBodyRule() {
		return getETriggerDefinitionBodyAccess().getRule();
	}
	
	//EActivityDefinitions:
	//    {EActivityDefinitions} (list += EActivityDefinition)*
	//;
	public EActivityDefinitionsElements getEActivityDefinitionsAccess() {
		return pEActivityDefinitions;
	}
	
	public ParserRule getEActivityDefinitionsRule() {
		return getEActivityDefinitionsAccess().getRule();
	}
	
	//EActivityDefinition:
	//    ECallOperationActivityDefinition
	//;
	public EActivityDefinitionElements getEActivityDefinitionAccess() {
		return pEActivityDefinition;
	}
	
	public ParserRule getEActivityDefinitionRule() {
		return getEActivityDefinitionAccess().getRule();
	}
	
	//ECallOperationActivityDefinition:
	//    'call_operation:'
	//    BEGIN
	//    operation=ECallOperationActivityDefinitionBody
	//    END
	//;
	public ECallOperationActivityDefinitionElements getECallOperationActivityDefinitionAccess() {
		return pECallOperationActivityDefinition;
	}
	
	public ParserRule getECallOperationActivityDefinitionRule() {
		return getECallOperationActivityDefinitionAccess().getRule();
	}
	
	//ECallOperationActivityDefinitionBody:
	//    ('operation:' operation=EPREFIX_TYPE) &
	//    ('inputs:'
	//        BEGIN
	//        inputs=EPropertyAssignments
	//        END
	//    )?
	//;
	public ECallOperationActivityDefinitionBodyElements getECallOperationActivityDefinitionBodyAccess() {
		return pECallOperationActivityDefinitionBody;
	}
	
	public ParserRule getECallOperationActivityDefinitionBodyRule() {
		return getECallOperationActivityDefinitionBodyAccess().getRule();
	}
	
	//ETimeInterval:
	//    ('start_time:' start_time=STRING)
	//    ('end_time:' end_time=STRING)
	//;
	public ETimeIntervalElements getETimeIntervalAccess() {
		return pETimeInterval;
	}
	
	public ParserRule getETimeIntervalRule() {
		return getETimeIntervalAccess().getRule();
	}
	
	//EEvenFilter:
	//    ('node:' node=EPREFIX_REF) &
	//    ('requirement:' requirement=EPREFIX_REF)? &
	//    ('capability:' capability=EPREFIX_REF)?
	//;
	public EEvenFilterElements getEEvenFilterAccess() {
		return pEEvenFilter;
	}
	
	public ParserRule getEEvenFilterRule() {
		return getEEvenFilterAccess().getRule();
	}
	
	//EExtendedTriggerCondition:
	//    ('constraint:'
	//        BEGIN
	//        constraint=EConditionClauseDefinition
	//        END
	//    )? &
	//    ('period:' period=STRING)? &
	//    ('evaluations:' evaluations=ESIGNEDINT)? &
	//    ('method:' method=STRING)?
	//;
	public EExtendedTriggerConditionElements getEExtendedTriggerConditionAccess() {
		return pEExtendedTriggerCondition;
	}
	
	public ParserRule getEExtendedTriggerConditionRule() {
		return getEExtendedTriggerConditionAccess().getRule();
	}
	
	//EConditionClauseDefinition:
	//    EConditionClauseDefinitionAND | EConditionClauseDefinitionOR | EConditionClauseDefinitionNOT | EConditionClauseDefinitionAssert
	//;
	public EConditionClauseDefinitionElements getEConditionClauseDefinitionAccess() {
		return pEConditionClauseDefinition;
	}
	
	public ParserRule getEConditionClauseDefinitionRule() {
		return getEConditionClauseDefinitionAccess().getRule();
	}
	
	//EConditionClauseDefinitionAND:
	//    'and:'
	//    BEGIN
	//    and = EConditionClauseDefinition
	//    END
	//;
	public EConditionClauseDefinitionANDElements getEConditionClauseDefinitionANDAccess() {
		return pEConditionClauseDefinitionAND;
	}
	
	public ParserRule getEConditionClauseDefinitionANDRule() {
		return getEConditionClauseDefinitionANDAccess().getRule();
	}
	
	//EConditionClauseDefinitionOR:
	//    'or:'
	//    BEGIN
	//    or = EConditionClauseDefinition
	//    END
	//;
	public EConditionClauseDefinitionORElements getEConditionClauseDefinitionORAccess() {
		return pEConditionClauseDefinitionOR;
	}
	
	public ParserRule getEConditionClauseDefinitionORRule() {
		return getEConditionClauseDefinitionORAccess().getRule();
	}
	
	//EConditionClauseDefinitionNOT:
	//    'not:'
	//    BEGIN
	//    not = EConditionClauseDefinition
	//    END
	//;
	public EConditionClauseDefinitionNOTElements getEConditionClauseDefinitionNOTAccess() {
		return pEConditionClauseDefinitionNOT;
	}
	
	public ParserRule getEConditionClauseDefinitionNOTRule() {
		return getEConditionClauseDefinitionNOTAccess().getRule();
	}
	
	//EConditionClauseDefinitionAssert:
	//    {EConditionClauseDefinitionAssert} (assertions += EAssertionDefinition)*
	//;
	public EConditionClauseDefinitionAssertElements getEConditionClauseDefinitionAssertAccess() {
		return pEConditionClauseDefinitionAssert;
	}
	
	public ParserRule getEConditionClauseDefinitionAssertRule() {
		return getEConditionClauseDefinitionAssertAccess().getRule();
	}
	
	//EAssertionDefinition:
	//    attribute_name = ID ':' '[' constraints=EConstraintList ']'
	//;
	public EAssertionDefinitionElements getEAssertionDefinitionAccess() {
		return pEAssertionDefinition;
	}
	
	public ParserRule getEAssertionDefinitionRule() {
		return getEAssertionDefinitionAccess().getRule();
	}
	
	//EConstraintList:
	//    list+=EConstraint (',' list+=EConstraint)*;
	public EConstraintListElements getEConstraintListAccess() {
		return pEConstraintList;
	}
	
	public ParserRule getEConstraintListRule() {
		return getEConstraintListAccess().getRule();
	}
	
	//EConstraint:
	//    EEqual | EGreaterThan | EGreaterOrEqual | ELessThan | ELessOrEqual | EInRange | EValid_Values | ELength | EMinLength |
	//    EMaxLength;
	public EConstraintElements getEConstraintAccess() {
		return pEConstraint;
	}
	
	public ParserRule getEConstraintRule() {
		return getEConstraintAccess().getRule();
	}
	
	//EMaxLength:
	//    'max_length:' val=EAlphaNumericValue;
	public EMaxLengthElements getEMaxLengthAccess() {
		return pEMaxLength;
	}
	
	public ParserRule getEMaxLengthRule() {
		return getEMaxLengthAccess().getRule();
	}
	
	//EMinLength:
	//    'min_length:' val=EAlphaNumericValue;
	public EMinLengthElements getEMinLengthAccess() {
		return pEMinLength;
	}
	
	public ParserRule getEMinLengthRule() {
		return getEMinLengthAccess().getRule();
	}
	
	//ELength:
	//    'length:' val=EAlphaNumericValue;
	public ELengthElements getELengthAccess() {
		return pELength;
	}
	
	public ParserRule getELengthRule() {
		return getELengthAccess().getRule();
	}
	
	//EValid_Values:
	//    'valid_values:' val=ELIST;
	public EValid_ValuesElements getEValid_ValuesAccess() {
		return pEValid_Values;
	}
	
	public ParserRule getEValid_ValuesRule() {
		return getEValid_ValuesAccess().getRule();
	}
	
	//EInRange:
	//    'in_range:' '[' start=EAlphaNumericValue "," end=EAlphaNumericValue ']';
	public EInRangeElements getEInRangeAccess() {
		return pEInRange;
	}
	
	public ParserRule getEInRangeRule() {
		return getEInRangeAccess().getRule();
	}
	
	//ELessOrEqual:
	//    'less_or_equal:' val=EAlphaNumericValue;
	public ELessOrEqualElements getELessOrEqualAccess() {
		return pELessOrEqual;
	}
	
	public ParserRule getELessOrEqualRule() {
		return getELessOrEqualAccess().getRule();
	}
	
	//ELessThan:
	//    'less_than:' val=EAlphaNumericValue;
	public ELessThanElements getELessThanAccess() {
		return pELessThan;
	}
	
	public ParserRule getELessThanRule() {
		return getELessThanAccess().getRule();
	}
	
	//EGreaterOrEqual:
	//    'greater_or_equal:' val=EAlphaNumericValue;
	public EGreaterOrEqualElements getEGreaterOrEqualAccess() {
		return pEGreaterOrEqual;
	}
	
	public ParserRule getEGreaterOrEqualRule() {
		return getEGreaterOrEqualAccess().getRule();
	}
	
	//EGreaterThan:
	//    'greater_than:' val=EAlphaNumericValue;
	public EGreaterThanElements getEGreaterThanAccess() {
		return pEGreaterThan;
	}
	
	public ParserRule getEGreaterThanRule() {
		return getEGreaterThanAccess().getRule();
	}
	
	//EEqual:
	//    'equal:' val=ESingleValue;
	public EEqualElements getEEqualAccess() {
		return pEEqual;
	}
	
	public ParserRule getEEqualRule() {
		return getEEqualAccess().getRule();
	}
	
	//ETarget:
	//    target+=EPREFIX_ID (',' target+=EPREFIX_ID)*;
	public ETargetElements getETargetAccess() {
		return pETarget;
	}
	
	public ParserRule getETargetRule() {
		return getETargetAccess().getRule();
	}
	
	//ENodeTemplates:
	//    {ENodeTemplates} (nodeTemplates+=ENodeTemplate)*;
	public ENodeTemplatesElements getENodeTemplatesAccess() {
		return pENodeTemplates;
	}
	
	public ParserRule getENodeTemplatesRule() {
		return getENodeTemplatesAccess().getRule();
	}
	
	//ENodeTemplate:
	//    name = ID ':'
	//    BEGIN
	//        node=ENodeTemplateBody
	//    END
	//;
	public ENodeTemplateElements getENodeTemplateAccess() {
		return pENodeTemplate;
	}
	
	public ParserRule getENodeTemplateRule() {
		return getENodeTemplateAccess().getRule();
	}
	
	//ENodeTemplateBody:
	//    ('type:' type=EPREFIX_TYPE) &
	//    ('description:' description=STRING)? &
	//    ('properties:'
	//    BEGIN
	//        properties=EPropertyAssignments
	//    END)? &
	//    ('attributes:'
	//    BEGIN
	//        attributes=EAttributeAssignments
	//    END)? &
	//    ('requirements:'
	//    BEGIN
	//        requirements=ERequirementAssignments
	//    END)? &
	//    ('capabilities:'
	//    BEGIN
	//        capabilities=ECapabilityAssignments
	//    END)?
	//;
	public ENodeTemplateBodyElements getENodeTemplateBodyAccess() {
		return pENodeTemplateBody;
	}
	
	public ParserRule getENodeTemplateBodyRule() {
		return getENodeTemplateBodyAccess().getRule();
	}
	
	//ECapabilityAssignments:
	//    {ECapabilityAssignments} (capabilities+=ECapabilityAssignment)*;
	public ECapabilityAssignmentsElements getECapabilityAssignmentsAccess() {
		return pECapabilityAssignments;
	}
	
	public ParserRule getECapabilityAssignmentsRule() {
		return getECapabilityAssignmentsAccess().getRule();
	}
	
	//ECapabilityAssignment:
	//    name = ID ':'
	//    BEGIN
	//        ('properties:'
	//        BEGIN
	//            properties=EPropertyAssignments
	//        END)?
	//    END;
	public ECapabilityAssignmentElements getECapabilityAssignmentAccess() {
		return pECapabilityAssignment;
	}
	
	public ParserRule getECapabilityAssignmentRule() {
		return getECapabilityAssignmentAccess().getRule();
	}
	
	//ERequirementAssignments:
	//    {ERequirementAssignments} (requirements+=ERequirementAssignment)*;
	public ERequirementAssignmentsElements getERequirementAssignmentsAccess() {
		return pERequirementAssignments;
	}
	
	public ParserRule getERequirementAssignmentsRule() {
		return getERequirementAssignmentsAccess().getRule();
	}
	
	//ERequirementAssignment:
	//    name = ID ':'
	//    BEGIN
	//        ('node:' node=EPREFIX_ID)
	//    END;
	public ERequirementAssignmentElements getERequirementAssignmentAccess() {
		return pERequirementAssignment;
	}
	
	public ParserRule getERequirementAssignmentRule() {
		return getERequirementAssignmentAccess().getRule();
	}
	
	//EAttributeAssignments:
	//    {EAttributeAssignments} (attributes+=EAttributeAssignment)*;
	public EAttributeAssignmentsElements getEAttributeAssignmentsAccess() {
		return pEAttributeAssignments;
	}
	
	public ParserRule getEAttributeAssignmentsRule() {
		return getEAttributeAssignmentsAccess().getRule();
	}
	
	//EAttributeAssignment:
	//    name = ID ':' value=EAssignmentValue;
	public EAttributeAssignmentElements getEAttributeAssignmentAccess() {
		return pEAttributeAssignment;
	}
	
	public ParserRule getEAttributeAssignmentRule() {
		return getEAttributeAssignmentAccess().getRule();
	}
	
	//EPropertyAssignments:
	//    {EPropertyAssignments} (properties+=EPropertyAssignment)*;
	public EPropertyAssignmentsElements getEPropertyAssignmentsAccess() {
		return pEPropertyAssignments;
	}
	
	public ParserRule getEPropertyAssignmentsRule() {
		return getEPropertyAssignmentsAccess().getRule();
	}
	
	//EPropertyAssignment:
	//    name = ID ':' value=EAssignmentValue;
	public EPropertyAssignmentElements getEPropertyAssignmentAccess() {
		return pEPropertyAssignment;
	}
	
	public ParserRule getEPropertyAssignmentRule() {
		return getEPropertyAssignmentAccess().getRule();
	}
	
	//EAssignmentValue:
	//    ESingleValue | ELIST | EMAP | EFunction
	//;
	public EAssignmentValueElements getEAssignmentValueAccess() {
		return pEAssignmentValue;
	}
	
	public ParserRule getEAssignmentValueRule() {
		return getEAssignmentValueAccess().getRule();
	}
	
	//EMAP:
	//    BEGIN
	//        map+=EMapEntry+
	//    END
	//;
	public EMAPElements getEMAPAccess() {
		return pEMAP;
	}
	
	public ParserRule getEMAPRule() {
		return getEMAPAccess().getRule();
	}
	
	//EMapEntry:
	//    key=ID ":" value=EAssignmentValue
	//;
	public EMapEntryElements getEMapEntryAccess() {
		return pEMapEntry;
	}
	
	public ParserRule getEMapEntryRule() {
		return getEMapEntryAccess().getRule();
	}
	
	//ELIST:
	//    {ELIST} '[' list+=EAlphaNumericValue? ("," list+=EAlphaNumericValue)* ']'
	//;
	public ELISTElements getELISTAccess() {
		return pELIST;
	}
	
	public ParserRule getELISTRule() {
		return getELISTAccess().getRule();
	}
	
	//EAlphaNumericValue:
	//    ESTRING | EFLOAT | ESIGNEDINT
	//;
	public EAlphaNumericValueElements getEAlphaNumericValueAccess() {
		return pEAlphaNumericValue;
	}
	
	public ParserRule getEAlphaNumericValueRule() {
		return getEAlphaNumericValueAccess().getRule();
	}
	
	//EInputs:
	//    {EInputs} (parameters+=EParameterDefinition)*;
	public EInputsElements getEInputsAccess() {
		return pEInputs;
	}
	
	public ParserRule getEInputsRule() {
		return getEInputsAccess().getRule();
	}
	
	//EParameterDefinition:
	//    name=ID ':'
	//    BEGIN
	//    parameter=EParameterDefinitionBody
	//    END;
	public EParameterDefinitionElements getEParameterDefinitionAccess() {
		return pEParameterDefinition;
	}
	
	public ParserRule getEParameterDefinitionRule() {
		return getEParameterDefinitionAccess().getRule();
	}
	
	//EParameterDefinitionBody:
	//    {EParameterDefinitionBody} (
	//    ('type:' type=EDataTypeName)? &
	//    ('description:' description=STRING)? &
	//    ('value:' value=EValueExpression)? &
	//    ('default:' default=EValueExpression)?);
	public EParameterDefinitionBodyElements getEParameterDefinitionBodyAccess() {
		return pEParameterDefinitionBody;
	}
	
	public ParserRule getEParameterDefinitionBodyRule() {
		return getEParameterDefinitionBodyAccess().getRule();
	}
	
	//EValueExpression:
	//    ESingleValue | EFunction;
	public EValueExpressionElements getEValueExpressionAccess() {
		return pEValueExpression;
	}
	
	public ParserRule getEValueExpressionRule() {
		return getEValueExpressionAccess().getRule();
	}
	
	//EFunction:
	//    GetProperty | GetAttribute | GetInput;
	public EFunctionElements getEFunctionAccess() {
		return pEFunction;
	}
	
	public ParserRule getEFunctionRule() {
		return getEFunctionAccess().getRule();
	}
	
	//GetAttribute:
	//    'get_attribute:'
	//    BEGIN
	//    attribute=GetAttributeBody
	//    END;
	public GetAttributeElements getGetAttributeAccess() {
		return pGetAttribute;
	}
	
	public ParserRule getGetAttributeRule() {
		return getGetAttributeAccess().getRule();
	}
	
	//GetAttributeBody:
	//    ('attribute:' attribute=EPREFIX_REF) &
	//    ('entity:' entity=EEntityReference) &
	//    ('req_cap:' req_cap=EPREFIX_REF)?;
	public GetAttributeBodyElements getGetAttributeBodyAccess() {
		return pGetAttributeBody;
	}
	
	public ParserRule getGetAttributeBodyRule() {
		return getGetAttributeBodyAccess().getRule();
	}
	
	//EEntityReference:
	//    EEntity | EPREFIX_TYPE | EPREFIX_ID
	//;
	public EEntityReferenceElements getEEntityReferenceAccess() {
		return pEEntityReference;
	}
	
	public ParserRule getEEntityReferenceRule() {
		return getEEntityReferenceAccess().getRule();
	}
	
	//EPREFIX_REF:
	//    EPREFIX_TYPE | EPREFIX_ID
	//;
	public EPREFIX_REFElements getEPREFIX_REFAccess() {
		return pEPREFIX_REF;
	}
	
	public ParserRule getEPREFIX_REFRule() {
		return getEPREFIX_REFAccess().getRule();
	}
	
	//EPREFIX_ID:
	//    (module=ID '/')? id=ID ('@'version=VERSION)?
	//;
	public EPREFIX_IDElements getEPREFIX_IDAccess() {
		return pEPREFIX_ID;
	}
	
	public ParserRule getEPREFIX_IDRule() {
		return getEPREFIX_IDAccess().getRule();
	}
	
	//EEntity:
	//    entity=ENTITY
	//;
	public EEntityElements getEEntityAccess() {
		return pEEntity;
	}
	
	public ParserRule getEEntityRule() {
		return getEEntityAccess().getRule();
	}
	
	//GetProperty:
	//    'get_property:'
	//    BEGIN
	//    property=GetPropertyBody
	//    END;
	public GetPropertyElements getGetPropertyAccess() {
		return pGetProperty;
	}
	
	public ParserRule getGetPropertyRule() {
		return getGetPropertyAccess().getRule();
	}
	
	//GetPropertyBody:
	//    ('property:' property=EPREFIX_REF) &
	//    ('entity:' entity=EEntityReference) &
	//    ('req_cap:' req_cap=EPREFIX_REF)?;
	public GetPropertyBodyElements getGetPropertyBodyAccess() {
		return pGetPropertyBody;
	}
	
	public ParserRule getGetPropertyBodyRule() {
		return getGetPropertyBodyAccess().getRule();
	}
	
	//GetInput:
	//    'get_input:' input=[EParameterDefinition]
	//;
	public GetInputElements getGetInputAccess() {
		return pGetInput;
	}
	
	public ParserRule getGetInputRule() {
		return getGetInputAccess().getRule();
	}
	
	//ESingleValue:
	//    ESTRING | EBOOLEAN | EFLOAT | ESIGNEDINT
	//;
	public ESingleValueElements getESingleValueAccess() {
		return pESingleValue;
	}
	
	public ParserRule getESingleValueRule() {
		return getESingleValueAccess().getRule();
	}
	
	//ESTRING:
	//    value = STRING
	//;
	public ESTRINGElements getESTRINGAccess() {
		return pESTRING;
	}
	
	public ParserRule getESTRINGRule() {
		return getESTRINGAccess().getRule();
	}
	
	//EBOOLEAN:
	//    value = BOOLEAN
	//;
	public EBOOLEANElements getEBOOLEANAccess() {
		return pEBOOLEAN;
	}
	
	public ParserRule getEBOOLEANRule() {
		return getEBOOLEANAccess().getRule();
	}
	
	//EFLOAT:
	//    value = FLOAT
	//;
	public EFLOATElements getEFLOATAccess() {
		return pEFLOAT;
	}
	
	public ParserRule getEFLOATRule() {
		return getEFLOATAccess().getRule();
	}
	
	//ESIGNEDINT:
	//    value = SIGNEDINT
	//;
	public ESIGNEDINTElements getESIGNEDINTAccess() {
		return pESIGNEDINT;
	}
	
	public ParserRule getESIGNEDINTRule() {
		return getESIGNEDINTAccess().getRule();
	}
	
	//EDataTypeName:
	//    EPREFIX_TYPE | EPRIMITIVE_TYPE;
	public EDataTypeNameElements getEDataTypeNameAccess() {
		return pEDataTypeName;
	}
	
	public ParserRule getEDataTypeNameRule() {
		return getEDataTypeNameAccess().getRule();
	}
	
	//EPREFIX_TYPE:
	//    (module=ID '/')? type=QUALIFIED_NAME
	//;
	public EPREFIX_TYPEElements getEPREFIX_TYPEAccess() {
		return pEPREFIX_TYPE;
	}
	
	public ParserRule getEPREFIX_TYPERule() {
		return getEPREFIX_TYPEAccess().getRule();
	}
	
	//EPRIMITIVE_TYPE:
	//    type=ID
	//;
	public EPRIMITIVE_TYPEElements getEPRIMITIVE_TYPEAccess() {
		return pEPRIMITIVE_TYPE;
	}
	
	public ParserRule getEPRIMITIVE_TYPERule() {
		return getEPRIMITIVE_TYPEAccess().getRule();
	}
	
	//terminal QUALIFIED_NAME: //FIXME convert to data type rule, remove terminal
	//    ID ('.' ID)+;
	public TerminalRule getQUALIFIED_NAMERule() {
		return tQUALIFIED_NAME;
	}
	
	//terminal BOOLEAN returns ecore::EBoolean:
	//    'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//SIGNEDINT returns ecore::EInt: '-'? INT;
	public SIGNEDINTElements getSIGNEDINTAccess() {
		return pSIGNEDINT;
	}
	
	public ParserRule getSIGNEDINTRule() {
		return getSIGNEDINTAccess().getRule();
	}
	
	//FLOAT returns ecore::EFloat: INT? '.' INT;
	public FLOATElements getFLOATAccess() {
		return pFLOAT;
	}
	
	public ParserRule getFLOATRule() {
		return getFLOATAccess().getRule();
	}
	
	//terminal ENTITY:
	//    'SELF' | 'SOURCE' | 'TARGET' | 'HOST';
	public TerminalRule getENTITYRule() {
		return tENTITY;
	}
	
	//@Override
	//terminal ID:
	//    '^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '-' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal VERSION:
	//    '^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '-' | '.' | '0'..'9')*;
	public TerminalRule getVERSIONRule() {
		return tVERSION;
	}
	
	////Positional blocks delimited with indentation
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
