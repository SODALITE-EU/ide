/**
 * generated by Xtext 2.25.0
 */
package org.sodalite.dsl.aADM.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.sodalite.dsl.aADM.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.sodalite.dsl.aADM.AADMPackage
 * @generated
 */
public class AADMSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static AADMPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AADMSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = AADMPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case AADMPackage.AADM_MODEL:
      {
        AADM_Model aadM_Model = (AADM_Model)theEObject;
        T result = caseAADM_Model(aadM_Model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EOUTPUTS:
      {
        EOutputs eOutputs = (EOutputs)theEObject;
        T result = caseEOutputs(eOutputs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPOLICIES:
      {
        EPolicies ePolicies = (EPolicies)theEObject;
        T result = caseEPolicies(ePolicies);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPOLICY_DEFINITION:
      {
        EPolicyDefinition ePolicyDefinition = (EPolicyDefinition)theEObject;
        T result = caseEPolicyDefinition(ePolicyDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPOLICY_DEFINITION_BODY:
      {
        EPolicyDefinitionBody ePolicyDefinitionBody = (EPolicyDefinitionBody)theEObject;
        T result = caseEPolicyDefinitionBody(ePolicyDefinitionBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ETRIGGER_DEFINITIONS:
      {
        ETriggerDefinitions eTriggerDefinitions = (ETriggerDefinitions)theEObject;
        T result = caseETriggerDefinitions(eTriggerDefinitions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ETRIGGER_DEFINITION:
      {
        ETriggerDefinition eTriggerDefinition = (ETriggerDefinition)theEObject;
        T result = caseETriggerDefinition(eTriggerDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ETRIGGER_DEFINITION_BODY:
      {
        ETriggerDefinitionBody eTriggerDefinitionBody = (ETriggerDefinitionBody)theEObject;
        T result = caseETriggerDefinitionBody(eTriggerDefinitionBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EACTIVITY_DEFINITIONS:
      {
        EActivityDefinitions eActivityDefinitions = (EActivityDefinitions)theEObject;
        T result = caseEActivityDefinitions(eActivityDefinitions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EACTIVITY_DEFINITION:
      {
        EActivityDefinition eActivityDefinition = (EActivityDefinition)theEObject;
        T result = caseEActivityDefinition(eActivityDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECALL_OPERATION_ACTIVITY_DEFINITION:
      {
        ECallOperationActivityDefinition eCallOperationActivityDefinition = (ECallOperationActivityDefinition)theEObject;
        T result = caseECallOperationActivityDefinition(eCallOperationActivityDefinition);
        if (result == null) result = caseEActivityDefinition(eCallOperationActivityDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECALL_OPERATION_ACTIVITY_DEFINITION_BODY:
      {
        ECallOperationActivityDefinitionBody eCallOperationActivityDefinitionBody = (ECallOperationActivityDefinitionBody)theEObject;
        T result = caseECallOperationActivityDefinitionBody(eCallOperationActivityDefinitionBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ETIME_INTERVAL:
      {
        ETimeInterval eTimeInterval = (ETimeInterval)theEObject;
        T result = caseETimeInterval(eTimeInterval);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EEVEN_FILTER:
      {
        EEvenFilter eEvenFilter = (EEvenFilter)theEObject;
        T result = caseEEvenFilter(eEvenFilter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EEXTENDED_TRIGGER_CONDITION:
      {
        EExtendedTriggerCondition eExtendedTriggerCondition = (EExtendedTriggerCondition)theEObject;
        T result = caseEExtendedTriggerCondition(eExtendedTriggerCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECONDITION_CLAUSE_DEFINITION:
      {
        EConditionClauseDefinition eConditionClauseDefinition = (EConditionClauseDefinition)theEObject;
        T result = caseEConditionClauseDefinition(eConditionClauseDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECONDITION_CLAUSE_DEFINITION_AND:
      {
        EConditionClauseDefinitionAND eConditionClauseDefinitionAND = (EConditionClauseDefinitionAND)theEObject;
        T result = caseEConditionClauseDefinitionAND(eConditionClauseDefinitionAND);
        if (result == null) result = caseEConditionClauseDefinition(eConditionClauseDefinitionAND);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECONDITION_CLAUSE_DEFINITION_OR:
      {
        EConditionClauseDefinitionOR eConditionClauseDefinitionOR = (EConditionClauseDefinitionOR)theEObject;
        T result = caseEConditionClauseDefinitionOR(eConditionClauseDefinitionOR);
        if (result == null) result = caseEConditionClauseDefinition(eConditionClauseDefinitionOR);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECONDITION_CLAUSE_DEFINITION_NOT:
      {
        EConditionClauseDefinitionNOT eConditionClauseDefinitionNOT = (EConditionClauseDefinitionNOT)theEObject;
        T result = caseEConditionClauseDefinitionNOT(eConditionClauseDefinitionNOT);
        if (result == null) result = caseEConditionClauseDefinition(eConditionClauseDefinitionNOT);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECONDITION_CLAUSE_DEFINITION_ASSERT:
      {
        EConditionClauseDefinitionAssert eConditionClauseDefinitionAssert = (EConditionClauseDefinitionAssert)theEObject;
        T result = caseEConditionClauseDefinitionAssert(eConditionClauseDefinitionAssert);
        if (result == null) result = caseEConditionClauseDefinition(eConditionClauseDefinitionAssert);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EASSERTION_DEFINITION:
      {
        EAssertionDefinition eAssertionDefinition = (EAssertionDefinition)theEObject;
        T result = caseEAssertionDefinition(eAssertionDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECONSTRAINT_LIST:
      {
        EConstraintList eConstraintList = (EConstraintList)theEObject;
        T result = caseEConstraintList(eConstraintList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECONSTRAINT:
      {
        EConstraint eConstraint = (EConstraint)theEObject;
        T result = caseEConstraint(eConstraint);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EMAX_LENGTH:
      {
        EMaxLength eMaxLength = (EMaxLength)theEObject;
        T result = caseEMaxLength(eMaxLength);
        if (result == null) result = caseEConstraint(eMaxLength);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EMIN_LENGTH:
      {
        EMinLength eMinLength = (EMinLength)theEObject;
        T result = caseEMinLength(eMinLength);
        if (result == null) result = caseEConstraint(eMinLength);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ELENGTH:
      {
        ELength eLength = (ELength)theEObject;
        T result = caseELength(eLength);
        if (result == null) result = caseEConstraint(eLength);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EVALID_VALUES:
      {
        EValid_Values eValid_Values = (EValid_Values)theEObject;
        T result = caseEValid_Values(eValid_Values);
        if (result == null) result = caseEConstraint(eValid_Values);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EIN_RANGE:
      {
        EInRange eInRange = (EInRange)theEObject;
        T result = caseEInRange(eInRange);
        if (result == null) result = caseEConstraint(eInRange);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ELESS_OR_EQUAL:
      {
        ELessOrEqual eLessOrEqual = (ELessOrEqual)theEObject;
        T result = caseELessOrEqual(eLessOrEqual);
        if (result == null) result = caseEConstraint(eLessOrEqual);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ELESS_THAN:
      {
        ELessThan eLessThan = (ELessThan)theEObject;
        T result = caseELessThan(eLessThan);
        if (result == null) result = caseEConstraint(eLessThan);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EGREATER_OR_EQUAL:
      {
        EGreaterOrEqual eGreaterOrEqual = (EGreaterOrEqual)theEObject;
        T result = caseEGreaterOrEqual(eGreaterOrEqual);
        if (result == null) result = caseEConstraint(eGreaterOrEqual);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EGREATER_THAN:
      {
        EGreaterThan eGreaterThan = (EGreaterThan)theEObject;
        T result = caseEGreaterThan(eGreaterThan);
        if (result == null) result = caseEConstraint(eGreaterThan);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EEQUAL:
      {
        EEqual eEqual = (EEqual)theEObject;
        T result = caseEEqual(eEqual);
        if (result == null) result = caseEConstraint(eEqual);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ETARGET:
      {
        ETarget eTarget = (ETarget)theEObject;
        T result = caseETarget(eTarget);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ENODE_TEMPLATES:
      {
        ENodeTemplates eNodeTemplates = (ENodeTemplates)theEObject;
        T result = caseENodeTemplates(eNodeTemplates);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ENODE_TEMPLATE:
      {
        ENodeTemplate eNodeTemplate = (ENodeTemplate)theEObject;
        T result = caseENodeTemplate(eNodeTemplate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ENODE_TEMPLATE_BODY:
      {
        ENodeTemplateBody eNodeTemplateBody = (ENodeTemplateBody)theEObject;
        T result = caseENodeTemplateBody(eNodeTemplateBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECAPABILITY_ASSIGNMENTS:
      {
        ECapabilityAssignments eCapabilityAssignments = (ECapabilityAssignments)theEObject;
        T result = caseECapabilityAssignments(eCapabilityAssignments);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ECAPABILITY_ASSIGNMENT:
      {
        ECapabilityAssignment eCapabilityAssignment = (ECapabilityAssignment)theEObject;
        T result = caseECapabilityAssignment(eCapabilityAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EREQUIREMENT_ASSIGNMENTS:
      {
        ERequirementAssignments eRequirementAssignments = (ERequirementAssignments)theEObject;
        T result = caseERequirementAssignments(eRequirementAssignments);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EREQUIREMENT_ASSIGNMENT:
      {
        ERequirementAssignment eRequirementAssignment = (ERequirementAssignment)theEObject;
        T result = caseERequirementAssignment(eRequirementAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EATTRIBUTE_ASSIGNMENTS:
      {
        EAttributeAssignments eAttributeAssignments = (EAttributeAssignments)theEObject;
        T result = caseEAttributeAssignments(eAttributeAssignments);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EATTRIBUTE_ASSIGNMENT:
      {
        EAttributeAssignment eAttributeAssignment = (EAttributeAssignment)theEObject;
        T result = caseEAttributeAssignment(eAttributeAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPROPERTY_ASSIGNMENTS:
      {
        EPropertyAssignments ePropertyAssignments = (EPropertyAssignments)theEObject;
        T result = caseEPropertyAssignments(ePropertyAssignments);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPROPERTY_ASSIGNMENT:
      {
        EPropertyAssignment ePropertyAssignment = (EPropertyAssignment)theEObject;
        T result = caseEPropertyAssignment(ePropertyAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EASSIGNMENT_VALUE:
      {
        EAssignmentValue eAssignmentValue = (EAssignmentValue)theEObject;
        T result = caseEAssignmentValue(eAssignmentValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EMAP:
      {
        EMAP emap = (EMAP)theEObject;
        T result = caseEMAP(emap);
        if (result == null) result = caseEAssignmentValue(emap);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EMAP_ENTRY:
      {
        EMapEntry eMapEntry = (EMapEntry)theEObject;
        T result = caseEMapEntry(eMapEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ELIST:
      {
        ELIST elist = (ELIST)theEObject;
        T result = caseELIST(elist);
        if (result == null) result = caseEAssignmentValue(elist);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EALPHA_NUMERIC_VALUE:
      {
        EAlphaNumericValue eAlphaNumericValue = (EAlphaNumericValue)theEObject;
        T result = caseEAlphaNumericValue(eAlphaNumericValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EINPUTS:
      {
        EInputs eInputs = (EInputs)theEObject;
        T result = caseEInputs(eInputs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPARAMETER_DEFINITION:
      {
        EParameterDefinition eParameterDefinition = (EParameterDefinition)theEObject;
        T result = caseEParameterDefinition(eParameterDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPARAMETER_DEFINITION_BODY:
      {
        EParameterDefinitionBody eParameterDefinitionBody = (EParameterDefinitionBody)theEObject;
        T result = caseEParameterDefinitionBody(eParameterDefinitionBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EVALUE_EXPRESSION:
      {
        EValueExpression eValueExpression = (EValueExpression)theEObject;
        T result = caseEValueExpression(eValueExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EFUNCTION:
      {
        EFunction eFunction = (EFunction)theEObject;
        T result = caseEFunction(eFunction);
        if (result == null) result = caseEAssignmentValue(eFunction);
        if (result == null) result = caseEValueExpression(eFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.GET_ATTRIBUTE:
      {
        GetAttribute getAttribute = (GetAttribute)theEObject;
        T result = caseGetAttribute(getAttribute);
        if (result == null) result = caseEFunction(getAttribute);
        if (result == null) result = caseEAssignmentValue(getAttribute);
        if (result == null) result = caseEValueExpression(getAttribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.GET_ATTRIBUTE_BODY:
      {
        GetAttributeBody getAttributeBody = (GetAttributeBody)theEObject;
        T result = caseGetAttributeBody(getAttributeBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EENTITY_REFERENCE:
      {
        EEntityReference eEntityReference = (EEntityReference)theEObject;
        T result = caseEEntityReference(eEntityReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPREFIX_REF:
      {
        EPREFIX_REF eprefiX_REF = (EPREFIX_REF)theEObject;
        T result = caseEPREFIX_REF(eprefiX_REF);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPREFIX_ID:
      {
        EPREFIX_ID eprefiX_ID = (EPREFIX_ID)theEObject;
        T result = caseEPREFIX_ID(eprefiX_ID);
        if (result == null) result = caseEEntityReference(eprefiX_ID);
        if (result == null) result = caseEPREFIX_REF(eprefiX_ID);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EENTITY:
      {
        EEntity eEntity = (EEntity)theEObject;
        T result = caseEEntity(eEntity);
        if (result == null) result = caseEEntityReference(eEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.GET_PROPERTY:
      {
        GetProperty getProperty = (GetProperty)theEObject;
        T result = caseGetProperty(getProperty);
        if (result == null) result = caseEFunction(getProperty);
        if (result == null) result = caseEAssignmentValue(getProperty);
        if (result == null) result = caseEValueExpression(getProperty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.GET_PROPERTY_BODY:
      {
        GetPropertyBody getPropertyBody = (GetPropertyBody)theEObject;
        T result = caseGetPropertyBody(getPropertyBody);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.GET_INPUT:
      {
        GetInput getInput = (GetInput)theEObject;
        T result = caseGetInput(getInput);
        if (result == null) result = caseEFunction(getInput);
        if (result == null) result = caseEAssignmentValue(getInput);
        if (result == null) result = caseEValueExpression(getInput);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ESINGLE_VALUE:
      {
        ESingleValue eSingleValue = (ESingleValue)theEObject;
        T result = caseESingleValue(eSingleValue);
        if (result == null) result = caseEAssignmentValue(eSingleValue);
        if (result == null) result = caseEValueExpression(eSingleValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ESTRING:
      {
        ESTRING estring = (ESTRING)theEObject;
        T result = caseESTRING(estring);
        if (result == null) result = caseEAlphaNumericValue(estring);
        if (result == null) result = caseESingleValue(estring);
        if (result == null) result = caseEAssignmentValue(estring);
        if (result == null) result = caseEValueExpression(estring);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EBOOLEAN:
      {
        EBOOLEAN eboolean = (EBOOLEAN)theEObject;
        T result = caseEBOOLEAN(eboolean);
        if (result == null) result = caseESingleValue(eboolean);
        if (result == null) result = caseEAssignmentValue(eboolean);
        if (result == null) result = caseEValueExpression(eboolean);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EFLOAT:
      {
        EFLOAT efloat = (EFLOAT)theEObject;
        T result = caseEFLOAT(efloat);
        if (result == null) result = caseEAlphaNumericValue(efloat);
        if (result == null) result = caseESingleValue(efloat);
        if (result == null) result = caseEAssignmentValue(efloat);
        if (result == null) result = caseEValueExpression(efloat);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.ESIGNEDINT:
      {
        ESIGNEDINT esignedint = (ESIGNEDINT)theEObject;
        T result = caseESIGNEDINT(esignedint);
        if (result == null) result = caseEAlphaNumericValue(esignedint);
        if (result == null) result = caseESingleValue(esignedint);
        if (result == null) result = caseEAssignmentValue(esignedint);
        if (result == null) result = caseEValueExpression(esignedint);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EDATA_TYPE_NAME:
      {
        EDataTypeName eDataTypeName = (EDataTypeName)theEObject;
        T result = caseEDataTypeName(eDataTypeName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPREFIX_TYPE:
      {
        EPREFIX_TYPE eprefiX_TYPE = (EPREFIX_TYPE)theEObject;
        T result = caseEPREFIX_TYPE(eprefiX_TYPE);
        if (result == null) result = caseEEntityReference(eprefiX_TYPE);
        if (result == null) result = caseEPREFIX_REF(eprefiX_TYPE);
        if (result == null) result = caseEDataTypeName(eprefiX_TYPE);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AADMPackage.EPRIMITIVE_TYPE:
      {
        EPRIMITIVE_TYPE eprimitivE_TYPE = (EPRIMITIVE_TYPE)theEObject;
        T result = caseEPRIMITIVE_TYPE(eprimitivE_TYPE);
        if (result == null) result = caseEDataTypeName(eprimitivE_TYPE);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>AADM Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>AADM Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAADM_Model(AADM_Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EOutputs</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EOutputs</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEOutputs(EOutputs object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPolicies</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPolicies</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPolicies(EPolicies object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPolicy Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPolicy Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPolicyDefinition(EPolicyDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPolicy Definition Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPolicy Definition Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPolicyDefinitionBody(EPolicyDefinitionBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETrigger Definitions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETrigger Definitions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETriggerDefinitions(ETriggerDefinitions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETrigger Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETrigger Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETriggerDefinition(ETriggerDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETrigger Definition Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETrigger Definition Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETriggerDefinitionBody(ETriggerDefinitionBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EActivity Definitions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EActivity Definitions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEActivityDefinitions(EActivityDefinitions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EActivity Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EActivity Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEActivityDefinition(EActivityDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECall Operation Activity Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECall Operation Activity Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECallOperationActivityDefinition(ECallOperationActivityDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECall Operation Activity Definition Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECall Operation Activity Definition Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECallOperationActivityDefinitionBody(ECallOperationActivityDefinitionBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETime Interval</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETime Interval</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETimeInterval(ETimeInterval object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EEven Filter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EEven Filter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEEvenFilter(EEvenFilter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EExtended Trigger Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EExtended Trigger Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEExtendedTriggerCondition(EExtendedTriggerCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECondition Clause Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECondition Clause Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConditionClauseDefinition(EConditionClauseDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECondition Clause Definition AND</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECondition Clause Definition AND</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConditionClauseDefinitionAND(EConditionClauseDefinitionAND object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECondition Clause Definition OR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECondition Clause Definition OR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConditionClauseDefinitionOR(EConditionClauseDefinitionOR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECondition Clause Definition NOT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECondition Clause Definition NOT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConditionClauseDefinitionNOT(EConditionClauseDefinitionNOT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECondition Clause Definition Assert</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECondition Clause Definition Assert</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConditionClauseDefinitionAssert(EConditionClauseDefinitionAssert object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAssertion Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAssertion Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAssertionDefinition(EAssertionDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EConstraint List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EConstraint List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConstraintList(EConstraintList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EConstraint</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EConstraint</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConstraint(EConstraint object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMax Length</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMax Length</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMaxLength(EMaxLength object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMin Length</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMin Length</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMinLength(EMinLength object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELength</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELength</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELength(ELength object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EValid Values</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EValid Values</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEValid_Values(EValid_Values object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EIn Range</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EIn Range</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEInRange(EInRange object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELess Or Equal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELess Or Equal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELessOrEqual(ELessOrEqual object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELess Than</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELess Than</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELessThan(ELessThan object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EGreater Or Equal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EGreater Or Equal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEGreaterOrEqual(EGreaterOrEqual object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EGreater Than</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EGreater Than</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEGreaterThan(EGreaterThan object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EEqual</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EEqual</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEEqual(EEqual object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETarget</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETarget</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETarget(ETarget object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENode Templates</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENode Templates</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENodeTemplates(ENodeTemplates object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENode Template</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENode Template</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENodeTemplate(ENodeTemplate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENode Template Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENode Template Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENodeTemplateBody(ENodeTemplateBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECapability Assignments</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECapability Assignments</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECapabilityAssignments(ECapabilityAssignments object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECapability Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECapability Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECapabilityAssignment(ECapabilityAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERequirement Assignments</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERequirement Assignments</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERequirementAssignments(ERequirementAssignments object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERequirement Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERequirement Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERequirementAssignment(ERequirementAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAttribute Assignments</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAttribute Assignments</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAttributeAssignments(EAttributeAssignments object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAttribute Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAttribute Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAttributeAssignment(EAttributeAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EProperty Assignments</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EProperty Assignments</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPropertyAssignments(EPropertyAssignments object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EProperty Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EProperty Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPropertyAssignment(EPropertyAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAssignment Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAssignment Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAssignmentValue(EAssignmentValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMAP</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMAP</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMAP(EMAP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EMap Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EMap Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEMapEntry(EMapEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELIST</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELIST</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELIST(ELIST object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAlpha Numeric Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAlpha Numeric Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAlphaNumericValue(EAlphaNumericValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EInputs</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EInputs</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEInputs(EInputs object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EParameter Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EParameter Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEParameterDefinition(EParameterDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EParameter Definition Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EParameter Definition Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEParameterDefinitionBody(EParameterDefinitionBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EValue Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EValue Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEValueExpression(EValueExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFunction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFunction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFunction(EFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Get Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Get Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGetAttribute(GetAttribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Get Attribute Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Get Attribute Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGetAttributeBody(GetAttributeBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EEntity Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EEntity Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEEntityReference(EEntityReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPREFIX REF</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPREFIX REF</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPREFIX_REF(EPREFIX_REF object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPREFIX ID</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPREFIX ID</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPREFIX_ID(EPREFIX_ID object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EEntity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EEntity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEEntity(EEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Get Property</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Get Property</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGetProperty(GetProperty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Get Property Body</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Get Property Body</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGetPropertyBody(GetPropertyBody object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Get Input</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Get Input</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGetInput(GetInput object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ESingle Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ESingle Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseESingleValue(ESingleValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ESTRING</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ESTRING</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseESTRING(ESTRING object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBOOLEAN</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBOOLEAN</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBOOLEAN(EBOOLEAN object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFLOAT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFLOAT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFLOAT(EFLOAT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ESIGNEDINT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ESIGNEDINT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseESIGNEDINT(ESIGNEDINT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EData Type Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EData Type Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDataTypeName(EDataTypeName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPREFIX TYPE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPREFIX TYPE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPREFIX_TYPE(EPREFIX_TYPE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPRIMITIVE TYPE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPRIMITIVE TYPE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPRIMITIVE_TYPE(EPRIMITIVE_TYPE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //AADMSwitch
